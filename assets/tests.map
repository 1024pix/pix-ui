{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/acceptance/pix-modal-page-test.js","dummy/tests/acceptance/pix-sidebar-page-test.js","dummy/tests/helpers/click-by-label.js","dummy/tests/helpers/contains.js","dummy/tests/helpers/create-glimmer-component.js","dummy/tests/helpers/fill-in-by-label.js","dummy/tests/helpers/get-by-label.js","dummy/tests/helpers/query-by-label.js","dummy/tests/helpers/wait-for.js","dummy/tests/integration/components/pix-background-header-test.js","dummy/tests/integration/components/pix-banner-test.js","dummy/tests/integration/components/pix-block-test.js","dummy/tests/integration/components/pix-button-link-test.js","dummy/tests/integration/components/pix-button-test.js","dummy/tests/integration/components/pix-button-upload-test.js","dummy/tests/integration/components/pix-checkbox-test.js","dummy/tests/integration/components/pix-collapsible-test.js","dummy/tests/integration/components/pix-filter-banner-test.js","dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js","dummy/tests/integration/components/pix-icon-button-test.js","dummy/tests/integration/components/pix-indicator-card-test.js","dummy/tests/integration/components/pix-input-code-test.js","dummy/tests/integration/components/pix-input-password-test.js","dummy/tests/integration/components/pix-input-test.js","dummy/tests/integration/components/pix-label-test.js","dummy/tests/integration/components/pix-message-test.js","dummy/tests/integration/components/pix-modal-test.js","dummy/tests/integration/components/pix-multi-select-test.js","dummy/tests/integration/components/pix-pagination-test.js","dummy/tests/integration/components/pix-progress-gauge-test.js","dummy/tests/integration/components/pix-radio-button-test.js","dummy/tests/integration/components/pix-return-to-test.js","dummy/tests/integration/components/pix-search-input-test.js","dummy/tests/integration/components/pix-select-test.js","dummy/tests/integration/components/pix-selectable-tag-test.js","dummy/tests/integration/components/pix-sidebar-test.js","dummy/tests/integration/components/pix-stars-test.js","dummy/tests/integration/components/pix-tag-test.js","dummy/tests/integration/components/pix-textarea-test.js","dummy/tests/integration/components/pix-toggle-test.js","dummy/tests/integration/components/pix-tooltip-test.js","dummy/tests/integration/modifiers/on-escape-action-test.js","dummy/tests/test-helper.js","dummy/tests/unit/components/pix-banner-test.js","dummy/tests/unit/components/pix-radio-button-test.js","dummy/tests/unit/components/pix-return-to-test.js","dummy/tests/unit/components/pix-search-input-test.js","dummy/tests/unit/components/pix-select-test.js","dummy/tests/unit/translations/flatten-object-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"dummy/tests/acceptance/pix-modal-page-test\", [\"@ember/test-helpers\", \"@1024pix/ember-testing-library\", \"ember-qunit\", \"qunit\", \"dummy/tests/helpers/wait-for\"], function (_testHelpers, _emberTestingLibrary, _emberQunit, _qunit, _waitFor) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"@ember/test-helpers\",0,\"@1024pix/ember-testing-library\",0,\"ember-qunit\",0,\"qunit\",0,\"dummy/tests/helpers/wait-for\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Acceptance | PixModalPageTest', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Should redirect to link', async function (assert) {\n      // given\n      const screen = await (0, _emberTestingLibrary.visit)('/modal');\n      await (0, _testHelpers.click)(screen.getByRole('button', {\n        name: 'Ouvrir la modale'\n      }));\n      await (0, _waitFor.waitForDialog)();\n\n      // when\n      await (0, _testHelpers.click)(screen.getByRole('link', {\n        name: 'My link'\n      }));\n\n      // then\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/hello-world');\n    });\n  });\n});","define(\"dummy/tests/acceptance/pix-sidebar-page-test\", [\"@ember/test-helpers\", \"@1024pix/ember-testing-library\", \"ember-qunit\", \"qunit\", \"dummy/tests/helpers/wait-for\"], function (_testHelpers, _emberTestingLibrary, _emberQunit, _qunit, _waitFor) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"@ember/test-helpers\",0,\"@1024pix/ember-testing-library\",0,\"ember-qunit\",0,\"qunit\",0,\"dummy/tests/helpers/wait-for\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Acceptance | PixSidebarPageTest', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _qunit.test)('Should redirect to link', async function (assert) {\n      // given\n      const screen = await (0, _emberTestingLibrary.visit)('/sidebar');\n      await (0, _testHelpers.click)(screen.getByRole('button', {\n        name: 'Ouvrir la sidebar'\n      }));\n      await (0, _waitFor.waitForDialog)();\n\n      // when\n      await (0, _testHelpers.click)(screen.getByRole('link', {\n        name: 'My link'\n      }));\n\n      // then\n      assert.strictEqual((0, _testHelpers.currentURL)(), '/hello-world');\n    });\n  });\n});","define(\"dummy/tests/helpers/click-by-label\", [\"exports\", \"@ember/test-helpers\", \"dummy/tests/helpers/get-by-label\"], function (_exports, _testHelpers, _getByLabel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = clickByLabel;\n  0; //eaimeta@70e063a35619d71f0,\"@ember/test-helpers\",0,\"dummy/tests/helpers/get-by-label\"eaimeta@70e063a35619d71f\n  function clickByLabel(labelText) {\n    const clickableElement = (0, _getByLabel.default)(labelText);\n    return (0, _testHelpers.click)(clickableElement);\n  }\n});","define(\"dummy/tests/helpers/contains\", [\"exports\", \"@ember/test-helpers\"], function (_exports, _testHelpers) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.contains = contains;\n  _exports.notContains = notContains;\n  0; //eaimeta@70e063a35619d71f0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  function _isTextInElement(element, text) {\n    const isTextFoundInElement = element.textContent?.trim().includes(text) || element.value?.trim().includes(text);\n    if (isTextFoundInElement) {\n      return true;\n    }\n    const hasElementChildren = element.children.length > 0;\n    if (hasElementChildren) {\n      for (let i = 0; i < element.children.length; i++) {\n        if (_isTextInElement(element.children[i], text)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  function contains(text) {\n    const result = _isTextInElement((0, _testHelpers.getRootElement)(), text);\n    let message = `There is no elements with \"${text}\"`;\n    if (result) {\n      message = `Element with \"${text}\" found`;\n    }\n    this.pushResult({\n      result,\n      message\n    });\n  }\n  function notContains(text) {\n    const elements = _isTextInElement((0, _testHelpers.getRootElement)(), text);\n    const result = elements.length === 0;\n    let message = `Element with \"${text}\" found`;\n    if (result) {\n      message = `There is no elements with \"${text}\"`;\n    }\n    this.pushResult({\n      result,\n      message\n    });\n  }\n});","define(\"dummy/tests/helpers/create-glimmer-component\", [\"exports\", \"@ember/test-helpers\", \"@glimmer/component/-private/ember-component-manager\"], function (_exports, _testHelpers, _emberComponentManager) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = createComponent;\n  0; //eaimeta@70e063a35619d71f0,\"@ember/test-helpers\",0,\"@glimmer/component/-private/ember-component-manager\",0,\"@embroider/macros\"eaimeta@70e063a35619d71f\n  function createComponent(lookupPath, named = {}) {\n    const {\n      owner\n    } = (0, _testHelpers.getContext)();\n    let componentClass;\n    {\n      const result = owner.factoryFor(`component:${lookupPath}`);\n      componentClass = result.class;\n    }\n    const componentManager = new _emberComponentManager.default(owner);\n    return componentManager.createComponent(componentClass, {\n      named\n    });\n  }\n});","define(\"dummy/tests/helpers/fill-in-by-label\", [\"exports\", \"@ember/test-helpers\", \"dummy/tests/helpers/get-by-label\"], function (_exports, _testHelpers, _getByLabel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = fillInByLabel;\n  0; //eaimeta@70e063a35619d71f0,\"@ember/test-helpers\",0,\"dummy/tests/helpers/get-by-label\"eaimeta@70e063a35619d71f\n  function fillInByLabel(labelText, value) {\n    const control = (0, _getByLabel.default)(labelText);\n    return (0, _testHelpers.fillIn)(control, value);\n  }\n});","define(\"dummy/tests/helpers/get-by-label\", [\"exports\", \"dummy/tests/helpers/query-by-label\"], function (_exports, _queryByLabel) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = getByLabel;\n  0; //eaimeta@70e063a35619d71f0,\"dummy/tests/helpers/query-by-label\"eaimeta@70e063a35619d71f\n  function getByLabel(labelText) {\n    const labelledElement = (0, _queryByLabel.default)(labelText);\n    if (!labelledElement) {\n      throw new Error(`Cannot find any element labelled \"${labelText}\".`);\n    }\n    return labelledElement;\n  }\n});","define(\"dummy/tests/helpers/query-by-label\", [\"exports\", \"@ember/test-helpers\"], function (_exports, _testHelpers) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = queryByLabel;\n  0; //eaimeta@70e063a35619d71f0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  function queryByLabel(labelText) {\n    const labelElement = _findLabelElement(labelText);\n    if (labelElement) {\n      return _getElementControlledByLabel(labelElement, labelText);\n    }\n    const labelledElement = _findElementWithLabel(labelText);\n    if (!labelledElement) {\n      return null;\n    }\n    return labelledElement;\n  }\n  function _findLabelElement(labelText) {\n    return (0, _testHelpers.findAll)('label').find(label => label.innerText.includes(labelText));\n  }\n  function _getElementControlledByLabel(label, labelText) {\n    if (!label.control) {\n      throw new Error(`Found label \"${labelText}\" but no associated form control.`);\n    }\n    return label.control;\n  }\n  function _findElementWithLabel(labelText) {\n    const labellableElementSelectors = ['button', 'a[href]', '[role=\"button\"]', 'input', 'textarea', 'select', 'label[for]', 'img'];\n    return (0, _testHelpers.findAll)(labellableElementSelectors.join(',')).find(_matchesLabel(labelText));\n  }\n  function _matchesLabel(labelText) {\n    return element => _matchesInnerText(element, labelText) || _matchesTitle(element, labelText) || _matchesAriaLabel(element, labelText) || _matchesAltAttribute(element, labelText);\n  }\n  function _matchesInnerText(element, labelText) {\n    return element.innerText.includes(labelText);\n  }\n  function _matchesTitle(element, labelText) {\n    return element.title?.includes(labelText);\n  }\n  function _matchesAltAttribute(element, labelText) {\n    return element.alt?.includes(labelText);\n  }\n  function _matchesAriaLabel(element, labelText) {\n    const ariaLabel = element.getAttribute('aria-label');\n    return ariaLabel?.includes(labelText);\n  }\n});","define(\"dummy/tests/helpers/wait-for\", [\"exports\", \"@1024pix/ember-testing-library\", \"@ember/test-helpers\"], function (_exports, _emberTestingLibrary, _testHelpers) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.waitForDialog = waitForDialog;\n  0; //eaimeta@70e063a35619d71f0,\"@1024pix/ember-testing-library\",0,\"@ember/test-helpers\"eaimeta@70e063a35619d71f\n  async function waitForDialog() {\n    const screen = await (0, _emberTestingLibrary.getScreen)();\n    await (0, _testHelpers.waitUntil)(() => {\n      try {\n        screen.getByRole('dialog');\n        return true;\n      } catch {\n        return false;\n      }\n    });\n  }\n});","define(\"dummy/tests/integration/components/pix-background-header-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | pix-background-header', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const BACKGROUND_HEADER_SELECTOR = '.pix-background-header';\n    const BACKGROUND_SELECTOR = `${BACKGROUND_HEADER_SELECTOR} .pix-background-header__background`;\n    const BACKGROUND_CONTENT_SELECTOR = `${BACKGROUND_HEADER_SELECTOR} .pix-background-header__content`;\n    (0, _qunit.test)('it renders the default PixBackgroundHeader', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBackgroundHeader>\n        Je suis un beau background bleu\n      </PixBackgroundHeader>\n      */\n      {\n        \"id\": \"aEThCWik\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n  Je suis un beau background bleu\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-background-header\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-background-header-test.js\",\n        \"isStrictMode\": false\n      }));\n      const backgroundHeaderElement = this.element.querySelector(BACKGROUND_HEADER_SELECTOR);\n      const backgroundElement = this.element.querySelector(BACKGROUND_SELECTOR);\n\n      // then\n      assert.contains('Je suis un beau background bleu');\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(backgroundHeaderElement.className, 'pix-background-header');\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(backgroundElement.className, 'pix-background-header__background');\n    });\n    (0, _qunit.module)('when there is PixBloc inside PixBackgroundHeader component', function () {\n      (0, _qunit.test)('first PixBlock render', async function (assert) {\n        // given\n        this.set('shadowWeight', 'heavy');\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixBackgroundHeader>\n          <PixBlock @shadow={{this.shadowWeight}}>Je suis un beau bloc foncé</PixBlock>\n          <PixBlock>Je suis un deuxième bloc</PixBlock>\n        </PixBackgroundHeader>\n        */\n        {\n          \"id\": \"D+AhAvmb\",\n          \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n  \\\"],[8,[39,1],null,[[\\\"@shadow\\\"],[[30,0,[\\\"shadowWeight\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"Je suis un beau bloc foncé\\\"]],[]]]]],[1,\\\"\\\\n  \\\"],[8,[39,1],null,null,[[\\\"default\\\"],[[[[1,\\\"Je suis un deuxième bloc\\\"]],[]]]]],[1,\\\"\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-background-header\\\",\\\"pix-block\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-background-header-test.js\",\n          \"isStrictMode\": false\n        }));\n        const firstBlockElement = this.element.querySelector(BACKGROUND_CONTENT_SELECTOR).children[0];\n        const lastBlockElement = this.element.querySelector(BACKGROUND_CONTENT_SELECTOR).children[1];\n\n        // then\n        // TODO: Fix this the next time the file is edited.\n        // eslint-disable-next-line qunit/no-assert-equal\n        assert.equal(firstBlockElement.className, 'pix-block pix-block--shadow-heavy');\n        assert.contains('Je suis un beau bloc foncé');\n        // TODO: Fix this the next time the file is edited.\n        // eslint-disable-next-line qunit/no-assert-equal\n        assert.equal(lastBlockElement.className, 'pix-block pix-block--shadow-light');\n        assert.contains('Je suis un deuxième bloc');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-banner-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | Pix Banner', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const COMPONENT_SELECTOR = '.pix-banner';\n    (0, _qunit.test)('it renders the default PixBanner', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBanner>\n        Mon texte\n      </PixBanner>\n      */\n      {\n        \"id\": \"GMh43EDo\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n  Mon texte\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('Mon texte');\n      const componentElement = this.element.querySelector(COMPONENT_SELECTOR);\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(componentElement.classList.toString().trim(), 'pix-banner pix-banner--information');\n    });\n    (0, _qunit.test)('it renders the PixBanner with type warning', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBanner @type='warning'>\n        Mon texte\n      </PixBanner>\n      */\n      {\n        \"id\": \"noMI5FUD\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"warning\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  Mon texte\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const componentElement = this.element.querySelector(COMPONENT_SELECTOR);\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(componentElement.classList.toString().trim(), 'pix-banner pix-banner--warning');\n    });\n    (0, _qunit.test)('it renders the PixBanner with type error', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBanner @type='error'>\n        Mon texte\n      </PixBanner>\n      */\n      {\n        \"id\": \"d3wiXU0k\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"error\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  Mon texte\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const componentElement = this.element.querySelector(COMPONENT_SELECTOR);\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(componentElement.classList.toString().trim(), 'pix-banner pix-banner--error');\n    });\n    (0, _qunit.test)('it renders the PixBanner with type communication', async function (assert) {\n      // given\n\n      this.set('type', 'communication');\n\n      //when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBanner @color={{this.color}} @type={{this.type}} />\n      */\n      {\n        \"id\": \"AFOCpzpS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@color\\\",\\\"@type\\\"],[[30,0,[\\\"color\\\"]],[30,0,[\\\"type\\\"]]]],null]],[],false,[\\\"pix-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom('.pix-banner--communication').exists();\n    });\n    (0, _qunit.test)('it renders the PixBanner with type communication-orga', async function (assert) {\n      // given\n\n      this.set('type', 'communication-orga');\n\n      //when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBanner @color={{this.color}} @type={{this.type}} />\n      */\n      {\n        \"id\": \"AFOCpzpS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@color\\\",\\\"@type\\\"],[[30,0,[\\\"color\\\"]],[30,0,[\\\"type\\\"]]]],null]],[],false,[\\\"pix-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom('.pix-banner--communication-orga').exists();\n    });\n    (0, _qunit.test)('it renders the PixBanner  with type communication-certif', async function (assert) {\n      // given\n\n      this.set('type', 'communication-certif');\n\n      //when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBanner @color={{this.color}} @type={{this.type}} />\n      */\n      {\n        \"id\": \"AFOCpzpS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@color\\\",\\\"@type\\\"],[[30,0,[\\\"color\\\"]],[30,0,[\\\"type\\\"]]]],null]],[],false,[\\\"pix-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom('.pix-banner--communication-certif').exists();\n    });\n    (0, _qunit.test)('it renders the PixBanner with external url', async function (assert) {\n      // given\n      this.set('actionUrl', 'www.test.fr/');\n      this.set('actionLabel', 'Explorer');\n\n      //when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBanner @actionUrl={{this.actionUrl}} @actionLabel={{this.actionLabel}} />\n      */\n      {\n        \"id\": \"0yh+43Ez\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@actionUrl\\\",\\\"@actionLabel\\\"],[[30,0,[\\\"actionUrl\\\"]],[30,0,[\\\"actionLabel\\\"]]]],null]],[],false,[\\\"pix-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('Explorer');\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(this.element.querySelector('a').getAttribute('href'), 'www.test.fr/');\n    });\n    (0, _qunit.test)('it renders the PixBanner with internal link', async function (assert) {\n      // given\n\n      this.set('actionUrl', 'campaign.participants');\n      this.set('actionLabel', 'Explorer');\n\n      //when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBanner @actionUrl={{this.actionUrl}} @actionLabel={{this.actionLabel}} />\n      */\n      {\n        \"id\": \"0yh+43Ez\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@actionUrl\\\",\\\"@actionLabel\\\"],[[30,0,[\\\"actionUrl\\\"]],[30,0,[\\\"actionLabel\\\"]]]],null]],[],false,[\\\"pix-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('Explorer');\n    });\n    (0, _qunit.test)('it renders the PixBanner with close icon', async function (assert) {\n      // given\n      this.set('canCloseBanner', true);\n\n      //when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBanner @type='warning' @canCloseBanner={{this.canCloseBanner}}>\n        Mon texte\n      </PixBanner>\n      */\n      {\n        \"id\": \"87R9zSbP\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@canCloseBanner\\\"],[\\\"warning\\\",[30,0,[\\\"canCloseBanner\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  Mon texte\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      await (0, _testHelpers.click)(screen.getByRole('button', {\n        name: /Fermer/\n      }));\n      assert.notOk(screen.queryByText('Mon texte'));\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-block-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | pix-block', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const BLOCK_SELECTOR = '.pix-block';\n    (0, _qunit.test)('it renders the default PixBlock', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBlock>\n        Je suis un beau bloc avec une ombre légere\n      </PixBlock>\n      */\n      {\n        \"id\": \"wNxEDHKd\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n  Je suis un beau bloc avec une ombre légere\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-block-test.js\",\n        \"isStrictMode\": false\n      }));\n      const blockElement = this.element.querySelector(BLOCK_SELECTOR);\n\n      // then\n      assert.contains('Je suis un beau bloc avec une ombre légere');\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(blockElement.className, 'pix-block pix-block--shadow-light');\n    });\n    (0, _qunit.test)('it can have heavy shadow', async function (assert) {\n      // given\n      this.set('shadowWeight', 'heavy');\n\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBlock @shadow={{this.shadowWeight}}>\n        Je suis trop d4rk\n      </PixBlock>\n      */\n      {\n        \"id\": \"21GjR81B\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@shadow\\\"],[[30,0,[\\\"shadowWeight\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  Je suis trop d4rk\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-block-test.js\",\n        \"isStrictMode\": false\n      }));\n      const blockElement = this.element.querySelector(BLOCK_SELECTOR);\n\n      // then\n      assert.contains('Je suis trop d4rk');\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(blockElement.className, 'pix-block pix-block--shadow-heavy');\n    });\n    (0, _qunit.test)('it give light bloc even if there is wrong parameters', async function (assert) {\n      // given\n      this.set('shadowWeight', 'normal');\n\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixBlock @shadow={{this.shadowWeight}}>\n        Joli bloc quand même\n      </PixBlock>\n      */\n      {\n        \"id\": \"/0g5pk5R\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@shadow\\\"],[[30,0,[\\\"shadowWeight\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  Joli bloc quand même\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-block\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-block-test.js\",\n        \"isStrictMode\": false\n      }));\n      const blockElement = this.element.querySelector(BLOCK_SELECTOR);\n\n      // then\n      assert.contains('Joli bloc quand même');\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(blockElement.className, 'pix-block pix-block--shadow-light');\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-button-link-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | button-link', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    hooks.beforeEach(function () {\n      this.owner.setupRouter();\n    });\n    (0, _qunit.test)('it renders an HTML link', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixButtonLink href='pix.fr'>\n        content\n      </PixButtonLink>\n      */\n      {\n        \"id\": \"ETIMtGDC\",\n        \"block\": \"[[[8,[39,0],[[24,6,\\\"pix.fr\\\"]],null,[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-button-link\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-link-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const componentElement = this.element.querySelector('a[href=\"pix.fr\"]');\n      assert.ok(componentElement);\n    });\n    (0, _qunit.test)('it renders an EmberJS link', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixButtonLink @route='hello'>\n        content\n      </PixButtonLink>\n      */\n      {\n        \"id\": \"NN1v7XOz\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@route\\\"],[\\\"hello\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-button-link\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-link-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const componentElement = this.element.querySelector('a[href=\"/hello-world\"]');\n      assert.ok(componentElement);\n    });\n    (0, _qunit.test)('it renders an EmberJS link with model', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixButtonLink @route='bye' @model='bye'>\n        content\n      </PixButtonLink>\n      */\n      {\n        \"id\": \"PMFUJqS2\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@route\\\",\\\"@model\\\"],[\\\"bye\\\",\\\"bye\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-button-link\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-link-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const componentElement = this.element.querySelector('a[href=\"/bye/bye\"]');\n      assert.ok(componentElement);\n    });\n    (0, _qunit.test)('it renders an EmberJS link with query', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixButtonLink @route='bye' @model='bye' @query={{hash page=3 per_page=20}}>\n        content\n      </PixButtonLink>\n      */\n      {\n        \"id\": \"dR5IWOiO\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@route\\\",\\\"@model\\\",\\\"@query\\\"],[\\\"bye\\\",\\\"bye\\\",[28,[37,1],null,[[\\\"page\\\",\\\"per_page\\\"],[3,20]]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-button-link\\\",\\\"hash\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-link-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const componentElement = this.element.querySelector('a[href=\"/bye/bye?page=3&per_page=20\"]');\n      assert.ok(componentElement);\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-button-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"sinon\", \"dummy/tests/helpers/click-by-label\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _sinon, _clickByLabel, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"sinon\",0,\"dummy/tests/helpers/click-by-label\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | button', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const COMPONENT_SELECTOR = '.pix-button';\n    (0, _qunit.test)('it renders the default PixButton', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixButton>\n        Mon bouton\n      </PixButton>\n      */\n      {\n        \"id\": \"ovUkjzhT\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n  Mon bouton\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const componentElement = this.element.querySelector(COMPONENT_SELECTOR);\n      assert.contains('Mon bouton');\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(componentElement.type, 'button');\n    });\n    (0, _qunit.test)('it renders the PixButton component with the given type', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixButton @type='submit'>\n        Mon bouton\n      </PixButton>\n      */\n      {\n        \"id\": \"X68RNTDv\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"submit\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  Mon bouton\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const componentElement = this.element.querySelector(COMPONENT_SELECTOR);\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(componentElement.type, 'submit');\n    });\n    (0, _qunit.test)('it renders the PixButton component with isDisabled attribute', async function (assert) {\n      // given\n      this.set('count', 1);\n      this.set('triggerAction', () => {\n        this.count = this.count + 1;\n      });\n\n      //when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixButton @isDisabled={{true}} @triggerAction={{this.triggerAction}} aria-label='button label'>\n        Mon bouton\n      </PixButton>\n      */\n      {\n        \"id\": \"F30+1tts\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"aria-label\\\",\\\"button label\\\"]],[[\\\"@isDisabled\\\",\\\"@triggerAction\\\"],[true,[30,0,[\\\"triggerAction\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  Mon bouton\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const componentElement = this.element.querySelector(COMPONENT_SELECTOR);\n      assert.true(componentElement.disabled);\n    });\n    (0, _qunit.test)('it should call the action', async function (assert) {\n      // given\n      this.set('count', 1);\n      this.set('triggerAction', () => {\n        this.count = this.count + 1;\n      });\n\n      //when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixButton @triggerAction={{this.triggerAction}} aria-label='button label' />\n      */\n      {\n        \"id\": \"tEVHGxIK\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"aria-label\\\",\\\"button label\\\"]],[[\\\"@triggerAction\\\"],[[30,0,[\\\"triggerAction\\\"]]]],null]],[],false,[\\\"pix-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _clickByLabel.default)('button label');\n\n      // then\n      const componentElement = this.element.querySelector(COMPONENT_SELECTOR);\n      assert.strictEqual(this.count, 2);\n      assert.false(componentElement.disabled);\n    });\n    (0, _qunit.module)('when type is submit, if no trigger action is defined', () => {\n      (0, _qunit.test)('if clicked, it should do nothing', async function (assert) {\n        // given\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixButton @type='submit' aria-label='button label' />\n        */\n        {\n          \"id\": \"TyqSWGjI\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"aria-label\\\",\\\"button label\\\"]],[[\\\"@type\\\"],[\\\"submit\\\"]],null]],[],false,[\\\"pix-button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        //  when\n        await (0, _clickByLabel.default)('button label');\n\n        // then\n        const componentElement = this.element.querySelector(COMPONENT_SELECTOR);\n        assert.strictEqual(componentElement.type, 'submit');\n      });\n    });\n    (0, _qunit.module)('when the button has a trigger action with a promise', function (hooks) {\n      let clock;\n      hooks.beforeEach(function () {\n        clock = _sinon.default.useFakeTimers();\n      });\n      hooks.afterEach(function () {\n        clock.restore();\n      });\n      (0, _qunit.test)('should display a loading state', async function (assert) {\n        // given\n        this.set('triggerAction', () => {\n          return new Promise(resolve => {\n            let wait = setTimeout(() => {\n              clearTimeout(wait);\n              resolve();\n            }, 1);\n          });\n        });\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixButton @triggerAction={{this.triggerAction}} aria-label='button label' />\n        */\n        {\n          \"id\": \"tEVHGxIK\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"aria-label\\\",\\\"button label\\\"]],[[\\\"@triggerAction\\\"],[[30,0,[\\\"triggerAction\\\"]]]],null]],[],false,[\\\"pix-button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-test.js\",\n          \"isStrictMode\": false\n        }));\n        await (0, _clickByLabel.default)('button label');\n\n        // then\n        const loadingComponent = this.element.querySelector('.loader');\n        assert.ok(loadingComponent);\n      });\n    });\n    (0, _qunit.module)('when the button has isLoading to true', function () {\n      (0, _qunit.test)('should display a loading state', async function (assert) {\n        // given\n        this.set('isLoading', true);\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixButton @isLoading={{this.isLoading}} />\n        */\n        {\n          \"id\": \"N6pwJrpz\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isLoading\\\"],[[30,0,[\\\"isLoading\\\"]]]],null]],[],false,[\\\"pix-button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const loadingComponent = this.element.querySelector('.loader');\n        assert.ok(loadingComponent);\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-button-upload-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | button-upload', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the default PixButtonUpload', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixButtonUpload @id='1'>\n        content\n      </PixButtonUpload>\n      */\n      {\n        \"id\": \"PZoVaZ8W\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"1\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-button-upload\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-button-upload-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('content');\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-checkbox-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/debug\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _debug, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/debug\",0,\"sinon\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | checkbox', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.module)('it should be possible to check the checkbox', function () {\n      (0, _qunit.test)('when label is displayed', async function (assert) {\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixCheckbox><:label>Recevoir la newsletter</:label></PixCheckbox>\n        */\n        {\n          \"id\": \"pMtSgk4Q\",\n          \"block\": \"[[[8,[39,0],null,null,[[\\\"label\\\"],[[[[1,\\\"Recevoir la newsletter\\\"]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n          \"isStrictMode\": false\n        }));\n        await (0, _emberTestingLibrary.clickByName)('Recevoir la newsletter');\n\n        // then\n        assert.true(screen.getByLabelText('Recevoir la newsletter').checked);\n      });\n      (0, _qunit.test)('when label is hidden', async function (assert) {\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixCheckbox @screenReaderOnly={{true}}><:label>Recevoir la newsletter</:label></PixCheckbox>\n        */\n        {\n          \"id\": \"R9kq/TC/\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@screenReaderOnly\\\"],[true]],[[\\\"label\\\"],[[[[1,\\\"Recevoir la newsletter\\\"]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n          \"isStrictMode\": false\n        }));\n        await (0, _emberTestingLibrary.clickByName)('Recevoir la newsletter');\n\n        // then\n        assert.true(screen.getByLabelText('Recevoir la newsletter').checked);\n      });\n    });\n    (0, _qunit.test)('it should be possible to insert html in label', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixCheckbox><:label>Accepter les cgu,\n          <a href='https://cgu.example.net'>voir ici</a></:label></PixCheckbox>\n      */\n      {\n        \"id\": \"/sv0xxNh\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"label\\\"],[[[[1,\\\"Accepter les cgu,\\\\n    \\\"],[10,3],[14,6,\\\"https://cgu.example.net\\\"],[12],[1,\\\"voir ici\\\"],[13]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom(screen.getByLabelText('Accepter les cgu, voir ici')).exists();\n    });\n    (0, _qunit.test)('it should be possible to control state', async function (assert) {\n      // given\n      this.set('checked', false);\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixCheckbox @checked={{this.checked}}><:label>Recevoir la newsletter</:label></PixCheckbox>\n      */\n      {\n        \"id\": \"dIqd2nzz\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@checked\\\"],[[30,0,[\\\"checked\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"Recevoir la newsletter\\\"]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n        \"isStrictMode\": false\n      }));\n      const checkbox = screen.getByLabelText('Recevoir la newsletter');\n      assert.false(checkbox.checked);\n\n      // when\n      this.set('checked', true);\n\n      // then\n      assert.true(checkbox.checked);\n    });\n    (0, _qunit.module)('@isDisabled', function (hooks) {\n      let sandbox;\n      hooks.beforeEach(function () {\n        sandbox = _sinon.default.createSandbox();\n        sandbox.stub(_debug.default, 'warn');\n      });\n      hooks.afterEach(function () {\n        sandbox.restore();\n      });\n      (0, _qunit.test)(`it should not be possible to interact when @isDisabled={{true}}`, async function (assert) {\n        // given\n        this.set('isDisabled', true);\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixCheckbox checked @isDisabled={{this.isDisabled}}><:label>Recevoir la newsletter</:label></PixCheckbox>\n        */\n        {\n          \"id\": \"JwQNfwmI\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"checked\\\",\\\"\\\"]],[[\\\"@isDisabled\\\"],[[30,0,[\\\"isDisabled\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"Recevoir la newsletter\\\"]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n          \"isStrictMode\": false\n        }));\n        sandbox.assert.calledWith(_debug.default.warn, 'PixCheckbox: @isDisabled attribute should be a boolean.', true, {\n          id: 'pix-ui.checkbox.is-disabled.not-boolean'\n        });\n        const checkbox = screen.getByRole('checkbox', {\n          name: 'Recevoir la newsletter',\n          disabled: true\n        });\n        assert.true(checkbox.checked, 'Checkbox has been set to checked by default');\n        assert.strictEqual(checkbox.getAttribute('aria-disabled'), 'true', '`aria-disabled` should be forced to \"true\" else VoiceOver don\\'t consider the input as \"dimmed\"');\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Recevoir la newsletter'); // should not throw!\n\n        // then\n        assert.true(checkbox.checked, \"Checkbox has changed state, but shouldn't have\");\n      });\n      (0, _qunit.test)(`it should read success state info if given`, async function (assert) {\n        // given\n        this.set('isDisabled', true);\n\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixCheckbox checked @isDisabled={{this.isDisabled}} @state='success'><:label>Recevoir la newsletter</:label></PixCheckbox>\n        */\n        {\n          \"id\": \"6mDzRkUi\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"checked\\\",\\\"\\\"]],[[\\\"@isDisabled\\\",\\\"@state\\\"],[[30,0,[\\\"isDisabled\\\"]],\\\"success\\\"]],[[\\\"label\\\"],[[[[1,\\\"Recevoir la newsletter\\\"]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.dom(screen.getByRole('checkbox', {\n          description: 'Sélection correcte',\n          hidden: true\n        })).exists();\n      });\n      (0, _qunit.test)(`it should read error state info if given`, async function (assert) {\n        // given\n        this.set('isDisabled', true);\n\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixCheckbox checked @isDisabled={{this.isDisabled}} @state='error'><:label>Recevoir la newsletter</:label></PixCheckbox>\n        */\n        {\n          \"id\": \"8mhHulMt\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"checked\\\",\\\"\\\"]],[[\\\"@isDisabled\\\",\\\"@state\\\"],[[30,0,[\\\"isDisabled\\\"]],\\\"error\\\"]],[[\\\"label\\\"],[[[[1,\\\"Recevoir la newsletter\\\"]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.dom(screen.getByRole('checkbox', {\n          description: 'Sélection incorrecte',\n          hidden: true\n        })).exists();\n      });\n      ['true', 'false', 'null', 'undefined'].forEach(function (testCase) {\n        (0, _qunit.test)(`it should not be possible to interact when @isDisabled=\"${testCase}\"`, async function (assert) {\n          // given\n          this.set('isDisabled', testCase);\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixCheckbox checked @isDisabled={{this.isDisabled}}><:label>Recevoir la newsletter</:label></PixCheckbox>\n          */\n          {\n            \"id\": \"JwQNfwmI\",\n            \"block\": \"[[[8,[39,0],[[24,\\\"checked\\\",\\\"\\\"]],[[\\\"@isDisabled\\\"],[[30,0,[\\\"isDisabled\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"Recevoir la newsletter\\\"]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n            \"isStrictMode\": false\n          }));\n          sandbox.assert.calledWith(_debug.default.warn, 'PixCheckbox: @isDisabled attribute should be a boolean.', false, {\n            id: 'pix-ui.checkbox.is-disabled.not-boolean'\n          });\n          const checkbox = screen.getByRole('checkbox', {\n            name: 'Recevoir la newsletter',\n            disabled: true\n          });\n          assert.true(checkbox.checked, 'Checkbox has been set to checked by default');\n          assert.strictEqual(checkbox.getAttribute('aria-disabled'), 'true', '`aria-disabled` should be forced to \"true\" else VoiceOver don\\'t consider the input as \"dimmed\"');\n\n          // when\n          await (0, _emberTestingLibrary.clickByName)('Recevoir la newsletter'); // should not throw!\n\n          // then\n          assert.true(checkbox.checked, \"Checkbox has changed state, but shouldn't have\");\n        });\n      });\n      [false, null, undefined].forEach(function (testCase) {\n        (0, _qunit.test)(`it should be possible to interact when @isDisabled={{${testCase}}}`, async function (assert) {\n          // given\n          this.set('isDisabled', testCase);\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixCheckbox checked @isDisabled={{this.isDisabled}}><:label>Recevoir la newsletter</:label></PixCheckbox>\n          */\n          {\n            \"id\": \"JwQNfwmI\",\n            \"block\": \"[[[8,[39,0],[[24,\\\"checked\\\",\\\"\\\"]],[[\\\"@isDisabled\\\"],[[30,0,[\\\"isDisabled\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"Recevoir la newsletter\\\"]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n            \"isStrictMode\": false\n          }));\n          sandbox.assert.calledWith(_debug.default.warn, 'PixCheckbox: @isDisabled attribute should be a boolean.', true, {\n            id: 'pix-ui.checkbox.is-disabled.not-boolean'\n          });\n          const checkbox = screen.getByRole('checkbox', {\n            name: 'Recevoir la newsletter',\n            disabled: true\n          });\n          assert.true(checkbox.checked, 'Checkbox has been set to checked by default');\n          assert.strictEqual(checkbox.getAttribute('aria-disabled'), null, '`aria-disabled` should not be set');\n\n          // when\n          await (0, _emberTestingLibrary.clickByName)('Recevoir la newsletter');\n\n          // then\n          assert.false(checkbox.checked, 'Checkbox should have changed state');\n        });\n      });\n    });\n    (0, _qunit.module)('when disabled', function () {\n      (0, _qunit.test)(`it should not be possible to interact when disabled={{true}}`, async function (assert) {\n        // given\n        this.set('disabled', true);\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixCheckbox checked disabled={{this.disabled}}><:label>Recevoir la newsletter</:label></PixCheckbox>\n        */\n        {\n          \"id\": \"Yp7ajpf7\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"checked\\\",\\\"\\\"],[16,\\\"disabled\\\",[30,0,[\\\"disabled\\\"]]]],null,[[\\\"label\\\"],[[[[1,\\\"Recevoir la newsletter\\\"]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n          \"isStrictMode\": false\n        }));\n        const checkbox = screen.getByRole('checkbox', {\n          name: 'Recevoir la newsletter',\n          disabled: true\n        });\n        assert.true(checkbox.checked, 'Checkbox has been set to checked by default');\n        try {\n          // when\n          await (0, _emberTestingLibrary.clickByName)('Recevoir la newsletter');\n          assert.true(false, 'It should not be possible to interact with disabled Checkbox');\n        } catch (error) {\n          // then state did not change\n          assert.true(checkbox.checked, \"Checkbox has changed state, but shouldn't have\");\n        }\n      });\n      ['true', 'false', 'null', 'undefined'].forEach(function (testCase) {\n        (0, _qunit.test)(`it should not be possible to interact when disabled=\"${testCase}\"`, async function (assert) {\n          // given\n          this.set('disabled', testCase);\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixCheckbox checked disabled={{this.disabled}}><:label>Recevoir la newsletter</:label></PixCheckbox>\n          */\n          {\n            \"id\": \"Yp7ajpf7\",\n            \"block\": \"[[[8,[39,0],[[24,\\\"checked\\\",\\\"\\\"],[16,\\\"disabled\\\",[30,0,[\\\"disabled\\\"]]]],null,[[\\\"label\\\"],[[[[1,\\\"Recevoir la newsletter\\\"]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n            \"isStrictMode\": false\n          }));\n          const checkbox = screen.getByRole('checkbox', {\n            name: 'Recevoir la newsletter',\n            disabled: true\n          });\n          assert.true(checkbox.checked, 'Checkbox has been set to checked by default');\n          try {\n            // when\n            await (0, _emberTestingLibrary.clickByName)('Recevoir la newsletter');\n            assert.true(false, 'It should not be possible to interact with disabled Checkbox');\n          } catch (error) {\n            // then state did not change\n            assert.true(checkbox.checked, \"Checkbox has changed state, but shouldn't have\");\n          }\n        });\n      });\n      [false, null, undefined].forEach(function (testCase) {\n        (0, _qunit.test)(`it should be possible to interact when disabled={{${testCase}}}`, async function (assert) {\n          // given\n          this.set('disabled', testCase);\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixCheckbox checked disabled={{this.disabled}}><:label>Recevoir la newsletter</:label></PixCheckbox>\n          */\n          {\n            \"id\": \"Yp7ajpf7\",\n            \"block\": \"[[[8,[39,0],[[24,\\\"checked\\\",\\\"\\\"],[16,\\\"disabled\\\",[30,0,[\\\"disabled\\\"]]]],null,[[\\\"label\\\"],[[[[1,\\\"Recevoir la newsletter\\\"]],[]]]]]],[],false,[\\\"pix-checkbox\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-checkbox-test.js\",\n            \"isStrictMode\": false\n          }));\n          const checkbox = screen.getByRole('checkbox', {\n            name: 'Recevoir la newsletter',\n            disabled: true\n          });\n          assert.true(checkbox.checked, 'Checkbox has been set to checked by default');\n\n          // when\n          await (0, _emberTestingLibrary.clickByName)('Recevoir la newsletter');\n\n          // then\n          assert.false(checkbox.checked, 'Checkbox should have changed state');\n        });\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-collapsible-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"dummy/tests/helpers/create-glimmer-component\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _createGlimmerComponent, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"dummy/tests/helpers/create-glimmer-component\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | PixCollapsible', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it should only render PixCollapsible title by default', async function (assert) {\n      // when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixCollapsible>\n        <:title>\n          Titre de mon élément déroulable\n        </:title>\n        <:default>\n          <p>Contenu de mon élément</p>\n        </:default>\n      </PixCollapsible>\n      */\n      {\n        \"id\": \"CX+I+gX5\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"title\\\",\\\"default\\\"],[[[[1,\\\"\\\\n    Titre de mon élément déroulable\\\\n  \\\"]],[]],[[[1,\\\"\\\\n    \\\"],[10,2],[12],[1,\\\"Contenu de mon élément\\\"],[13],[1,\\\"\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-collapsible\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-collapsible-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom(screen.queryByText('Titre de mon élément déroulable')).isVisible();\n      assert.dom(screen.queryByText('Contenu de mon élément')).doesNotExist();\n    });\n    (0, _qunit.test)('it should render and show content on click on PixCollapsible title', async function (assert) {\n      // when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixCollapsible aria-label='collapsible label'>\n        <:title>\n          Titre de mon élément déroulable\n        </:title>\n        <:default>\n          <p>Contenu de mon élément</p>\n        </:default>\n      </PixCollapsible>\n      */\n      {\n        \"id\": \"P7iEHhub\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"aria-label\\\",\\\"collapsible label\\\"]],null,[[\\\"title\\\",\\\"default\\\"],[[[[1,\\\"\\\\n    Titre de mon élément déroulable\\\\n  \\\"]],[]],[[[1,\\\"\\\\n    \\\"],[10,2],[12],[1,\\\"Contenu de mon élément\\\"],[13],[1,\\\"\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-collapsible\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-collapsible-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _emberTestingLibrary.clickByText)('Titre de mon élément déroulable');\n\n      // then\n      assert.dom(screen.queryByText('Titre de mon élément déroulable')).isVisible();\n      assert.dom(screen.queryByText('Contenu de mon élément')).isVisible();\n    });\n    (0, _qunit.test)('it should not show PixCollapsible if title is not provided', async function (assert) {\n      // given\n      const componentParams = {\n        title: '  '\n      };\n      const component = (0, _createGlimmerComponent.default)('pix-collapsible', componentParams);\n\n      // when & then\n      const expectedError = new Error('ERROR in PixCollapsible component, @title param is not provided');\n      assert.throws(function () {\n        component.title;\n      }, expectedError);\n    });\n    (0, _qunit.test)('it should not destroy content when uncollapsed then collapsed again', async function (assert) {\n      // when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixCollapsible aria-label='collapsible label'>\n        <:title>\n          Titre de mon élément déroulable\n        </:title>\n        <:default>\n          <p>Contenu de mon élément</p>\n        </:default>\n      </PixCollapsible>\n      */\n      {\n        \"id\": \"P7iEHhub\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"aria-label\\\",\\\"collapsible label\\\"]],null,[[\\\"title\\\",\\\"default\\\"],[[[[1,\\\"\\\\n    Titre de mon élément déroulable\\\\n  \\\"]],[]],[[[1,\\\"\\\\n    \\\"],[10,2],[12],[1,\\\"Contenu de mon élément\\\"],[13],[1,\\\"\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-collapsible\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-collapsible-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _emberTestingLibrary.clickByText)('Titre de mon élément déroulable');\n      await (0, _emberTestingLibrary.clickByText)('Titre de mon élément déroulable');\n\n      // then\n      assert.dom(screen.queryByText('Titre de mon élément déroulable')).isVisible();\n      assert.dom(screen.queryByText('Contenu de mon élément')).isNotVisible();\n      assert.dom(screen.queryByText('Contenu de mon élément')).exists();\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-filter-banner-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/test-helpers\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _testHelpers, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/test-helpers\",0,\"sinon\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | filter-banner', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the default PixFilterBanner', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterBanner>\n        content\n      </PixFilterBanner>\n      */\n      {\n        \"id\": \"/Nw8tNNl\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-filter-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filter-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('content');\n    });\n    (0, _qunit.test)('it renders the PixFilterBanner with title', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterBanner @title='Titre de la bannière'>\n        content\n      </PixFilterBanner>\n      */\n      {\n        \"id\": \"niq8rJRe\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\"],[\\\"Titre de la bannière\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-filter-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filter-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('Titre de la bannière');\n    });\n    (0, _qunit.test)('it renders the PixFilterBanner with details', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterBanner @details='5 participants filtrés'>\n        content\n      </PixFilterBanner>\n      */\n      {\n        \"id\": \"dMFuwR+q\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@details\\\"],[\\\"5 participants filtrés\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-filter-banner\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filter-banner-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('5 participants filtrés');\n    });\n    (0, _qunit.module)('clearFilterbutton', function () {\n      (0, _qunit.test)('it renders the PixFilterBanner with a clearFiltersLabel button', async function (assert) {\n        //given\n        this.clearFiltersLabel = 'Effacer les filtres';\n        this.onClearFilters = _sinon.default.spy();\n\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixFilterBanner\n          @clearFiltersLabel={{this.clearFiltersLabel}}\n          @onClearFilters={{this.onClearFilters}}\n        >\n          content\n        </PixFilterBanner>\n        */\n        {\n          \"id\": \"vIF02Ot0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@clearFiltersLabel\\\",\\\"@onClearFilters\\\"],[[30,0,[\\\"clearFiltersLabel\\\"]],[30,0,[\\\"onClearFilters\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-filter-banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filter-banner-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const button = screen.getByRole('button', {\n          name: this.clearFiltersLabel\n        });\n        assert.dom(button).exists();\n      });\n      (0, _qunit.test)('it renders the PixFilterBanner with a disabled clearFiltersLabel button', async function (assert) {\n        //given\n        this.clearFiltersLabel = 'Effacer les filtres';\n        this.isClearFilterButtonDisabled = true;\n        this.onClearFilters = _sinon.default.spy();\n\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixFilterBanner\n          @clearFiltersLabel={{this.clearFiltersLabel}}\n          @isClearFilterButtonDisabled={{this.isClearFilterButtonDisabled}}\n        >\n          content\n        </PixFilterBanner>\n        */\n        {\n          \"id\": \"Q6FNdVJw\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@clearFiltersLabel\\\",\\\"@isClearFilterButtonDisabled\\\"],[[30,0,[\\\"clearFiltersLabel\\\"]],[30,0,[\\\"isClearFilterButtonDisabled\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-filter-banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filter-banner-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const button = screen.getByRole('button', {\n          name: this.clearFiltersLabel,\n          hidden: true\n        });\n        assert.dom(button).exists();\n      });\n      (0, _qunit.test)('it should trigger onClearFilters when button clicked', async function (assert) {\n        // given\n        this.clearFiltersLabel = 'some label';\n        this.onClearFilters = _sinon.default.spy();\n\n        //when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixFilterBanner\n          @clearFiltersLabel={{this.clearFiltersLabel}}\n          @onClearFilters={{this.onClearFilters}}\n        >\n          content\n        </PixFilterBanner>\n        */\n        {\n          \"id\": \"vIF02Ot0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@clearFiltersLabel\\\",\\\"@onClearFilters\\\"],[[30,0,[\\\"clearFiltersLabel\\\"]],[30,0,[\\\"onClearFilters\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-filter-banner\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filter-banner-test.js\",\n          \"isStrictMode\": false\n        }));\n        await (0, _testHelpers.click)(screen.getByRole('button', {\n          name: this.clearFiltersLabel\n        }));\n\n        // then\n        assert.ok(this.onClearFilters.calledOnce, 'the callback should be called once');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-filterable-and-searchable-select-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@1024pix/ember-testing-library\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _emberTestingLibrary, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@1024pix/ember-testing-library\",0,\"sinon\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | PixFilterableAndSearchableSelect', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    this.options = [{\n      value: '1',\n      label: 'Mache',\n      category: 'Kebab'\n    }, {\n      value: '2',\n      label: 'Tomate',\n      category: 'Hamburger'\n    }];\n    this.label = 'select Label';\n    this.placeholder = 'selectPlaceholder';\n    this.categoriesId = 'filter id';\n    this.categoriesLabel = 'filterLabel';\n    this.categoriesPlaceholder = 'Filtres';\n    this.onChange = _sinon.default.stub();\n    (0, _qunit.test)('it displays the categories', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterableAndSearchableSelect\n        @placeholder={{this.placeholder}}\n        @options={{this.options}}\n        @onChange={{this.onChange}}\n        @categoriesPlaceholder={{this.categoriesPlaceholder}}\n      >\n        <:label>{{this.label}}</:label>\n        <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n      </PixFilterableAndSearchableSelect>\n      */\n      {\n        \"id\": \"8ae1O1VE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@onChange\\\",\\\"@categoriesPlaceholder\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]]]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)(screen.getByText(`${this.categoriesPlaceholder} (0)`));\n      const items = await screen.findAllByRole('menuitem');\n      const categories = items.map(item => {\n        return item.innerText.trim();\n      });\n      // then\n      assert.deepEqual(categories, ['Kebab', 'Hamburger']);\n    });\n    (0, _qunit.test)('it displays the select options', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterableAndSearchableSelect\n        @placeholder={{this.placeholder}}\n        @options={{this.options}}\n        @onChange={{this.onChange}}\n        @categoriesId={{this.categoriesId}}\n        @categoriesPlaceholder={{this.categoriesPlaceholder}}\n      >\n        <:label>{{this.label}}</:label>\n        <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n      </PixFilterableAndSearchableSelect>\n      */\n      {\n        \"id\": \"t9HwpghI\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@onChange\\\",\\\"@categoriesId\\\",\\\"@categoriesPlaceholder\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesId\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]]]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _emberTestingLibrary.clickByName)(this.label);\n      const options = await screen.findAllByRole('option');\n      const labels = options.map(option => {\n        return option.innerText;\n      });\n\n      // then\n      assert.deepEqual(labels, ['selectPlaceholder', 'Mache', 'Tomate']);\n    });\n    (0, _qunit.test)('it displays once each category', async function (assert) {\n      this.options = [{\n        value: '1',\n        label: 'Mache',\n        category: 'Kebab'\n      }, {\n        value: '2',\n        label: 'Oignon',\n        category: 'Kebab'\n      }];\n\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterableAndSearchableSelect\n        @placeholder={{this.placeholder}}\n        @options={{this.options}}\n        @onChange={{this.onChange}}\n        @categoriesId={{this.categoriesId}}\n        @categoriesPlaceholder={{this.categoriesPlaceholder}}\n      >\n        <:label>{{this.label}}</:label>\n        <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n      </PixFilterableAndSearchableSelect>\n      */\n      {\n        \"id\": \"t9HwpghI\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@onChange\\\",\\\"@categoriesId\\\",\\\"@categoriesPlaceholder\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesId\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]]]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)(screen.getByText(`${this.categoriesPlaceholder} (0)`));\n      const items = await screen.findAllByRole('menuitem');\n      const categories = items.map(item => {\n        return item.innerText.trim();\n      });\n\n      // then\n      assert.deepEqual(categories, ['Kebab']);\n    });\n    (0, _qunit.test)('it displays the number of category selected', async function (assert) {\n      this.options = [{\n        value: '1',\n        label: 'Mache',\n        category: 'Kebab'\n      }, {\n        value: '2',\n        label: 'Tomate',\n        category: 'Hamburger'\n      }, {\n        value: '3',\n        label: 'Saumon',\n        category: 'Sushi'\n      }];\n\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterableAndSearchableSelect\n        @placeholder={{this.placeholder}}\n        @options={{this.options}}\n        @onChange={{this.onChange}}\n        @categoriesPlaceholder={{this.categoriesPlaceholder}}\n      >\n        <:label>{{this.label}}</:label>\n        <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n      </PixFilterableAndSearchableSelect>\n      */\n      {\n        \"id\": \"8ae1O1VE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@onChange\\\",\\\"@categoriesPlaceholder\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]]]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)(screen.getByText(`${this.categoriesPlaceholder} (0)`));\n      await (0, _testHelpers.click)(await screen.findByRole('checkbox', {\n        name: 'Hamburger'\n      }));\n      await (0, _testHelpers.click)(await screen.findByRole('checkbox', {\n        name: 'Sushi'\n      }));\n\n      // then\n      assert.dom(screen.getByText(`${this.categoriesPlaceholder} (2)`)).exists();\n    });\n    (0, _qunit.test)('it displays only options with the correct category', async function (assert) {\n      this.options = [{\n        value: '1',\n        label: 'Mache',\n        category: 'Kebab'\n      }, {\n        value: '2',\n        label: 'Tomate',\n        category: 'Hamburger'\n      }];\n\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterableAndSearchableSelect\n        @placeholder={{this.placeholder}}\n        @options={{this.options}}\n        @onChange={{this.onChange}}\n        @categoriesId={{this.categoriesId}}\n        @categoriesPlaceholder={{this.categoriesPlaceholder}}\n      >\n        <:label>{{this.label}}</:label>\n        <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n      </PixFilterableAndSearchableSelect>\n      */\n      {\n        \"id\": \"t9HwpghI\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@onChange\\\",\\\"@categoriesId\\\",\\\"@categoriesPlaceholder\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesId\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]]]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)(screen.getByText(`${this.categoriesPlaceholder} (0)`));\n      await (0, _testHelpers.click)(await screen.findByRole('checkbox', {\n        name: 'Kebab'\n      }));\n      await (0, _testHelpers.click)(await screen.findByRole('button', {\n        name: this.label\n      }));\n\n      // then\n      assert.dom(screen.getByText('Mache')).exists();\n      assert.dom(screen.queryByText('Tomate')).doesNotExist();\n    });\n    (0, _qunit.test)('it displays options corresponding to the selected categories', async function (assert) {\n      this.options = [{\n        value: '1',\n        label: 'Mache',\n        category: 'Kebab'\n      }, {\n        value: '2',\n        label: 'Tomate',\n        category: 'Hamburger'\n      }, {\n        value: '3',\n        label: 'Saumon',\n        category: 'Sushi'\n      }];\n\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterableAndSearchableSelect\n        @placeholder={{this.placeholder}}\n        @options={{this.options}}\n        @onChange={{this.onChange}}\n        @categoriesId={{this.categoriesId}}\n        @categoriesPlaceholder={{this.categoriesPlaceholder}}\n      >\n        <:label>{{this.label}}</:label>\n        <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n      </PixFilterableAndSearchableSelect>\n      */\n      {\n        \"id\": \"t9HwpghI\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@onChange\\\",\\\"@categoriesId\\\",\\\"@categoriesPlaceholder\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesId\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]]]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)(screen.getByText(`${this.categoriesPlaceholder} (0)`));\n      await (0, _testHelpers.click)(await screen.findByRole('checkbox', {\n        name: 'Hamburger'\n      }));\n      await (0, _testHelpers.click)(await screen.findByRole('checkbox', {\n        name: 'Sushi'\n      }));\n      await (0, _testHelpers.click)(await screen.findByRole('button', {\n        name: this.label\n      }));\n      const options = await screen.findAllByRole('option');\n      const labels = options.map(option => {\n        return option.innerText;\n      });\n\n      // then\n      assert.deepEqual(labels, ['selectPlaceholder', 'Tomate', 'Saumon']);\n    });\n    (0, _qunit.test)('it call onChange when a option is selected', async function (assert) {\n      this.options = [{\n        value: '1',\n        label: 'Mache',\n        category: 'Kebab'\n      }, {\n        value: '2',\n        label: 'Tomate',\n        category: 'Hamburger'\n      }];\n\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterableAndSearchableSelect\n        @placeholder={{this.placeholder}}\n        @options={{this.options}}\n        @onChange={{this.onChange}}\n        @categoriesId={{this.categoriesId}}\n        @categoriesPlaceholder={{this.categoriesPlaceholder}}\n      >\n        <:label>{{this.label}}</:label>\n        <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n      </PixFilterableAndSearchableSelect>\n      */\n      {\n        \"id\": \"t9HwpghI\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@onChange\\\",\\\"@categoriesId\\\",\\\"@categoriesPlaceholder\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesId\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]]]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)(screen.getByRole('button', {\n        name: this.label\n      }));\n      await (0, _testHelpers.click)(await screen.findByRole('option', {\n        name: 'Tomate'\n      }));\n\n      // then\n      _sinon.default.assert.calledWith(this.onChange, '2');\n      assert.ok(true);\n    });\n    (0, _qunit.test)('it displays options which match the text searched', async function (assert) {\n      this.options = [{\n        value: '1',\n        label: 'Mache',\n        category: 'Kebab'\n      }, {\n        value: '2',\n        label: 'Tomate',\n        category: 'Hamburger'\n      }];\n      this.searchLabel = 'Recherche';\n\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterableAndSearchableSelect\n        @placeholder={{this.placeholder}}\n        @options={{this.options}}\n        @onChange={{this.onChange}}\n        @categoriesId={{this.categoriesId}}\n        @categoriesPlaceholder={{this.categoriesPlaceholder}}\n        @searchLabel={{this.searchLabel}}\n        @isSearchable={{true}}\n      >\n        <:label>{{this.label}}</:label>\n        <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n      </PixFilterableAndSearchableSelect>\n      */\n      {\n        \"id\": \"UMeKqsPL\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@onChange\\\",\\\"@categoriesId\\\",\\\"@categoriesPlaceholder\\\",\\\"@searchLabel\\\",\\\"@isSearchable\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesId\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]],[30,0,[\\\"searchLabel\\\"]],true]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)(screen.getByRole('button', {\n        name: this.label\n      }));\n      await (0, _emberTestingLibrary.fillByLabel)(this.searchLabel, 'Tom');\n      const items = await screen.findAllByRole('option');\n      const options = items.map(item => {\n        return item.innerText;\n      });\n\n      // then\n      assert.deepEqual(options, ['Tomate']);\n    });\n    (0, _qunit.test)('it displays the selected option', async function (assert) {\n      this.options = [{\n        value: '1',\n        label: 'Mache',\n        category: 'Kebab'\n      }, {\n        value: '2',\n        label: 'Tomate',\n        category: 'Hamburger'\n      }];\n      this.searchLabel = 'Recherche';\n\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterableAndSearchableSelect\n        @placeholder={{this.placeholder}}\n        @options={{this.options}}\n        @value='2'\n        @onChange={{this.onChange}}\n        @categoriesId={{this.categoriesId}}\n        @categoriesPlaceholder={{this.categoriesPlaceholder}}\n        @searchLabel={{this.searchLabel}}\n        @isSearchable={{true}}\n      >\n        <:label>{{this.label}}</:label>\n        <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n      </PixFilterableAndSearchableSelect>\n      */\n      {\n        \"id\": \"LR/9DKBK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@value\\\",\\\"@onChange\\\",\\\"@categoriesId\\\",\\\"@categoriesPlaceholder\\\",\\\"@searchLabel\\\",\\\"@isSearchable\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],\\\"2\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesId\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]],[30,0,[\\\"searchLabel\\\"]],true]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)(screen.getByRole('button', {\n        name: this.label\n      }));\n      const option = await screen.findByRole('option', {\n        selected: true\n      });\n\n      // then\n      assert.deepEqual(option.innerText, 'Tomate');\n    });\n    (0, _qunit.module)('Label and subLabel', function () {\n      (0, _qunit.test)('it displays the label', async function (assert) {\n        this.options = [{\n          value: '1',\n          label: 'Mache',\n          category: 'Kebab'\n        }, {\n          value: '2',\n          label: 'Tomate',\n          category: 'Hamburger'\n        }];\n        this.label = 'Label de mon big composant trop compliqué';\n\n        // given & when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixFilterableAndSearchableSelect\n          @placeholder={{this.placeholder}}\n          @options={{this.options}}\n          @value='2'\n          @onChange={{this.onChange}}\n          @categoriesId={{this.categoriesId}}\n          @categoriesPlaceholder={{this.categoriesPlaceholder}}\n        >\n          <:label>{{this.label}}</:label>\n          <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n        </PixFilterableAndSearchableSelect>\n        */\n        {\n          \"id\": \"+ex9b6Yl\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@value\\\",\\\"@onChange\\\",\\\"@categoriesId\\\",\\\"@categoriesPlaceholder\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],\\\"2\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesId\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]]]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n          \"isStrictMode\": false\n        }));\n        const label = await screen.getByLabelText(this.label);\n\n        // then\n        assert.dom(label).exists();\n      });\n      (0, _qunit.test)('it display the subLabel', async function (assert) {\n        this.options = [{\n          value: '1',\n          label: 'Mache',\n          category: 'Kebab'\n        }, {\n          value: '2',\n          label: 'Tomate',\n          category: 'Hamburger'\n        }];\n        this.label = 'Label de mon big composant trop compliqué';\n        this.subLabel = 'Mon subLabel';\n\n        // given & when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixFilterableAndSearchableSelect\n          @subLabel={{this.subLabel}}\n          @placeholder={{this.placeholder}}\n          @options={{this.options}}\n          @value='2'\n          @onChange={{this.onChange}}\n          @categoriesId={{this.categoriesId}}\n          @categoriesPlaceholder={{this.categoriesPlaceholder}}\n        >\n          <:label>{{this.label}}</:label>\n          <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n        </PixFilterableAndSearchableSelect>\n        */\n        {\n          \"id\": \"dUFQ+dWp\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@subLabel\\\",\\\"@placeholder\\\",\\\"@options\\\",\\\"@value\\\",\\\"@onChange\\\",\\\"@categoriesId\\\",\\\"@categoriesPlaceholder\\\"],[[30,0,[\\\"subLabel\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],\\\"2\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesId\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]]]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.dom(screen.getByText('Mon subLabel')).exists();\n      });\n      (0, _qunit.test)('it displays the astérisque when the composant ids required', async function (assert) {\n        this.options = [{\n          value: '1',\n          label: 'Mache',\n          category: 'Kebab'\n        }, {\n          value: '2',\n          label: 'Tomate',\n          category: 'Hamburger'\n        }];\n        this.label = 'Label de mon big composant trop compliqué';\n        this.requiredLabel = 'Sélectionner un aliment';\n\n        // given & when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixFilterableAndSearchableSelect\n          @placeholder={{this.placeholder}}\n          @options={{this.options}}\n          @value='2'\n          @onChange={{this.onChange}}\n          @categoriesId={{this.categoriesId}}\n          @categoriesPlaceholder={{this.categoriesPlaceholder}}\n          @searchLabel={{this.searchLabel}}\n          @isSearchable={{true}}\n          @requiredLabel={{this.requiredLabel}}\n        >\n          <:label>{{this.label}}</:label>\n          <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n        </PixFilterableAndSearchableSelect>\n        */\n        {\n          \"id\": \"90M6mCHD\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@value\\\",\\\"@onChange\\\",\\\"@categoriesId\\\",\\\"@categoriesPlaceholder\\\",\\\"@searchLabel\\\",\\\"@isSearchable\\\",\\\"@requiredLabel\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],\\\"2\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesId\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]],[30,0,[\\\"searchLabel\\\"]],true,[30,0,[\\\"requiredLabel\\\"]]]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.dom(screen.getByLabelText('* Label de mon big composant trop compliqué')).exists();\n      });\n    });\n    (0, _qunit.test)('it displays error message', async function (assert) {\n      this.options = [{\n        value: '1',\n        label: 'Mache',\n        category: 'Kebab'\n      }, {\n        value: '2',\n        label: 'Tomate',\n        category: 'Hamburger'\n      }];\n      this.label = 'Label de mon big composant trop compliqué';\n      this.requiredLabel = 'Sélectionner un aliment';\n      this.errorMessage = 'Aliment non saisi. Veuillez en renseigner un !';\n\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixFilterableAndSearchableSelect\n        @placeholder={{this.placeholder}}\n        @options={{this.options}}\n        @value='2'\n        @onChange={{this.onChange}}\n        @categoriesId={{this.categoriesId}}\n        @categoriesPlaceholder={{this.categoriesPlaceholder}}\n        @searchLabel={{this.searchLabel}}\n        @isSearchable={{true}}\n        @requiredLabel={{this.requiredLabel}}\n        @errorMessage={{this.errorMessage}}\n      >\n        <:label>{{this.label}}</:label>\n        <:categoriesLabel>{{this.categoriesLabel}}</:categoriesLabel>\n      </PixFilterableAndSearchableSelect>\n      */\n      {\n        \"id\": \"Yl21dAak\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@placeholder\\\",\\\"@options\\\",\\\"@value\\\",\\\"@onChange\\\",\\\"@categoriesId\\\",\\\"@categoriesPlaceholder\\\",\\\"@searchLabel\\\",\\\"@isSearchable\\\",\\\"@requiredLabel\\\",\\\"@errorMessage\\\"],[[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"options\\\"]],\\\"2\\\",[30,0,[\\\"onChange\\\"]],[30,0,[\\\"categoriesId\\\"]],[30,0,[\\\"categoriesPlaceholder\\\"]],[30,0,[\\\"searchLabel\\\"]],true,[30,0,[\\\"requiredLabel\\\"]],[30,0,[\\\"errorMessage\\\"]]]],[[\\\"label\\\",\\\"categoriesLabel\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"categoriesLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-filterable-and-searchable-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-filterable-and-searchable-select-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom(screen.getByText(this.errorMessage)).exists();\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-icon-button-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"dummy/tests/helpers/click-by-label\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _clickByLabel, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"dummy/tests/helpers/click-by-label\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | icon-button', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const COMPONENT_SELECTOR = '.pix-icon-button';\n    (0, _qunit.test)('it should trigger action if given one', async function (assert) {\n      // when\n      this.set('count', 1);\n      this.set('triggerAction', () => {\n        this.count = this.count + 1;\n      });\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixIconButton\n        @triggerAction={{this.triggerAction}}\n        @ariaLabel='action du bouton'\n        @iconName='add'\n      />\n      */\n      {\n        \"id\": \"6fqEEJF7\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@triggerAction\\\",\\\"@ariaLabel\\\",\\\"@iconName\\\"],[[30,0,[\\\"triggerAction\\\"]],\\\"action du bouton\\\",\\\"add\\\"]],null]],[],false,[\\\"pix-icon-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-icon-button-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _clickByLabel.default)('action du bouton');\n\n      // then\n      assert.strictEqual(this.count, 2);\n    });\n    (0, _qunit.test)('it renders PixIconButton with disabled attribute', async function (assert) {\n      // given\n      this.set('triggerAction', () => {});\n\n      //when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixIconButton\n        @triggerAction={{this.triggerAction}}\n        @iconName='add'\n        disabled={{true}}\n        @ariaLabel=\"L'action du bouton\"\n      />\n      */\n      {\n        \"id\": \"WolSQTUb\",\n        \"block\": \"[[[8,[39,0],[[16,\\\"disabled\\\",true]],[[\\\"@triggerAction\\\",\\\"@iconName\\\",\\\"@ariaLabel\\\"],[[30,0,[\\\"triggerAction\\\"]],\\\"add\\\",\\\"L'action du bouton\\\"]],null]],[],false,[\\\"pix-icon-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-icon-button-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const componentElement = this.element.querySelector(COMPONENT_SELECTOR);\n      assert.true(componentElement.disabled);\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-indicator-card-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | PixIndicatorCard', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    this.title = 'Hello Dedans';\n    this.color = 'blue';\n    this.icon = 'help';\n    this.info = \"Coucou la bulle d'info\";\n    this.loadingMessage = 'texte de chargement sr';\n    (0, _qunit.test)('it renders', async function (assert) {\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixIndicatorCard @title={{this.title}} @color={{this.color}} @iconName={{this.icon}}>\n        <:default>42</:default>\n        <:sub>\n          En cours : 1\n        </:sub>\n      </PixIndicatorCard>\n      */\n      {\n        \"id\": \"RVdOTeHm\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@color\\\",\\\"@iconName\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"color\\\"]],[30,0,[\\\"icon\\\"]]]],[[\\\"default\\\",\\\"sub\\\"],[[[[1,\\\"42\\\"]],[]],[[[1,\\\"\\\\n    En cours : 1\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-indicator-card\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-indicator-card-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.strictEqual(screen.getByRole('term').textContent, this.title);\n      assert.strictEqual(screen.getByRole('definition').textContent, '42');\n      assert.dom(screen.getByText('En cours : 1')).exists();\n    });\n    (0, _qunit.test)('it shows the pop up info', async function (assert) {\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixIndicatorCard\n        @title={{this.title}}\n        @color={{this.color}}\n        @iconName={{this.icon}}\n        @info={{this.info}}\n        @infoLabel='En savoir plus'\n      >\n        <:default>42</:default>\n        <:sub>\n          En cours : 1\n        </:sub>\n      </PixIndicatorCard>\n      */\n      {\n        \"id\": \"YTZYussK\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@color\\\",\\\"@iconName\\\",\\\"@info\\\",\\\"@infoLabel\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"color\\\"]],[30,0,[\\\"icon\\\"]],[30,0,[\\\"info\\\"]],\\\"En savoir plus\\\"]],[[\\\"default\\\",\\\"sub\\\"],[[[[1,\\\"42\\\"]],[]],[[[1,\\\"\\\\n    En cours : 1\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-indicator-card\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-indicator-card-test.js\",\n        \"isStrictMode\": false\n      }));\n      screen.getByLabelText('En savoir plus').focus();\n      const tooltip = await screen.findByRole('tooltip');\n      assert.strictEqual(tooltip.innerText, this.info);\n    });\n    (0, _qunit.module)('#loadingMessage, when is loading', function () {\n      (0, _qunit.test)(\"it didn't display card infos\", async function () {\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixIndicatorCard\n          @title={{this.title}}\n          @color={{this.color}}\n          @iconName={{this.icon}}\n          @info={{this.info}}\n          @isLoading={{true}}\n          @loadingMessage={{this.loadingMessage}}\n        >\n          <:default>42</:default>\n          <:sub>\n            En cours : 1\n          </:sub>\n        </PixIndicatorCard>\n        */\n        {\n          \"id\": \"K3sl/w6P\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@color\\\",\\\"@iconName\\\",\\\"@info\\\",\\\"@isLoading\\\",\\\"@loadingMessage\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"color\\\"]],[30,0,[\\\"icon\\\"]],[30,0,[\\\"info\\\"]],true,[30,0,[\\\"loadingMessage\\\"]]]],[[\\\"default\\\",\\\"sub\\\"],[[[[1,\\\"42\\\"]],[]],[[[1,\\\"\\\\n    En cours : 1\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-indicator-card\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-indicator-card-test.js\",\n          \"isStrictMode\": false\n        }));\n        const title = screen.queryByText(this.title);\n        _qunit.assert.dom(title).doesNotExist();\n      });\n      (0, _qunit.test)('it display loading text', async function () {\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixIndicatorCard\n          @title={{this.title}}\n          @color={{this.color}}\n          @iconName={{this.icon}}\n          @info={{this.info}}\n          @isLoading={{true}}\n          @loadingMessage={{this.loadingMessage}}\n        >\n          <:default>42</:default>\n          <:sub>\n            En cours : 1\n          </:sub>\n        </PixIndicatorCard>\n        */\n        {\n          \"id\": \"K3sl/w6P\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@color\\\",\\\"@iconName\\\",\\\"@info\\\",\\\"@isLoading\\\",\\\"@loadingMessage\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"color\\\"]],[30,0,[\\\"icon\\\"]],[30,0,[\\\"info\\\"]],true,[30,0,[\\\"loadingMessage\\\"]]]],[[\\\"default\\\",\\\"sub\\\"],[[[[1,\\\"42\\\"]],[]],[[[1,\\\"\\\\n    En cours : 1\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-indicator-card\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-indicator-card-test.js\",\n          \"isStrictMode\": false\n        }));\n        const loadingText = screen.queryByText(this.loadingMessage);\n        _qunit.assert.dom(loadingText).exists();\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-input-code-test\", [\"qunit\", \"ember-qunit\", \"sinon\", \"@ember/test-helpers\", \"@1024pix/ember-testing-library\", \"dummy/tests/helpers/create-glimmer-component\", \"dummy/tests/helpers/fill-in-by-label\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _sinon, _testHelpers, _emberTestingLibrary, _createGlimmerComponent, _fillInByLabel, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"sinon\",0,\"@ember/test-helpers\",0,\"@1024pix/ember-testing-library\",0,\"dummy/tests/helpers/create-glimmer-component\",0,\"dummy/tests/helpers/fill-in-by-label\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | pix-input-code', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const COMPONENT_SELECTOR = '.pix-input-code';\n    const INPUT_SELECTOR = '#code-input';\n    (0, _qunit.test)('it renders the default PixInputCode with 6 inputs', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInputCode @legend='Nom du PixInputCode' @ariaLabel='Champ' />\n      */\n      {\n        \"id\": \"QQiLq/rk\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\"],[\\\"Nom du PixInputCode\\\",\\\"Champ\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom(COMPONENT_SELECTOR).exists();\n      const inputElementsFound = this.element.querySelectorAll('input');\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(inputElementsFound.length, 6);\n    });\n    (0, _qunit.test)('it should have a fieldset with a legend for accessibility', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInputCode @legend=\"Ce code est le code de vérification d'email\" @ariaLabel='Champ' />\n      */\n      {\n        \"id\": \"ucZe+hUp\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\"],[\\\"Ce code est le code de vérification d'email\\\",\\\"Champ\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom('fieldset').exists();\n      assert.contains(\"Ce code est le code de vérification d'email\");\n    });\n    (0, _qunit.test)('it should explain how PixInputCode can be eddited', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInputCode\n        @legend=\"Ce code est le code de vérification d'email\"\n        @ariaLabel='Champ'\n        @explanationOfUse='Vous pouvez utiliser les flèches pour naviguer de champ en champ'\n      />\n      */\n      {\n        \"id\": \"dAOdBeOp\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\",\\\"@explanationOfUse\\\"],[\\\"Ce code est le code de vérification d'email\\\",\\\"Champ\\\",\\\"Vous pouvez utiliser les flèches pour naviguer de champ en champ\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('Vous pouvez utiliser les flèches pour naviguer de champ en champ');\n    });\n    (0, _qunit.test)('it should throw an error if PixInputCode does not have an ariaLabel', async function (assert) {\n      // given\n      const componentParams = {\n        ariaLabel: null,\n        legend: 'super legende'\n      };\n      const component = (0, _createGlimmerComponent.default)('pix-input-code', componentParams);\n\n      // when & then\n      const expectedError = new Error('ERROR in PixInputCode component, you must provide an @ariaLabel and a @legend');\n      assert.throws(function () {\n        component.ariaLabel;\n      }, expectedError);\n    });\n    (0, _qunit.test)('it should throw an error if PixInputCode does not have a legend', async function (assert) {\n      // given\n      const componentParams = {\n        ariaLabel: 'Champ',\n        legend: null\n      };\n      const component = (0, _createGlimmerComponent.default)('pix-input-code', componentParams);\n\n      // when & then\n      const expectedError = new Error('ERROR in PixInputCode component, you must provide an @ariaLabel and a @legend');\n      assert.throws(function () {\n        component.legend;\n      }, expectedError);\n    });\n    (0, _qunit.module)('when adding characters', function () {\n      (0, _qunit.test)('it should focus on next input after inputting value', async function (assert) {\n        // given\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode @legend='Nom du PixInputCode' @ariaLabel='Champ' />\n        */\n        {\n          \"id\": \"QQiLq/rk\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\"],[\\\"Nom du PixInputCode\\\",\\\"Champ\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _fillInByLabel.default)('Champ 1', '1');\n\n        // then\n        assert.dom(`${INPUT_SELECTOR}-1`).hasClass('filled');\n        assert.dom(`${INPUT_SELECTOR}-2`).isFocused();\n      });\n      (0, _qunit.test)('it should truncate input to 1 digit', async function (assert) {\n        // given\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode @legend='Nom du PixInputCode' @ariaLabel='label' />\n        */\n        {\n          \"id\": \"UhYZYz8Y\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _fillInByLabel.default)('label 4', '12345');\n\n        // then\n        assert.dom(`${INPUT_SELECTOR}-5`).isFocused();\n        assert.dom(`${INPUT_SELECTOR}-5`).isFocused();\n        assert.dom(`${INPUT_SELECTOR}-4`).hasValue('1');\n      });\n      (0, _qunit.test)('it should not allow characters when type is number', async function (assert) {\n        // given\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode @legend='Nom du PixInputCode' @ariaLabel='label' />\n        */\n        {\n          \"id\": \"UhYZYz8Y\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _fillInByLabel.default)('label 4', 'a');\n\n        // then\n        assert.dom(`${INPUT_SELECTOR}-4`).isFocused();\n        assert.dom(`${INPUT_SELECTOR}-4`).doesNotHaveClass('filled');\n        assert.dom(`${INPUT_SELECTOR}-4`).hasValue('');\n      });\n      (0, _qunit.test)('it should truncate input to 1 character', async function (assert) {\n        // given\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode @legend='Nom du PixInputCode' @ariaLabel='label' @inputType='text' />\n        */\n        {\n          \"id\": \"XyfsAZjO\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\",\\\"@inputType\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\",\\\"text\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _fillInByLabel.default)('label 4', 'abcdf');\n\n        // then\n        assert.dom(`${INPUT_SELECTOR}-5`).isFocused();\n        assert.dom(`${INPUT_SELECTOR}-4`).hasValue('a');\n      });\n      (0, _qunit.test)('it should trigger function with entered code when all inputs are filled', async function (assert) {\n        // given\n        this.set('onAllInputsFilled', _sinon.default.spy());\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode\n          @legend='Nom du PixInputCode'\n          @ariaLabel='label'\n          @onAllInputsFilled={{this.onAllInputsFilled}}\n        />\n        */\n        {\n          \"id\": \"3LHmXjYZ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\",\\\"@onAllInputsFilled\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\",[30,0,[\\\"onAllInputsFilled\\\"]]]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _fillInByLabel.default)('label 1', '3');\n        await (0, _fillInByLabel.default)('label 2', '5');\n        await (0, _fillInByLabel.default)('label 3', '7');\n        await (0, _fillInByLabel.default)('label 4', '2');\n        await (0, _fillInByLabel.default)('label 5', '4');\n        await (0, _fillInByLabel.default)('label 6', '6');\n\n        // then\n        assert.ok(this.onAllInputsFilled.calledOnce, 'the callback should be called once');\n        assert.ok(this.onAllInputsFilled.calledWith, ['357246']);\n      });\n      (0, _qunit.test)('it should not trigger function with entered code when all inputs not filled', async function (assert) {\n        // given\n        this.set('onAllInputsFilled', _sinon.default.spy());\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode\n          @legend='Nom du PixInputCode'\n          @ariaLabel='label'\n          @onAllInputsFilled={{this.onAllInputsFilled}}\n        />\n        */\n        {\n          \"id\": \"3LHmXjYZ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\",\\\"@onAllInputsFilled\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\",[30,0,[\\\"onAllInputsFilled\\\"]]]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _fillInByLabel.default)('label 1', '3');\n        await (0, _fillInByLabel.default)('label 2', '5');\n        await (0, _fillInByLabel.default)('label 3', '7');\n        await (0, _fillInByLabel.default)('label 5', '4');\n        await (0, _fillInByLabel.default)('label 6', '6');\n\n        // then\n        assert.notOk(this.onAllInputsFilled.calledOnce);\n      });\n      (0, _qunit.test)('it should trigger function with entered code even if last entered value is not the last input', async function (assert) {\n        // given\n        this.set('onAllInputsFilled', _sinon.default.spy());\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode\n          @legend='Nom du PixInputCode'\n          @ariaLabel='label'\n          @onAllInputsFilled={{this.onAllInputsFilled}}\n        />\n        */\n        {\n          \"id\": \"3LHmXjYZ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\",\\\"@onAllInputsFilled\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\",[30,0,[\\\"onAllInputsFilled\\\"]]]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _fillInByLabel.default)('label 1', '3');\n        await (0, _fillInByLabel.default)('label 2', '5');\n        await (0, _fillInByLabel.default)('label 3', '7');\n        await (0, _fillInByLabel.default)('label 5', '4');\n        await (0, _fillInByLabel.default)('label 6', '6');\n        await (0, _fillInByLabel.default)('label 4', '2');\n\n        // then\n        assert.ok(this.onAllInputsFilled.calledOnce, 'the callback should be called once');\n        assert.ok(this.onAllInputsFilled.calledWith, ['357246']);\n      });\n    });\n    (0, _qunit.module)('when deleting characters', function () {\n      (0, _qunit.test)('it should focus on previous input after Backspace', async function (assert) {\n        // given\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode @legend='Nom du PixInputCode' @ariaLabel='label' />\n        */\n        {\n          \"id\": \"UhYZYz8Y\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _testHelpers.focus)(`${INPUT_SELECTOR}-4`);\n        await (0, _testHelpers.triggerKeyEvent)(`${INPUT_SELECTOR}-4`, 'keyup', 'Backspace');\n\n        // then\n        assert.dom(`${INPUT_SELECTOR}-3`).isFocused();\n      });\n    });\n    (0, _qunit.module)('when changing focus', function () {\n      (0, _qunit.test)('it should focus on previous input after ArrowLeft', async function (assert) {\n        // given\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode @legend='Nom du PixInputCode' @ariaLabel='label' />\n        */\n        {\n          \"id\": \"UhYZYz8Y\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _testHelpers.focus)(`${INPUT_SELECTOR}-4`);\n        await (0, _testHelpers.triggerKeyEvent)(`${INPUT_SELECTOR}-4`, 'keyup', 'ArrowLeft');\n\n        // then\n        assert.dom(`${INPUT_SELECTOR}-3`).isFocused();\n      });\n      (0, _qunit.test)('it should focus on next input after ArrowRight', async function (assert) {\n        // given\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode @legend='Nom du PixInputCode' @ariaLabel='label' />\n        */\n        {\n          \"id\": \"UhYZYz8Y\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _testHelpers.focus)(`${INPUT_SELECTOR}-4`);\n        await (0, _testHelpers.triggerKeyEvent)(`${INPUT_SELECTOR}-4`, 'keyup', 'ArrowRight');\n\n        // then\n        assert.dom(`${INPUT_SELECTOR}-5`).isFocused();\n      });\n      (0, _qunit.test)('it should not focus on next input after ArrowUp or ArrowDown', async function (assert) {\n        // given\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode @legend='Nom du PixInputCode' @ariaLabel='label' />\n        */\n        {\n          \"id\": \"UhYZYz8Y\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _testHelpers.focus)(`${INPUT_SELECTOR}-4`);\n        await (0, _testHelpers.triggerKeyEvent)(`${INPUT_SELECTOR}-4`, 'keydown', 'ArrowUp');\n        await (0, _testHelpers.triggerKeyEvent)(`${INPUT_SELECTOR}-4`, 'keydown', 'ArrowUp');\n        await (0, _testHelpers.triggerKeyEvent)(`${INPUT_SELECTOR}-4`, 'keydown', 'ArrowUp');\n        await (0, _testHelpers.triggerKeyEvent)(`${INPUT_SELECTOR}-4`, 'keydown', 'ArrowDown');\n\n        // then\n        assert.dom(`${INPUT_SELECTOR}-4`).isFocused();\n      });\n    });\n    (0, _qunit.module)('when filling inputs by copy paste', function () {\n      (0, _qunit.test)('it should support paste filling all inputs', async function (assert) {\n        // given\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode @legend='Nom du PixInputCode' @ariaLabel='label' />\n        */\n        {\n          \"id\": \"UhYZYz8Y\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\"]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _testHelpers.triggerEvent)(`${INPUT_SELECTOR}-1`, 'paste', {\n          clipboardData: {\n            getData: () => '123456'\n          }\n        });\n\n        // then\n        [1, 2, 3, 4, 5, 6].forEach(index => {\n          assert.dom(`${INPUT_SELECTOR}-${index}`).hasValue(`${index}`);\n        });\n      });\n      (0, _qunit.test)('it should trigger function with entered code after paste', async function (assert) {\n        // given\n        this.set('onAllInputsFilled', _sinon.default.spy());\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputCode\n          @legend='Nom du PixInputCode'\n          @ariaLabel='label'\n          @onAllInputsFilled={{this.onAllInputsFilled}}\n        />\n        */\n        {\n          \"id\": \"3LHmXjYZ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@legend\\\",\\\"@ariaLabel\\\",\\\"@onAllInputsFilled\\\"],[\\\"Nom du PixInputCode\\\",\\\"label\\\",[30,0,[\\\"onAllInputsFilled\\\"]]]],null]],[],false,[\\\"pix-input-code\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-code-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _testHelpers.triggerEvent)(`${INPUT_SELECTOR}-1`, 'paste', {\n          clipboardData: {\n            getData: () => '‎ 357246'\n          }\n        });\n\n        // then\n        assert.ok(this.onAllInputsFilled.calledOnce, 'the callback should be called once');\n        assert.ok(this.onAllInputsFilled.calledWith, ['357246']);\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-input-password-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/test-helpers\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _testHelpers, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/test-helpers\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | pix-input-password', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const INPUT_SELECTOR = '.pix-input-password input[type=password]';\n    const BUTTON_SELECTOR = '.pix-input-password__button';\n    (0, _qunit.test)('it should be possible to have an input label', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInputPassword @id='password'><:label>Mot de passe</:label></PixInputPassword>\n      */\n      {\n        \"id\": \"bVRhRsk+\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"password\\\"]],[[\\\"label\\\"],[[[[1,\\\"Mot de passe\\\"]],[]]]]]],[],false,[\\\"pix-input-password\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-password-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.ok(screen.getByLabelText('Mot de passe'));\n    });\n    (0, _qunit.test)('it should be possible to add extra information to input', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInputPassword @id='password' @subLabel='une brève information'><:label>Mot de passe</:label></PixInputPassword>\n      */\n      {\n        \"id\": \"rwSQMRhE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@subLabel\\\"],[\\\"password\\\",\\\"une brève information\\\"]],[[\\\"label\\\"],[[[[1,\\\"Mot de passe\\\"]],[]]]]]],[],false,[\\\"pix-input-password\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-password-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.ok(screen.getByLabelText('Mot de passe une brève information'));\n    });\n    (0, _qunit.test)('it should be possible to associate an error message to input', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInputPassword\n        @id='password'\n        @errorMessage=\"Un message d'erreur.\"\n        @validationStatus='error'\n      ><:label>Mot de passe</:label></PixInputPassword>\n      */\n      {\n        \"id\": \"YxX8EXMR\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@errorMessage\\\",\\\"@validationStatus\\\"],[\\\"password\\\",\\\"Un message d'erreur.\\\",\\\"error\\\"]],[[\\\"label\\\"],[[[[1,\\\"Mot de passe\\\"]],[]]]]]],[],false,[\\\"pix-input-password\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-password-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom(screen.getByText(\"Un message d'erreur.\")).exists();\n    });\n    (0, _qunit.test)('it should display an input prefix if necessary', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInputPassword @id='password' @prefix='A prefix'><:label>Mot de passe</:label></PixInputPassword>\n      */\n      {\n        \"id\": \"OrJi7+nb\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@prefix\\\"],[\\\"password\\\",\\\"A prefix\\\"]],[[\\\"label\\\"],[[[[1,\\\"Mot de passe\\\"]],[]]]]]],[],false,[\\\"pix-input-password\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-password-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('A prefix');\n    });\n    (0, _qunit.test)('it should be possible to add more params to input', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInputPassword @id='password' autocomplete='off'><:label>Mot de passe</:label></PixInputPassword>\n      */\n      {\n        \"id\": \"78FAW6je\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"autocomplete\\\",\\\"off\\\"]],[[\\\"@id\\\"],[\\\"password\\\"]],[[\\\"label\\\"],[[[[1,\\\"Mot de passe\\\"]],[]]]]]],[],false,[\\\"pix-input-password\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-password-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const selectorElement = this.element.querySelector(INPUT_SELECTOR);\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(selectorElement.autocomplete, 'off');\n    });\n    (0, _qunit.test)('it renders PixInputPassword with password visibility button', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInputPassword @id='password'><:label>Mot de passe</:label></PixInputPassword>\n      */\n      {\n        \"id\": \"bVRhRsk+\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"password\\\"]],[[\\\"label\\\"],[[[[1,\\\"Mot de passe\\\"]],[]]]]]],[],false,[\\\"pix-input-password\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-password-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const passwordVisibilityButton = this.element.querySelector(BUTTON_SELECTOR);\n      assert.dom(passwordVisibilityButton).exists();\n    });\n    (0, _qunit.test)('it should be possible to track value of input', async function (assert) {\n      // given && when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInputPassword @id='password' @value='pix123'><:label>Mot de passe</:label></PixInputPassword>\n      */\n      {\n        \"id\": \"rgwD9/Ui\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@value\\\"],[\\\"password\\\",\\\"pix123\\\"]],[[\\\"label\\\"],[[[[1,\\\"Mot de passe\\\"]],[]]]]]],[],false,[\\\"pix-input-password\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-password-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const selectorElement = this.element.querySelector(INPUT_SELECTOR);\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(selectorElement.value, 'pix123');\n    });\n    (0, _qunit.test)('it should be possible to make pix input password required', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInputPassword @id='password' @requiredLabel='Champ obligatoire'><:label>Mot de passe</:label></PixInputPassword>\n      */\n      {\n        \"id\": \"xAY6H2T2\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@requiredLabel\\\"],[\\\"password\\\",\\\"Champ obligatoire\\\"]],[[\\\"label\\\"],[[[[1,\\\"Mot de passe\\\"]],[]]]]]],[],false,[\\\"pix-input-password\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-password-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const requiredPasswordInput = screen.getByLabelText('* Mot de passe');\n      assert.dom(requiredPasswordInput).isRequired();\n    });\n    (0, _qunit.module)('when the password visibility button is clicked', function () {\n      (0, _qunit.test)('it should focus on input', async function (assert) {\n        // given\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixInputPassword @id='password' @requiredLabel='Champ obligatoire'><:label>Mot de passe</:label></PixInputPassword>\n        */\n        {\n          \"id\": \"xAY6H2T2\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@requiredLabel\\\"],[\\\"password\\\",\\\"Champ obligatoire\\\"]],[[\\\"label\\\"],[[[[1,\\\"Mot de passe\\\"]],[]]]]]],[],false,[\\\"pix-input-password\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-password-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _testHelpers.click)(screen.getByRole('button', {\n          name: 'Afficher le mot de passe'\n        }));\n\n        // then\n        assert.dom(screen.getByLabelText('* Mot de passe')).isFocused();\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-input-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"dummy/tests/helpers/fill-in-by-label\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _fillInByLabel, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"dummy/tests/helpers/fill-in-by-label\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | PixInput', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const INPUT_SELECTOR = '.pix-input input';\n    (0, _qunit.test)('it renders the default PixInput', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInput @id='first-name'><:label>Prénom</:label></PixInput>\n      */\n      {\n        \"id\": \"N9FXXmju\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"first-name\\\"]],[[\\\"label\\\"],[[[[1,\\\"Prénom\\\"]],[]]]]]],[],false,[\\\"pix-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _fillInByLabel.default)('Prénom', 'Jeanne');\n\n      // then\n      assert.contains('Jeanne');\n    });\n    (0, _qunit.test)('it should be possible to give a number as id', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInput @id={{123}}><:label>Prénom</:label></PixInput>\n      */\n      {\n        \"id\": \"4ynuR+eR\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[123]],[[\\\"label\\\"],[[[[1,\\\"Prénom\\\"]],[]]]]]],[],false,[\\\"pix-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const selectorElement = this.element.querySelector(INPUT_SELECTOR);\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(selectorElement.id, '123');\n    });\n    (0, _qunit.test)('it should be possible to give a label to input', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInput @id='firstName'><:label>Prénom</:label></PixInput>\n      */\n      {\n        \"id\": \"9kENiG7T\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"firstName\\\"]],[[\\\"label\\\"],[[[[1,\\\"Prénom\\\"]],[]]]]]],[],false,[\\\"pix-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.ok(screen.getByLabelText('Prénom'));\n    });\n    (0, _qunit.test)('it should be possible to give an extra information to input', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInput @id='firstName' @subLabel='a small information'><:label>Prénom</:label></PixInput>\n      */\n      {\n        \"id\": \"jT+S9xIT\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@subLabel\\\"],[\\\"firstName\\\",\\\"a small information\\\"]],[[\\\"label\\\"],[[[[1,\\\"Prénom\\\"]],[]]]]]],[],false,[\\\"pix-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.ok(screen.getByLabelText('Prénom a small information'));\n    });\n    (0, _qunit.test)('it should be possible to give an error message to input', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInput\n        @id='firstName'\n        @errorMessage='Seul les caractères alphanumériques sont autorisés'\n        @validationStatus='error'\n      ><:label>Prénom</:label></PixInput>\n      */\n      {\n        \"id\": \"bESKcVMv\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@errorMessage\\\",\\\"@validationStatus\\\"],[\\\"firstName\\\",\\\"Seul les caractères alphanumériques sont autorisés\\\",\\\"error\\\"]],[[\\\"label\\\"],[[[[1,\\\"Prénom\\\"]],[]]]]]],[],false,[\\\"pix-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom(screen.getByText('Seul les caractères alphanumériques sont autorisés')).exists();\n    });\n    (0, _qunit.test)('it should be possible to track value from input', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInput @id='firstName' @value='Jeanne'><:label>Prénom</:label></PixInput>\n      */\n      {\n        \"id\": \"ME2q6I88\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@value\\\"],[\\\"firstName\\\",\\\"Jeanne\\\"]],[[\\\"label\\\"],[[[[1,\\\"Prénom\\\"]],[]]]]]],[],false,[\\\"pix-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const selectorElement = this.element.querySelector(INPUT_SELECTOR);\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(selectorElement.value, 'Jeanne');\n    });\n    (0, _qunit.test)('it should be possible to give more params to input', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInput @id='firstName' autocomplete='on'><:label>Prénom</:label></PixInput>\n      */\n      {\n        \"id\": \"mRGlHZfE\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"autocomplete\\\",\\\"on\\\"]],[[\\\"@id\\\"],[\\\"firstName\\\"]],[[\\\"label\\\"],[[[[1,\\\"Prénom\\\"]],[]]]]]],[],false,[\\\"pix-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const selectorElement = this.element.querySelector(INPUT_SELECTOR);\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(selectorElement.autocomplete, 'on');\n    });\n    (0, _qunit.test)('it should be possible to make pix input required', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixInput @id='firstName' @requiredLabel='Champ obligatoire'><:label>Prénom</:label></PixInput>\n      */\n      {\n        \"id\": \"zuw8v15i\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@requiredLabel\\\"],[\\\"firstName\\\",\\\"Champ obligatoire\\\"]],[[\\\"label\\\"],[[[[1,\\\"Prénom\\\"]],[]]]]]],[],false,[\\\"pix-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-input-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const requiredInput = screen.getByLabelText('* Prénom');\n      assert.dom(requiredInput).isRequired();\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-label-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | PixLabel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders PixLabel with for and content', async function (assert) {\n      // given\n      const label = 'Bonjour Pix !';\n      this.set('label', label);\n\n      // when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixLabel @for='linkableElement'>{{this.label}}</PixLabel><input id='linkableElement' />\n      */\n      {\n        \"id\": \"D64lhhh0\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@for\\\"],[\\\"linkableElement\\\"]],[[\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]],[10,\\\"input\\\"],[14,1,\\\"linkableElement\\\"],[12],[13]],[],false,[\\\"pix-label\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-label-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.ok(screen.getByLabelText(label));\n    });\n    (0, _qunit.test)('it renders PixLabel with additional information', async function (assert) {\n      // given\n      const label = 'Bonjour Pix !';\n      this.set('label', label);\n      const subLabel = 'some explaination';\n      this.set('subLabel', subLabel);\n\n      // when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixLabel @for='linkableElement' @subLabel={{this.subLabel}}>{{this.label}}</PixLabel><input\n        id='linkableElement'\n      />\n      */\n      {\n        \"id\": \"s/Q1j5Z3\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@for\\\",\\\"@subLabel\\\"],[\\\"linkableElement\\\",[30,0,[\\\"subLabel\\\"]]]],[[\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]],[10,\\\"input\\\"],[14,1,\\\"linkableElement\\\"],[12],[13]],[],false,[\\\"pix-label\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-label-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.ok(screen.getByLabelText([label, subLabel].join(' ')));\n    });\n    (0, _qunit.test)('it renders PixLabel with requiredLabel', async function (assert) {\n      // given\n      const label = 'Bonjour Pix !';\n      this.set('label', label);\n      this.set('requiredLabel', 'this field is required');\n\n      // when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixLabel\n        @for='linkableElement'\n        @requiredLabel={{this.requiredLabel}}\n      >{{this.label}}</PixLabel><input id='linkableElement' />\n      */\n      {\n        \"id\": \"9itBsXEq\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@for\\\",\\\"@requiredLabel\\\"],[\\\"linkableElement\\\",[30,0,[\\\"requiredLabel\\\"]]]],[[\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]],[10,\\\"input\\\"],[14,1,\\\"linkableElement\\\"],[12],[13]],[],false,[\\\"pix-label\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-label-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.ok(screen.getByLabelText(['*', label].join(' ')));\n    });\n    (0, _qunit.test)('it still accessible when hidden label', async function (assert) {\n      // given\n      const label = 'Bonjour Pix !';\n      this.set('label', label);\n\n      // when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixLabel @for='linkableElement' @screenReaderOnly={{true}}>{{this.label}}</PixLabel><input\n        id='linkableElement'\n      />\n      */\n      {\n        \"id\": \"KSRzAq+w\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@for\\\",\\\"@screenReaderOnly\\\"],[\\\"linkableElement\\\",true]],[[\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]],[10,\\\"input\\\"],[14,1,\\\"linkableElement\\\"],[12],[13]],[],false,[\\\"pix-label\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-label-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.ok(screen.getByLabelText(label));\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-message-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | pix-message', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the given content', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixMessage>Message text</PixMessage>\n      */\n      {\n        \"id\": \"lOff7vrZ\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"Message text\\\"]],[]]]]]],[],false,[\\\"pix-message\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-message-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('Message text');\n    });\n    (0, _qunit.test)('it renders with the given type', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixMessage @type='info' />\n      */\n      {\n        \"id\": \"bHZoI+SE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\"],[\\\"info\\\"]],null]],[],false,[\\\"pix-message\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-message-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const pixMessageElement = this.element.querySelector('.pix-message');\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(pixMessageElement.classList.toString(), 'pix-message pix-message--info');\n    });\n    (0, _qunit.test)('it renders with attributes override', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixMessage aria-label='world' />\n      */\n      {\n        \"id\": \"MQkWXRoq\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"aria-label\\\",\\\"world\\\"]],null,null]],[],false,[\\\"pix-message\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-message-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const pixMessageElement = this.element.querySelector('.pix-message');\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(pixMessageElement.getAttribute('aria-label'), 'world');\n    });\n    (0, _qunit.test)('it renders with an icon', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixMessage @withIcon='true' />\n      */\n      {\n        \"id\": \"Z7zG9ZeD\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@withIcon\\\"],[\\\"true\\\"]],null]],[],false,[\\\"pix-message\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-message-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const icon = screen.getByRole('img', {\n        hidden: true\n      });\n      assert.true(icon.innerHTML.includes('info'));\n    });\n    (0, _qunit.test)('it renders with a warning icon for warning type', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixMessage @type='warning' @withIcon='true' />\n      */\n      {\n        \"id\": \"AgyAKl3A\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@withIcon\\\"],[\\\"warning\\\",\\\"true\\\"]],null]],[],false,[\\\"pix-message\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-message-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const icon = screen.getByRole('img', {\n        hidden: true\n      });\n      assert.true(icon.innerHTML.includes('#warning'));\n    });\n    (0, _qunit.test)('it renders with a success icon for success type', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixMessage @type='success' @withIcon='true' />\n      */\n      {\n        \"id\": \"UV3IYQbM\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@withIcon\\\"],[\\\"success\\\",\\\"true\\\"]],null]],[],false,[\\\"pix-message\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-message-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const icon = screen.getByRole('img', {\n        hidden: true\n      });\n      assert.true(icon.innerHTML.includes('#checkCircle'));\n    });\n    (0, _qunit.test)('it renders with a alert icon for error type', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixMessage @type='error' @withIcon='true' />\n      */\n      {\n        \"id\": \"BMWRx65t\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@type\\\",\\\"@withIcon\\\"],[\\\"error\\\",\\\"true\\\"]],null]],[],false,[\\\"pix-message\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-message-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const icon = screen.getByRole('img', {\n        hidden: true\n      });\n      assert.true(icon.innerHTML.includes('#error'));\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-modal-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@1024pix/ember-testing-library\", \"sinon\", \"dummy/tests/helpers/create-glimmer-component\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _emberTestingLibrary, _sinon, _createGlimmerComponent, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@1024pix/ember-testing-library\",0,\"sinon\",0,\"dummy/tests/helpers/create-glimmer-component\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | modal', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.module)('when showModal is equal true', function () {\n      (0, _qunit.test)('it renders the default PixModal', async function (assert) {\n        // given\n        this.title = \"It's a modal!\";\n        this.showModal = true;\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixModal @title={{this.title}} @showModal={{this.showModal}}>\n          <:content>\n            content\n          </:content>\n          <:footer>\n            footer\n          </:footer>\n        </PixModal>\n        */\n        {\n          \"id\": \"0tEqPv5+\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@showModal\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"showModal\\\"]]]],[[\\\"content\\\",\\\"footer\\\"],[[[[1,\\\"\\\\n    content\\\\n  \\\"]],[]],[[[1,\\\"\\\\n    footer\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-modal\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-modal-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.contains(\"It's a modal!\");\n        assert.contains('content');\n        assert.contains('footer');\n        assert.dom('.pix-modal__overlay--hidden').doesNotExist();\n      });\n      (0, _qunit.module)('when close button is clicked', function () {\n        (0, _qunit.test)('it should call onClose function passed in argument', async function (assert) {\n          // given\n          this.title = 'Close me baby one more time';\n          this.showModal = true;\n          this.onCloseButtonClick = _sinon.default.stub();\n\n          // when\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixModal\n            @title={{this.title}}\n            @onCloseButtonClick={{this.onCloseButtonClick}}\n            @showModal={{this.showModal}}\n          >\n            content\n          </PixModal>\n          */\n          {\n            \"id\": \"Ca3bJE2H\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@onCloseButtonClick\\\",\\\"@showModal\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"onCloseButtonClick\\\"]],[30,0,[\\\"showModal\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-modal\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-modal-test.js\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.click)(screen.getByRole('button', {\n            name: /Fermer/\n          }));\n\n          // then\n          assert.ok(this.onCloseButtonClick.calledOnce);\n        });\n      });\n      (0, _qunit.module)('when escape button is clicked', function () {\n        (0, _qunit.test)('it should call onClose function passed in argument', async function (assert) {\n          // given\n          this.title = 'Close me baby one more time';\n          this.showModal = true;\n          this.onCloseButtonClick = _sinon.default.stub();\n\n          // when\n          await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixModal\n            @title={{this.title}}\n            @onCloseButtonClick={{this.onCloseButtonClick}}\n            @showModal={{this.showModal}}\n          >\n            content\n          </PixModal>\n          */\n          {\n            \"id\": \"Ca3bJE2H\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@onCloseButtonClick\\\",\\\"@showModal\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"onCloseButtonClick\\\"]],[30,0,[\\\"showModal\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-modal\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-modal-test.js\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.triggerKeyEvent)('.pix-modal__overlay', 'keyup', 'Escape');\n\n          // then\n          assert.ok(this.onCloseButtonClick.calledOnce);\n        });\n      });\n    });\n    (0, _qunit.module)('when showModal is false', function () {\n      (0, _qunit.test)('it should not show modal', async function (assert) {\n        // given\n        this.title = \"It's a modal!\";\n        this.showModal = false;\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixModal @title={{this.title}} @showModal={{this.showModal}}>\n          <:content>\n            content\n          </:content>\n          <:footer>\n            footer\n          </:footer>\n        </PixModal>\n        */\n        {\n          \"id\": \"0tEqPv5+\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@showModal\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"showModal\\\"]]]],[[\\\"content\\\",\\\"footer\\\"],[[[[1,\\\"\\\\n    content\\\\n  \\\"]],[]],[[[1,\\\"\\\\n    footer\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-modal\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-modal-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.dom('.pix-modal__overlay--hidden').exists();\n      });\n    });\n    (0, _qunit.test)('it should throw an error if require @title argument is missing', async function (assert) {\n      // given\n      const componentParams = {};\n\n      // when\n      const renderComponent = function () {\n        (0, _createGlimmerComponent.default)('pix-modal', componentParams);\n      };\n\n      // then\n      const expectedError = new Error('ERROR in PixModal component: @title argument is required.');\n      assert.throws(renderComponent, expectedError);\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-multi-select-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@testing-library/user-event\", \"@testing-library/dom\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _userEvent, _dom, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@testing-library/user-event\",0,\"@testing-library/dom\",0,\"sinon\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | multi-select', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const DEFAULT_OPTIONS = [{\n      value: '1',\n      label: 'Salade'\n    }, {\n      value: '2',\n      label: 'Tomate'\n    }, {\n      value: '3',\n      label: 'Oignon'\n    }];\n    (0, _qunit.module)('common cases', function () {\n      (0, _qunit.test)('it renders PixMultiSelect with hidden list', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.values = [];\n        this.onChange = () => {};\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @values={{this.values}}\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @emptyMessage={{this.emptyMessage}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        \n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"aOZkpFYN\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.strictEqual(screen.queryAllByRole('checkbox').length, 0);\n      });\n      (0, _qunit.test)('it should updates selected items when @values is reset', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.values = ['2'];\n        this.onChange = values => this.set('values', values);\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @values={{this.values}}\n          @emptyMessage={{this.emptyMessage}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"wolFMg8j\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@values\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        this.set('values', []);\n        await (0, _emberTestingLibrary.clickByName)('multiSelectLabel');\n        await screen.findByRole('menu');\n        // then\n        const checkboxElement = screen.queryAllByRole('checkbox');\n        assert.false(checkboxElement[0].checked);\n        assert.false(checkboxElement[1].checked);\n        assert.false(checkboxElement[2].checked);\n      });\n      (0, _qunit.module)('onClick', function () {\n        (0, _qunit.test)('it renders PixMultiSelect list', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = DEFAULT_OPTIONS;\n          this.values = [];\n          this.onChange = () => {};\n          this.emptyMessage = 'no result';\n          this.placeholder = 'MultiSelectTest';\n          this.id = 'id-MultiSelectTest';\n\n          // when\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @values={{this.values}}\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @emptyMessage={{this.emptyMessage}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"aOZkpFYN\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          await (0, _emberTestingLibrary.clickByName)('multiSelectLabel');\n          await screen.findByRole('menu');\n\n          // then\n          assert.strictEqual(screen.queryAllByRole('checkbox').length, 3);\n        });\n        (0, _qunit.test)('it renders the PixMultiSelect with empty message', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = [];\n          this.values = [];\n          this.onChange = () => {};\n          this.emptyMessage = 'no result';\n          this.placeholder = 'MultiSelectTest';\n          this.id = 'id-MultiSelectTest';\n\n          // when\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @values={{this.values}}\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @emptyMessage={{this.emptyMessage}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"aOZkpFYN\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          await (0, _emberTestingLibrary.clickByName)('multiSelectLabel');\n          await screen.findByRole('menu');\n          // then\n          assert.strictEqual(screen.queryAllByRole('checkbox').length, 0);\n          assert.contains('no result');\n        });\n        (0, _qunit.test)('it renders the PixMultiSelect with default checked', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = DEFAULT_OPTIONS;\n          this.onChange = () => {};\n          this.values = ['2'];\n          this.emptyMessage = 'no result';\n          this.placeholder = 'MultiSelectTest';\n          this.id = 'id-MultiSelectTest';\n\n          // when\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @values={{this.values}}\n            @emptyMessage={{this.emptyMessage}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"wolFMg8j\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@values\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          await (0, _emberTestingLibrary.clickByName)('multiSelectLabel');\n          await _userEvent.default.keyboard('[ArrowDown]');\n          await screen.findByRole('menu');\n\n          // then\n          const checkboxElement = screen.queryAllByRole('checkbox');\n          assert.strictEqual(checkboxElement.length, 3);\n          assert.false(checkboxElement[0].checked);\n          assert.true(checkboxElement[1].checked);\n          assert.false(checkboxElement[2].checked);\n        });\n      });\n      (0, _qunit.module)('display main text', function () {\n        (0, _qunit.test)('it should display selected labels on MultiSelect', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = DEFAULT_OPTIONS;\n          this.onChange = () => {};\n          this.values = ['2', '3'];\n          this.emptyMessage = 'no result';\n          this.placeholder = 'MultiSelectTest';\n          this.id = 'id-MultiSelectTest';\n\n          // when\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @values={{this.values}}\n            @emptyMessage={{this.emptyMessage}}\n            @isSearchable={{true}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"DijQJw5M\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@values\\\",\\\"@emptyMessage\\\",\\\"@isSearchable\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"emptyMessage\\\"]],true,[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          // then\n          const inputElement = screen.getByLabelText('multiSelectLabel');\n          assert.strictEqual(inputElement.placeholder, 'Tomate, Oignon');\n        });\n      });\n      (0, _qunit.module)('onChange', function () {\n        (0, _qunit.test)('it should trigger onChange function when an item is selected', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = DEFAULT_OPTIONS;\n          this.placeholder = 'MultiSelectTest';\n          this.emptyMessage = 'no result';\n          this.id = 'id-MultiSelectTest';\n          this.onChange = _sinon.default.spy();\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @emptyMessage={{this.emptyMessage}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"S/aUmGcA\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await (0, _emberTestingLibrary.clickByName)('multiSelectLabel');\n          await screen.findByRole('menu');\n          await (0, _emberTestingLibrary.clickByName)('Salade');\n\n          // then\n          assert.true(screen.getByLabelText('Salade').checked);\n          assert.ok(this.onChange.calledOnce, 'the callback should be called once');\n          _sinon.default.assert.calledWithMatch(this.onChange, ['1']);\n        });\n        (0, _qunit.test)('it should unselect item and return selected item of the updated list', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = DEFAULT_OPTIONS;\n          this.placeholder = 'MultiSelectTest';\n          this.emptyMessage = 'no result';\n          this.values = ['1', '2'];\n          this.id = 'id-MultiSelectTest';\n          this.onChange = _sinon.default.spy();\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @emptyMessage={{this.emptyMessage}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"S/aUmGcA\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await (0, _emberTestingLibrary.clickByName)('multiSelectLabel');\n          await screen.findByRole('menu');\n          await (0, _emberTestingLibrary.clickByName)('Salade');\n\n          // then\n          _sinon.default.assert.calledWithMatch(this.onChange, ['1']);\n          assert.ok(true);\n        });\n      });\n      (0, _qunit.module)('a11y', function () {\n        (0, _qunit.test)('it should display list, focus first element on arrow down press', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = DEFAULT_OPTIONS;\n          this.placeholder = 'MultiSelectTest';\n          this.emptyMessage = 'no result';\n          this.id = 'id-MultiSelectTest';\n          this.onChange = _sinon.default.spy();\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @emptyMessage={{this.emptyMessage}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"S/aUmGcA\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('multiSelectLabel').focus();\n          await _userEvent.default.keyboard('[ArrowDown]');\n          await screen.findByRole('menu');\n          (0, _dom.fireEvent)(screen.getByRole('menu'), new Event('transitionend'));\n          const checkboxes = screen.queryAllByRole('checkbox');\n          assert.strictEqual(checkboxes.length, 3);\n          assert.strictEqual(document.activeElement, checkboxes[0]);\n        });\n        (0, _qunit.test)('it should display list, focus last element on arrow up press', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = DEFAULT_OPTIONS;\n          this.placeholder = 'MultiSelectTest';\n          this.emptyMessage = 'no result';\n          this.id = 'id-MultiSelectTest';\n          this.onChange = _sinon.default.spy();\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @emptyMessage={{this.emptyMessage}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"S/aUmGcA\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('multiSelectLabel').focus();\n          await _userEvent.default.keyboard('[ArrowUp]');\n          await screen.findByRole('menu');\n          (0, _dom.fireEvent)(screen.getByRole('menu'), new Event('transitionend'));\n          const checkboxes = screen.queryAllByRole('checkbox');\n          assert.strictEqual(checkboxes.length, 3);\n          assert.strictEqual(document.activeElement, checkboxes[2]);\n        });\n        (0, _qunit.test)('it should focus first element on arrow down press', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = DEFAULT_OPTIONS;\n          this.placeholder = 'MultiSelectTest';\n          this.emptyMessage = 'no result';\n          this.id = 'id-MultiSelectTest';\n          this.onChange = _sinon.default.spy();\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @emptyMessage={{this.emptyMessage}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"S/aUmGcA\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('multiSelectLabel').focus();\n          await _userEvent.default.keyboard('[Enter]');\n          await screen.findByRole('menu');\n          await _userEvent.default.keyboard('[ArrowDown]');\n          const checkboxes = screen.queryAllByRole('checkbox');\n          assert.strictEqual(document.activeElement, checkboxes[0]);\n        });\n        (0, _qunit.test)('it should focus last element on arrow up press', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = DEFAULT_OPTIONS;\n          this.placeholder = 'MultiSelectTest';\n          this.emptyMessage = 'no result';\n          this.id = 'id-MultiSelectTest';\n          this.onChange = _sinon.default.spy();\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @emptyMessage={{this.emptyMessage}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"S/aUmGcA\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('multiSelectLabel').focus();\n          await _userEvent.default.keyboard('[Enter]');\n          await screen.findByRole('menu');\n          await _userEvent.default.keyboard('[ArrowUp]');\n          const checkboxes = screen.queryAllByRole('checkbox');\n          // then\n          assert.strictEqual(document.activeElement, checkboxes[2]);\n        });\n        _qunit.test.skip('it should call on select on enter press', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = DEFAULT_OPTIONS;\n          this.placeholder = 'MultiSelectTest';\n          this.emptyMessage = 'no result';\n          this.id = 'id-MultiSelectTest';\n          this.onChange = _sinon.default.spy();\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @emptyMessage={{this.emptyMessage}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"S/aUmGcA\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('multiSelectLabel').focus();\n          await _userEvent.default.keyboard('[ArrowDown]');\n          await screen.findByRole('menu');\n          (0, _dom.fireEvent)(screen.getByRole('menu'), new Event('transitionend'));\n          await _userEvent.default.keyboard('[Enter]');\n\n          // then\n          await (0, _emberTestingLibrary.waitForElementToBeRemoved)(() => screen.queryByRole('menu'));\n          assert.strictEqual(screen.queryByRole('menu'), null);\n          assert.ok(this.onChange.calledOnce, 'the callback should be called once');\n          assert.strictEqual(document.activeElement, screen.getByLabelText('multiSelectLabel'));\n        });\n        (0, _qunit.test)('it should close menu on escape press, focus multiselect element', async function (assert) {\n          // given\n          this.label = 'multiSelectLabel';\n          this.options = DEFAULT_OPTIONS;\n          this.placeholder = 'MultiSelectTest';\n          this.emptyMessage = 'no result';\n          this.id = 'id-MultiSelectTest';\n          this.onChange = _sinon.default.spy();\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixMultiSelect\n            @onChange={{this.onChange}}\n            @placeholder={{this.placeholder}}\n            @id={{this.id}}\n            @emptyMessage={{this.emptyMessage}}\n            @options={{this.options}}\n          >\n            <:label>{{this.label}}</:label>\n            <:default as |option|>{{option.label}}</:default>\n          </PixMultiSelect>\n          */\n          {\n            \"id\": \"S/aUmGcA\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          screen.getByLabelText('multiSelectLabel').focus();\n          await _userEvent.default.keyboard('[ArrowDown]');\n          await screen.findByRole('menu');\n          await _userEvent.default.keyboard('[Escape]');\n\n          // then\n          assert.strictEqual(document.activeElement, screen.getByLabelText('multiSelectLabel'));\n          await (0, _emberTestingLibrary.waitForElementToBeRemoved)(() => screen.queryByRole('menu'));\n          assert.strictEqual(screen.queryByRole('menu'), null);\n        });\n      });\n    });\n    (0, _qunit.module)('When it is a searchable multiselect', function () {\n      (0, _qunit.test)('it should renders searchable PixMultiSelect multi select list', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.values = [];\n        this.onChange = () => {};\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n        this.isSearchable = true;\n\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @isSearchable={{this.isSearchable}}\n          @values={{this.values}}\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @emptyMessage={{this.emptyMessage}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"2uEaRJa2\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isSearchable\\\",\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"isSearchable\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n        await (0, _emberTestingLibrary.fillByLabel)('multiSelectLabel', '');\n        await screen.findByRole('menu');\n\n        // then\n\n        assert.strictEqual(screen.getByLabelText('multiSelectLabel').placeholder, this.placeholder);\n        assert.strictEqual(screen.getAllByRole('checkbox').length, 3);\n      });\n      (0, _qunit.test)('it should renders filtered given case insensitive', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.values = [];\n        this.onChange = () => {};\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n        this.isSearchable = true;\n        this.placeholder = 'Placeholder test';\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @isSearchable={{this.isSearchable}}\n          @values={{this.values}}\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @emptyMessage={{this.emptyMessage}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"2uEaRJa2\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isSearchable\\\",\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"isSearchable\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.fillByLabel)('multiSelectLabel', 'tomate');\n        await screen.findByRole('menu');\n\n        // then\n        assert.strictEqual(screen.getAllByRole('checkbox').length, 1);\n        assert.contains('Tomate');\n      });\n      (0, _qunit.test)('it should renders no result given case sensitive', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.values = [];\n        this.onChange = () => {};\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n        this.isSearchable = true;\n        this.strictSearch = true;\n        this.placeholder = 'Placeholder test';\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @isSearchable={{this.isSearchable}}\n          @strictSearch={{this.strictSearch}}\n          @values={{this.values}}\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @emptyMessage={{this.emptyMessage}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"LjB15QZc\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isSearchable\\\",\\\"@strictSearch\\\",\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"isSearchable\\\"]],[30,0,[\\\"strictSearch\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.fillByLabel)('multiSelectLabel', 'tomate');\n        await screen.findByRole('menu');\n\n        // then\n        assert.contains('no result');\n      });\n      (0, _qunit.test)('it should display list PixMultiSelect on focus', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.values = [];\n        this.onChange = () => {};\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n        this.isSearchable = true;\n        this.placeholder = 'Placeholder test';\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @isSearchable={{this.isSearchable}}\n          @values={{this.values}}\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @emptyMessage={{this.emptyMessage}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"2uEaRJa2\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isSearchable\\\",\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"isSearchable\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.fillByLabel)('multiSelectLabel', '');\n        await screen.findByRole('menu');\n\n        // then\n        assert.strictEqual(screen.getByRole('menu').className.trim(), 'pix-multi-select-list');\n      });\n      (0, _qunit.test)('it should sort default selected items when focused', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.values = ['3'];\n        this.onChange = () => {};\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n        this.isSearchable = true;\n        this.placeholder = 'Placeholder test';\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @isSearchable={{this.isSearchable}}\n          @values={{this.values}}\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @emptyMessage={{this.emptyMessage}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"2uEaRJa2\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isSearchable\\\",\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"isSearchable\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.fillByLabel)('multiSelectLabel', '');\n        await screen.findByRole('menu');\n\n        // then\n        const listElement = screen.getAllByRole('checkbox');\n        assert.strictEqual(listElement.length, 3);\n        assert.strictEqual(listElement[0].labels[0].innerText.trim(), 'Oignon');\n        assert.strictEqual(listElement[1].labels[0].innerText.trim(), 'Salade');\n        assert.strictEqual(listElement[2].labels[0].innerText.trim(), 'Tomate');\n      });\n      (0, _qunit.test)('it should not sort when user select item', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.values = [];\n        this.onChange = () => {};\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n        this.isSearchable = true;\n        this.placeholder = 'Placeholder test';\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @isSearchable={{this.isSearchable}}\n          @values={{this.values}}\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @emptyMessage={{this.emptyMessage}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"2uEaRJa2\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isSearchable\\\",\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"isSearchable\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.fillByLabel)('multiSelectLabel', '');\n        await screen.findByRole('menu');\n        await (0, _emberTestingLibrary.clickByName)(DEFAULT_OPTIONS[1].label);\n\n        // then\n        const listElement = screen.getAllByRole('checkbox');\n        assert.strictEqual(listElement.length, 3);\n        assert.strictEqual(listElement[0].labels[0].innerText.trim(), 'Salade');\n        assert.strictEqual(listElement[1].labels[0].innerText.trim(), 'Tomate');\n        assert.strictEqual(listElement[2].labels[0].innerText.trim(), 'Oignon');\n      });\n      (0, _qunit.test)('it should not sort when user search and select item', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.values = [];\n        this.onChange = () => {};\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n        this.isSearchable = true;\n        this.placeholder = 'Placeholder test';\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @isSearchable={{this.isSearchable}}\n          @values={{this.values}}\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @emptyMessage={{this.emptyMessage}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"2uEaRJa2\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isSearchable\\\",\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"isSearchable\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.fillByLabel)('multiSelectLabel', 'Oi');\n        await screen.findByRole('menu');\n        await (0, _emberTestingLibrary.clickByName)('Oignon');\n        await (0, _emberTestingLibrary.fillByLabel)('multiSelectLabel', 'o');\n        // then\n        const listElement = screen.getAllByRole('checkbox');\n        assert.strictEqual(listElement.length, 2);\n        assert.strictEqual(listElement[0].labels[0].innerText.trim(), 'Tomate');\n        assert.strictEqual(listElement[1].labels[0].innerText.trim(), 'Oignon');\n      });\n      (0, _qunit.test)('it should sort items when search is cleaned', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.values = [];\n        this.onChange = values => this.set('values', values);\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n        this.isSearchable = true;\n        this.placeholder = 'Placeholder test';\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @isSearchable={{this.isSearchable}}\n          @values={{this.values}}\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @emptyMessage={{this.emptyMessage}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"2uEaRJa2\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isSearchable\\\",\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@options\\\"],[[30,0,[\\\"isSearchable\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.fillByLabel)('multiSelectLabel', 'Oi');\n        await screen.findByRole('menu');\n        await (0, _emberTestingLibrary.clickByName)('Oignon');\n        await (0, _emberTestingLibrary.fillByLabel)('multiSelectLabel', '');\n\n        // then\n        const listElement = screen.getAllByRole('checkbox');\n        assert.strictEqual(listElement.length, 3);\n        assert.strictEqual(listElement[0].labels[0].innerText.trim(), 'Oignon');\n        assert.strictEqual(listElement[1].labels[0].innerText.trim(), 'Salade');\n        assert.strictEqual(listElement[2].labels[0].innerText.trim(), 'Tomate');\n      });\n      (0, _qunit.test)('should not sort when there are default items selected and a new selected item', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.values = ['2'];\n        this.onChange = () => {};\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n        this.isSearchable = true;\n        this.placeholder = 'Placeholder test';\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @isSearchable={{this.isSearchable}}\n          @values={{this.values}}\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @emptyMessage={{this.emptyMessage}}\n          @showOptionsOnInput={{true}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"75V4Aq5l\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isSearchable\\\",\\\"@values\\\",\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@emptyMessage\\\",\\\"@showOptionsOnInput\\\",\\\"@options\\\"],[[30,0,[\\\"isSearchable\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"emptyMessage\\\"]],true,[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.fillByLabel)('multiSelectLabel', '');\n        await screen.findByRole('menu');\n        const listElement = screen.getAllByRole('checkbox');\n        assert.strictEqual(listElement[0].labels[0].innerText.trim(), 'Tomate');\n        await (0, _emberTestingLibrary.clickByName)('Oignon');\n\n        // then\n        const listElement2 = screen.getAllByRole('checkbox');\n        assert.strictEqual(listElement2[0].labels[0].innerText.trim(), 'Tomate');\n        assert.strictEqual(listElement2[2].labels[0].innerText.trim(), 'Oignon');\n      });\n    });\n    (0, _qunit.module)('custom class name', function () {\n      (0, _qunit.test)('it should use the added class name', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.onChange = () => {};\n        this.values = ['2', '3'];\n        this.emptyMessage = 'no result';\n        this.placeholder = 'MultiSelectTest';\n        this.id = 'id-MultiSelectTest';\n        this.className = 'custom';\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @values={{this.values}}\n          @emptyMessage={{this.emptyMessage}}\n          @isSearchable={{true}}\n          @className={{this.className}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"9YmcLdO0\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@values\\\",\\\"@emptyMessage\\\",\\\"@isSearchable\\\",\\\"@className\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"values\\\"]],[30,0,[\\\"emptyMessage\\\"]],true,[30,0,[\\\"className\\\"]],[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n        // then\n        assert.dom('.custom').exists();\n      });\n    });\n    (0, _qunit.module)('label', function () {\n      (0, _qunit.test)('it focus the input on click on the label', async function (assert) {\n        // given\n        this.label = 'multiSelectLabel';\n        this.options = DEFAULT_OPTIONS;\n        this.onChange = () => {};\n        this.values = [];\n        this.placeholder = 'MultiSelectTest';\n\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixMultiSelect\n          @onChange={{this.onChange}}\n          @placeholder={{this.placeholder}}\n          @id={{this.id}}\n          @values={{this.values}}\n          @isSearchable={{false}}\n          @options={{this.options}}\n        >\n          <:label>{{this.label}}</:label>\n          <:default as |option|>{{option.label}}</:default>\n        </PixMultiSelect>\n        */\n        {\n          \"id\": \"Rx1bbCOF\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\",\\\"@placeholder\\\",\\\"@id\\\",\\\"@values\\\",\\\"@isSearchable\\\",\\\"@options\\\"],[[30,0,[\\\"onChange\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"id\\\"]],[30,0,[\\\"values\\\"]],false,[30,0,[\\\"options\\\"]]]],[[\\\"label\\\",\\\"default\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,1,[\\\"label\\\"]]]],[1]]]]]],[\\\"option\\\"],false,[\\\"pix-multi-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-multi-select-test.js\",\n          \"isStrictMode\": false\n        }));\n        await (0, _emberTestingLibrary.clickByName)('multiSelectLabel');\n\n        // then\n        assert.dom(screen.getByLabelText('multiSelectLabel')).isFocused();\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-pagination-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | pagination', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('Use PixPagination without locale params', async function (assert) {\n      // given\n      const paginationData = {\n        page: 1,\n        pageSize: 10,\n        rowCount: 2,\n        pageCount: 1\n      };\n      this.set('pagination', paginationData);\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixPagination @pagination={{this.pagination}} />\n      */\n      {\n        \"id\": \"RNoMB9fJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@pagination\\\"],[[30,0,[\\\"pagination\\\"]]]],null]],[],false,[\\\"pix-pagination\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-pagination-test.js\",\n        \"isStrictMode\": false\n      }));\n      const PixPaginationElement = this.element.querySelector('.pix-pagination');\n      //then\n      assert.ok(PixPaginationElement);\n      assert.contains('Voir');\n      assert.contains('2 éléments');\n      assert.contains('Page 1 / 1');\n    });\n    (0, _qunit.test)('Use locale params to translate component', async function (assert) {\n      // given\n      const paginationData = {\n        page: 1,\n        pageSize: 10,\n        rowCount: 2,\n        pageCount: 1\n      };\n      this.set('locale', 'en');\n      this.set('pagination', paginationData);\n\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixPagination @pagination={{this.pagination}} @locale={{this.locale}} />\n      */\n      {\n        \"id\": \"jUwi3zKn\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@pagination\\\",\\\"@locale\\\"],[[30,0,[\\\"pagination\\\"]],[30,0,[\\\"locale\\\"]]]],null]],[],false,[\\\"pix-pagination\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-pagination-test.js\",\n        \"isStrictMode\": false\n      }));\n      const PixPaginationElement = this.element.querySelector('.pix-pagination');\n      //then\n      assert.ok(PixPaginationElement);\n      assert.contains('See');\n      assert.contains('2 items');\n      assert.contains('Page 1 / 1');\n    });\n    (0, _qunit.test)('When pagination params have options to display several pages', async function (assert) {\n      // given\n      const paginationData = {\n        page: 2,\n        pageSize: 10,\n        rowCount: 12,\n        pageCount: 2\n      };\n      this.set('pagination', paginationData);\n\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixPagination @pagination={{this.pagination}} />\n      */\n      {\n        \"id\": \"RNoMB9fJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@pagination\\\"],[[30,0,[\\\"pagination\\\"]]]],null]],[],false,[\\\"pix-pagination\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-pagination-test.js\",\n        \"isStrictMode\": false\n      }));\n      const PixPaginationElement = this.element.querySelector('.pix-pagination');\n      //then\n      assert.ok(PixPaginationElement);\n      assert.contains('Voir');\n      assert.contains('11-12 sur 12 éléments');\n      assert.contains('Page 2 / 2');\n    });\n    (0, _qunit.test)('When params isCondensed is true', async function (assert) {\n      // given\n      const paginationData = {\n        page: 2,\n        pageSize: 10,\n        rowCount: 12,\n        pageCount: 2\n      };\n      this.set('pagination', paginationData);\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixPagination @pagination={{this.pagination}} @isCondensed='true' />\n      */\n      {\n        \"id\": \"cLR0E3tz\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@pagination\\\",\\\"@isCondensed\\\"],[[30,0,[\\\"pagination\\\"]],\\\"true\\\"]],null]],[],false,[\\\"pix-pagination\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-pagination-test.js\",\n        \"isStrictMode\": false\n      }));\n      const PixPaginationCondensedElement = this.element.querySelector('.pix-pagination-condensed');\n      //then\n      assert.ok(PixPaginationCondensedElement);\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-progress-gauge-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"dummy/tests/helpers/create-glimmer-component\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _createGlimmerComponent, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"dummy/tests/helpers/create-glimmer-component\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | progress-gauge', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const PROGRESS_GAUGE_SELECTOR = '.progress-gauge';\n    (0, _qunit.module)('Attributes @value', function () {\n      (0, _qunit.test)('it should throw an error if there is no value', async function (assert) {\n        // given & when\n        const componentParams = {\n          value: undefined\n        };\n        const component = (0, _createGlimmerComponent.default)('pix-progress-gauge', componentParams);\n\n        // then\n        const expectedError = new Error('ERROR in PixProgressGauge component, @value param is not provided.');\n        assert.throws(function () {\n          component.value;\n        }, expectedError);\n      });\n      (0, _qunit.test)('it renders the value with percentage', async function (assert) {\n        // given & when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' />\n        */\n        {\n          \"id\": \"6wjY2dty\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"50\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const frenchLocale = String(navigator.language).toLowerCase() === 'fr-fr';\n        assert.strictEqual(screen.getByRole('presentation').innerText, frenchLocale ? '50\\xA0%' : '50%');\n      });\n      (0, _qunit.test)('it renders the progress gauge with correct width never exceed 100%', async function (assert) {\n        // given & when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='110' />\n        */\n        {\n          \"id\": \"MBYuQHTA\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"110\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const progressbar = screen.getByRole('progressbar');\n        assert.strictEqual(progressbar.value, 100);\n      });\n      (0, _qunit.test)('it renders the progress gauge with correct width never under 0%', async function (assert) {\n        // given & when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='-20' />\n        */\n        {\n          \"id\": \"fvvMRvVT\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"-20\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const progressbar = screen.getByRole('progressbar');\n        assert.strictEqual(progressbar.value, 0);\n      });\n    });\n    (0, _qunit.module)('Attributes @label', function () {\n      (0, _qunit.test)('it should throw an error if there is no label', async function (assert) {\n        // given & when\n        const componentParams = {\n          label: null\n        };\n        const component = (0, _createGlimmerComponent.default)('pix-progress-gauge', componentParams);\n\n        // then\n        const expectedError = new Error('ERROR in PixProgressGauge component, @label param is not provided.');\n        assert.throws(function () {\n          component.label;\n        }, expectedError);\n      });\n    });\n    (0, _qunit.module)('Attributes @color', function () {\n      (0, _qunit.test)('it renders the progress gauge by default with primary class', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' />\n        */\n        {\n          \"id\": \"6wjY2dty\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"50\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const componentElement = this.element.querySelector(PROGRESS_GAUGE_SELECTOR);\n        assert.true(componentElement.classList.contains('progress-gauge--content-primary'));\n      });\n      (0, _qunit.test)('it renders the progress gauge with primary class when color not exists', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' @color='vert-lychen' />\n        */\n        {\n          \"id\": \"lvUc/k/h\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@color\\\"],[\\\"50\\\",\\\"vert-lychen\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const componentElement = this.element.querySelector(PROGRESS_GAUGE_SELECTOR);\n        assert.true(componentElement.classList.contains('progress-gauge--content-primary'));\n      });\n      (0, _qunit.test)('it renders the progress gauge with tertiary class', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' @color='tertiary' />\n        */\n        {\n          \"id\": \"t5zswOt5\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@color\\\"],[\\\"50\\\",\\\"tertiary\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const componentElement = this.element.querySelector(PROGRESS_GAUGE_SELECTOR);\n        assert.true(componentElement.classList.contains('progress-gauge--content-tertiary'));\n      });\n      (0, _qunit.test)('it renders the progress gauge with success class', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' @color='success' />\n        */\n        {\n          \"id\": \"bMH8FI8d\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@color\\\"],[\\\"50\\\",\\\"success\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const componentElement = this.element.querySelector(PROGRESS_GAUGE_SELECTOR);\n        assert.true(componentElement.classList.contains('progress-gauge--content-success'));\n      });\n      (0, _qunit.test)('it renders the progress gauge with primary class', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' @color='primary' />\n        */\n        {\n          \"id\": \"ouQPsdYf\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@color\\\"],[\\\"50\\\",\\\"primary\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const componentElement = this.element.querySelector(PROGRESS_GAUGE_SELECTOR);\n        assert.true(componentElement.classList.contains('progress-gauge--content-primary'));\n      });\n    });\n    (0, _qunit.module)('Attributes @themeMode', function () {\n      (0, _qunit.test)('it renders the progress gauge by default with light mode', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' />\n        */\n        {\n          \"id\": \"6wjY2dty\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"50\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const componentElement = this.element.querySelector(PROGRESS_GAUGE_SELECTOR);\n        assert.true(componentElement.classList.contains('progress-gauge--theme-light'));\n      });\n      (0, _qunit.test)('it renders the progress gauge with light mode when value not exists', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' @themeMode='darken-light' />\n        */\n        {\n          \"id\": \"3vbPvKry\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@themeMode\\\"],[\\\"50\\\",\\\"darken-light\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const componentElement = this.element.querySelector(PROGRESS_GAUGE_SELECTOR);\n        assert.true(componentElement.classList.contains('progress-gauge--theme-light'));\n      });\n      (0, _qunit.test)('it renders the progress gauge with light mode', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' @themeMode='light' />\n        */\n        {\n          \"id\": \"4RVUVqLj\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@themeMode\\\"],[\\\"50\\\",\\\"light\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const componentElement = this.element.querySelector(PROGRESS_GAUGE_SELECTOR);\n        assert.true(componentElement.classList.contains('progress-gauge--theme-light'));\n      });\n      (0, _qunit.test)('it renders the progress gauge with dark mode', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' @themeMode='dark' />\n        */\n        {\n          \"id\": \"NxDVX4ZJ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@themeMode\\\"],[\\\"50\\\",\\\"dark\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const componentElement = this.element.querySelector(PROGRESS_GAUGE_SELECTOR);\n        assert.true(componentElement.classList.contains('progress-gauge--theme-dark'));\n      });\n    });\n    (0, _qunit.module)('Attibutes @subtitle', function () {\n      (0, _qunit.test)('it does not render the progress gauge sub-title', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' />\n        */\n        {\n          \"id\": \"6wjY2dty\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\"],[\\\"50\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const componentElement = this.element.querySelector('.progress-gauge__sub-title');\n        assert.false(!!componentElement);\n      });\n      (0, _qunit.test)('it renders the progress gauge sub-title', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixProgressGauge @value='50' @subtitle='toto' />\n        */\n        {\n          \"id\": \"Wi25cS49\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@subtitle\\\"],[\\\"50\\\",\\\"toto\\\"]],null]],[],false,[\\\"pix-progress-gauge\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-progress-gauge-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const componentElement = this.element.querySelector('.progress-gauge__sub-title');\n        assert.strictEqual(componentElement.textContent.trim(), 'toto');\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-radio-button-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/debug\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _debug, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/debug\",0,\"sinon\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | pix-radio-button', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.module)('it should be possible to check the radiobutton', function () {\n      (0, _qunit.test)('when label is displayed', async function (assert) {\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixRadioButton><:label>Abricot</:label></PixRadioButton>\n        */\n        {\n          \"id\": \"R+zsCxcS\",\n          \"block\": \"[[[8,[39,0],null,null,[[\\\"label\\\"],[[[[1,\\\"Abricot\\\"]],[]]]]]],[],false,[\\\"pix-radio-button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-radio-button-test.js\",\n          \"isStrictMode\": false\n        }));\n        await (0, _emberTestingLibrary.clickByName)('Abricot');\n\n        // then\n        assert.true(screen.getByLabelText('Abricot').checked);\n      });\n      (0, _qunit.test)('when label is hidden', async function (assert) {\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixRadioButton @screenReaderOnly={{true}}><:label>Abricot</:label></PixRadioButton>\n        */\n        {\n          \"id\": \"+lJUyqRg\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@screenReaderOnly\\\"],[true]],[[\\\"label\\\"],[[[[1,\\\"Abricot\\\"]],[]]]]]],[],false,[\\\"pix-radio-button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-radio-button-test.js\",\n          \"isStrictMode\": false\n        }));\n        await (0, _emberTestingLibrary.clickByName)('Abricot');\n\n        // then\n        assert.true(screen.getByLabelText('Abricot').checked);\n      });\n    });\n    (0, _qunit.test)('it should be possible to add more params to PixRadioButton', async function (assert) {\n      // given\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixRadioButton disabled checked><:label>Abricot</:label></PixRadioButton>\n      */\n      {\n        \"id\": \"SeME9CYn\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"disabled\\\",\\\"\\\"],[24,\\\"checked\\\",\\\"\\\"]],null,[[\\\"label\\\"],[[[[1,\\\"Abricot\\\"]],[]]]]]],[],false,[\\\"pix-radio-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-radio-button-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // when & then\n      assert.true(screen.getByLabelText('Abricot').checked);\n    });\n    (0, _qunit.module)('@isDisabled', function (hooks) {\n      let sandbox;\n      hooks.beforeEach(function () {\n        sandbox = _sinon.default.createSandbox();\n        sandbox.stub(_debug.default, 'warn');\n      });\n      hooks.afterEach(function () {\n        sandbox.restore();\n      });\n      (0, _qunit.test)(`it should not be possible to interact when @isDisabled={{true}}`, async function (assert) {\n        // given\n        this.set('isDisabled', true);\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixRadioButton @isDisabled={{this.isDisabled}}><:label>Abricot</:label></PixRadioButton>\n        */\n        {\n          \"id\": \"GxJdIDRh\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isDisabled\\\"],[[30,0,[\\\"isDisabled\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"Abricot\\\"]],[]]]]]],[],false,[\\\"pix-radio-button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-radio-button-test.js\",\n          \"isStrictMode\": false\n        }));\n        sandbox.assert.calledWith(_debug.default.warn, 'PixRadioButton: @isDisabled attribute should be a boolean.', true, {\n          id: 'pix-ui.radio-button.is-disabled.not-boolean'\n        });\n        const radiobutton = screen.getByRole('radio', {\n          name: 'Abricot',\n          disabled: true\n        });\n        assert.false(radiobutton.checked, 'Radiobutton is not checked by default');\n        assert.strictEqual(radiobutton.getAttribute('aria-disabled'), 'true', '`aria-disabled` should be forced to \"true\" else VoiceOver don\\'t consider the input as \"dimmed\"');\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Abricot'); // should not throw!\n\n        // then\n        assert.false(radiobutton.checked, \"Radiobutton has changed state, but shouldn't have\");\n      });\n      (0, _qunit.test)(`it should read success state info if given`, async function (assert) {\n        // given\n        this.set('isDisabled', true);\n\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixRadioButton checked @isDisabled={{this.isDisabled}} @state='success'><:label>Recevoir la\n            newsletter</:label></PixRadioButton>\n        */\n        {\n          \"id\": \"W5+REImH\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"checked\\\",\\\"\\\"]],[[\\\"@isDisabled\\\",\\\"@state\\\"],[[30,0,[\\\"isDisabled\\\"]],\\\"success\\\"]],[[\\\"label\\\"],[[[[1,\\\"Recevoir la\\\\n    newsletter\\\"]],[]]]]]],[],false,[\\\"pix-radio-button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-radio-button-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.dom(screen.getByRole('radio', {\n          description: 'Sélection correcte',\n          hidden: true\n        })).exists();\n      });\n      (0, _qunit.test)(`it should read error state info if given`, async function (assert) {\n        // given\n        this.set('isDisabled', true);\n\n        // when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixRadioButton checked @isDisabled={{this.isDisabled}} @state='error'><:label>Recevoir la\n            newsletter</:label></PixRadioButton>\n        */\n        {\n          \"id\": \"5yUoteZs\",\n          \"block\": \"[[[8,[39,0],[[24,\\\"checked\\\",\\\"\\\"]],[[\\\"@isDisabled\\\",\\\"@state\\\"],[[30,0,[\\\"isDisabled\\\"]],\\\"error\\\"]],[[\\\"label\\\"],[[[[1,\\\"Recevoir la\\\\n    newsletter\\\"]],[]]]]]],[],false,[\\\"pix-radio-button\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-radio-button-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.dom(screen.getByRole('radio', {\n          description: 'Sélection incorrecte',\n          hidden: true\n        })).exists();\n      });\n      ['true', 'false', 'null', 'undefined'].forEach(function (testCase) {\n        (0, _qunit.test)(`it should not be possible to interact when @isDisabled=\"${testCase}\"`, async function (assert) {\n          // given\n          this.set('isDisabled', testCase);\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixRadioButton @isDisabled={{this.isDisabled}}><:label>Abricot</:label></PixRadioButton>\n          */\n          {\n            \"id\": \"GxJdIDRh\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@isDisabled\\\"],[[30,0,[\\\"isDisabled\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"Abricot\\\"]],[]]]]]],[],false,[\\\"pix-radio-button\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-radio-button-test.js\",\n            \"isStrictMode\": false\n          }));\n          sandbox.assert.calledWith(_debug.default.warn, 'PixRadioButton: @isDisabled attribute should be a boolean.', false, {\n            id: 'pix-ui.radio-button.is-disabled.not-boolean'\n          });\n          const radiobutton = screen.getByRole('radio', {\n            name: 'Abricot',\n            disabled: true\n          });\n          assert.false(radiobutton.checked, 'Radiobutton is not checked by default');\n          assert.strictEqual(radiobutton.getAttribute('aria-disabled'), 'true', '`aria-disabled` should be forced to \"true\" else VoiceOver don\\'t consider the input as \"dimmed\"');\n\n          // when\n          await (0, _emberTestingLibrary.clickByName)('Abricot'); // should not throw!\n\n          // then\n          assert.false(radiobutton.checked, \"Radiobutton has changed state, but shouldn't have\");\n        });\n      });\n      [false, null, undefined].forEach(function (testCase) {\n        (0, _qunit.test)(`it should be possible to interact when @isDisabled={{${testCase}}}`, async function (assert) {\n          // given\n          this.set('isDisabled', testCase);\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixRadioButton @isDisabled={{this.isDisabled}}><:label>Abricot</:label></PixRadioButton>\n          */\n          {\n            \"id\": \"GxJdIDRh\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@isDisabled\\\"],[[30,0,[\\\"isDisabled\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"Abricot\\\"]],[]]]]]],[],false,[\\\"pix-radio-button\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-radio-button-test.js\",\n            \"isStrictMode\": false\n          }));\n          sandbox.assert.calledWith(_debug.default.warn, 'PixRadioButton: @isDisabled attribute should be a boolean.', true, {\n            id: 'pix-ui.radio-button.is-disabled.not-boolean'\n          });\n          const radiobutton = screen.getByRole('radio', {\n            name: 'Abricot',\n            disabled: true\n          });\n          assert.false(radiobutton.checked, 'Radiobutton is not checked by default');\n          assert.strictEqual(radiobutton.getAttribute('aria-disabled'), null, '`aria-disabled` should not be set');\n\n          // when\n          await (0, _emberTestingLibrary.clickByName)('Abricot');\n\n          // then\n          assert.true(radiobutton.checked, 'Radiobutton should have changed state');\n        });\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-return-to-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | pix-return-to', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const RETURN_TO_SELECTOR = '.pix-return-to';\n    (0, _qunit.test)('it renders the default PixReturnTo', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixReturnTo @route='home'>Home</PixReturnTo>\n      */\n      {\n        \"id\": \"vuziH6oh\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@route\\\"],[\\\"home\\\"]],[[\\\"default\\\"],[[[[1,\\\"Home\\\"]],[]]]]]],[],false,[\\\"pix-return-to\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-return-to-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const pixReturnToElement = this.element.querySelector(RETURN_TO_SELECTOR);\n      assert.contains('Home');\n      assert.ok(pixReturnToElement.classList.toString().includes('pix-return-to pix-return-to--black'));\n    });\n    (0, _qunit.test)('it renders with the given shade', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixReturnTo @route='home' @shade='white' />\n      */\n      {\n        \"id\": \"N7SVuVuS\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@route\\\",\\\"@shade\\\"],[\\\"home\\\",\\\"white\\\"]],null]],[],false,[\\\"pix-return-to\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-return-to-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const pixReturnToElement = this.element.querySelector(RETURN_TO_SELECTOR);\n      assert.ok(pixReturnToElement.classList.toString().includes('pix-return-to pix-return-to--white'));\n    });\n    (0, _qunit.test)('it renders without text', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixReturnTo @route='home' />\n      */\n      {\n        \"id\": \"lAky+Zxq\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@route\\\"],[\\\"home\\\"]],null]],[],false,[\\\"pix-return-to\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-return-to-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const pixReturnToElement = this.element.querySelector(RETURN_TO_SELECTOR);\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(pixReturnToElement.textContent.trim(), '');\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-search-input-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"sinon\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | PixSearchInput', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the default PixSearchInput with given id and label', async function (assert) {\n      // given\n      this.set('triggerFiltering', _sinon.default.stub());\n\n      // when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixSearchInput\n        @id='pix-123'\n        @debounceTimeInMs='1000'\n        @triggerFiltering={{this.triggerFiltering}}\n      ><:label>Mon super input qui filtre</:label></PixSearchInput>\n      */\n      {\n        \"id\": \"9Y2xk23j\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@debounceTimeInMs\\\",\\\"@triggerFiltering\\\"],[\\\"pix-123\\\",\\\"1000\\\",[30,0,[\\\"triggerFiltering\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"Mon super input qui filtre\\\"]],[]]]]]],[],false,[\\\"pix-search-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-search-input-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const inputFound = screen.getByLabelText('Mon super input qui filtre');\n      assert.dom(inputFound).exists();\n      assert.strictEqual(inputFound.id, 'pix-123');\n    });\n    (0, _qunit.test)('it triggers the filter when a text is searched', async function (assert) {\n      // given\n      const triggerFiltering = _sinon.default.stub().resolves();\n      this.set('triggerFiltering', triggerFiltering);\n\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixSearchInput\n        @id='pix-123'\n        @debounceTimeInMs='0'\n        @triggerFiltering={{this.triggerFiltering}}\n      ><:label>Champ de recherche de fruits</:label></PixSearchInput>\n      */\n      {\n        \"id\": \"I8lmut8T\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@debounceTimeInMs\\\",\\\"@triggerFiltering\\\"],[\\\"pix-123\\\",\\\"0\\\",[30,0,[\\\"triggerFiltering\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"Champ de recherche de fruits\\\"]],[]]]]]],[],false,[\\\"pix-search-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-search-input-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _emberTestingLibrary.fillByLabel)('Champ de recherche de fruits', 'Mangue');\n\n      // then\n      assert.ok(triggerFiltering.calledWith('pix-123', 'Mangue'));\n    });\n    (0, _qunit.test)(\"doesn't update value when input value is udpated\", async function (assert) {\n      // given\n      this.set('triggerFiltering', _sinon.default.stub());\n      this.set('dynamicValue', 'init');\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixSearchInput\n        @id='pix-123'\n        @debounceTimeInMs='0'\n        @triggerFiltering={{this.triggerFiltering}}\n        @value={{this.dynamicValue}}\n      ><:label>Champ de recherche de fruits</:label></PixSearchInput>\n      */\n      {\n        \"id\": \"5uyJcj4x\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@debounceTimeInMs\\\",\\\"@triggerFiltering\\\",\\\"@value\\\"],[\\\"pix-123\\\",\\\"0\\\",[30,0,[\\\"triggerFiltering\\\"]],[30,0,[\\\"dynamicValue\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"Champ de recherche de fruits\\\"]],[]]]]]],[],false,[\\\"pix-search-input\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-search-input-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // when\n      await (0, _emberTestingLibrary.fillByLabel)('Champ de recherche de fruits', 'Mangue');\n      this.set('dynamicValue', 'dynamicValue');\n\n      // then\n      const inputFound = screen.getByLabelText('Champ de recherche de fruits');\n      assert.dom(inputFound).exists();\n      assert.strictEqual(inputFound.value, 'Mangue');\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-select-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"sinon\", \"@testing-library/user-event\", \"@testing-library/dom\", \"@ember/template-factory\"], function (_qunit, _testHelpers, _emberQunit, _emberTestingLibrary, _sinon, _userEvent, _dom, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"sinon\",0,\"@testing-library/user-event\",0,\"@testing-library/dom\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | PixSelect', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    this.options = [{\n      value: '1',\n      label: 'Salade',\n      category: 'Kebab'\n    }, {\n      value: '2',\n      label: 'Tomate',\n      category: 'Kebab'\n    }, {\n      value: '3',\n      label: 'Oignon',\n      category: 'Kebab'\n    }];\n    this.label = 'Mon menu déroulant';\n    this.subLabel = 'Mon sous label';\n    this.placeholder = 'Choisissez une option';\n    this.searchLabel = 'Rechercher';\n    this.screenReaderOnly = 'Rechercher';\n    this.searchPlaceholder = 'Placeholder de la recherche';\n    (0, _qunit.test)('it renders Select', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixSelect\n        @options={{this.options}}\n        @subLabel={{this.subLabel}}\n        @placeholder={{this.placeholder}}\n      ><:label>{{this.label}}</:label></PixSelect>\n      */\n      {\n        \"id\": \"Ln+oHevI\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@subLabel\\\",\\\"@placeholder\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"subLabel\\\"]],[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.strictEqual(screen.getByLabelText('Mon menu déroulant Mon sous label').innerText, 'Choisissez une option');\n    });\n    (0, _qunit.module)('#id', function () {\n      (0, _qunit.test)('it puts a custom id on pix-select', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect @id='custom' @options={{this.options}} @placeholder={{this.placeholder}}><:label\n          >{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"CLd/DC8w\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@options\\\",\\\"@placeholder\\\"],[\\\"custom\\\",[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.dom('#custom').exists();\n      });\n    });\n    (0, _qunit.module)('listbox', function () {\n      (0, _qunit.test)('it hides the dropdown unless there is a click on the button', async function (assert) {\n        // given & when\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect @options={{this.options}} @placeholder={{this.placeholder}}><:label\n          >{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"dx3FKSEZ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.dom(screen.queryByRole('option', {\n          name: 'Oignon'\n        })).doesNotExist();\n      });\n      (0, _qunit.test)('it opens the dropdown', async function (assert) {\n        // given\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect @options={{this.options}} @placeholder={{this.placeholder}}><:label\n          >{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"dx3FKSEZ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await screen.findByRole('listbox');\n        // then\n        assert.dom(screen.getByRole('option', {\n          name: 'Oignon'\n        })).exists();\n      });\n      (0, _qunit.test)('it hides default option', async function (assert) {\n        // given\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @hideDefaultOption={{true}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"BqvRsyAK\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@hideDefaultOption\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],true]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await screen.findByRole('listbox');\n\n        // then\n        assert.strictEqual(screen.queryByText(this.placeholder, {\n          selector: 'li'\n        }).tabIndex, -1);\n        assert.strictEqual(screen.queryByRole('option', {\n          name: this.placeholder\n        }), null);\n      });\n    });\n    (0, _qunit.module)('category', function () {\n      (0, _qunit.test)('it render categories when there are categories', async function (assert) {\n        // given\n        this.options = [{\n          value: '2',\n          label: 'Tomate',\n          category: 'Fruit'\n        }, {\n          value: '1',\n          label: 'Salade',\n          category: 'Autre'\n        }, {\n          value: '3',\n          label: 'Oignon',\n          category: 'Autre'\n        }];\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect @options={{this.options}} @placeholder={{this.placeholder}}><:label\n          >{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"dx3FKSEZ\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await screen.findByRole('listbox');\n\n        // then\n        assert.dom(screen.getByRole('group', {\n          name: 'Fruit'\n        })).exists();\n        assert.dom(screen.getByRole('group', {\n          name: 'Autre'\n        })).exists();\n      });\n    });\n    (0, _qunit.module)('a11y', function () {\n      (0, _qunit.module)('disabled dropdown', function () {\n        (0, _qunit.test)('it should not display list on click', async function (assert) {\n          // given\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect @options={{this.options}} @placeholder={{this.placeholder}} @isDisabled={{true}}><:label\n            >{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"xJAlFC4l\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@isDisabled\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],true]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await (0, _testHelpers.click)(await screen.getByLabelText('Mon menu déroulant'));\n\n          // then\n          assert.dom(await screen.findByRole('listbox', {\n            hidden: true\n          })).exists();\n        });\n      });\n      (0, _qunit.module)('closed dropdown', function () {\n        (0, _qunit.test)('it should display list, focus selected element on arrow up press', async function (assert) {\n          // given\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect @options={{this.options}} @value='3' @placeholder={{this.placeholder}}><:label\n            >{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"ebhXn8l2\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@value\\\",\\\"@placeholder\\\"],[[30,0,[\\\"options\\\"]],\\\"3\\\",[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[ArrowUp]');\n          await screen.findByRole('listbox');\n          (0, _dom.fireEvent)(document.querySelector('.pix-select__dropdown'), new Event('transitionend'));\n          const selectedOption = screen.getByRole('option', {\n            name: 'Oignon'\n          });\n\n          // then\n          assert.dom(selectedOption).isFocused();\n        });\n        (0, _qunit.test)('it should display list, focus selected element on arrow down press', async function (assert) {\n          // given\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect @options={{this.options}} @value='2' @placeholder={{this.placeholder}}><:label\n            >{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"iEv0X3fO\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@value\\\",\\\"@placeholder\\\"],[[30,0,[\\\"options\\\"]],\\\"2\\\",[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[ArrowDown]');\n          await screen.findByRole('listbox');\n          (0, _dom.fireEvent)(document.querySelector('.pix-select__dropdown'), new Event('transitionend'));\n          const selectedOption = screen.getByRole('option', {\n            name: 'Tomate'\n          });\n\n          // then\n          assert.dom(selectedOption).isFocused();\n        });\n        (0, _qunit.test)('it should display list, focus selected element on space press', async function (assert) {\n          // given\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect @options={{this.options}} @value='1' @placeholder={{this.placeholder}}><:label\n            >{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"T1he7rZ2\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@value\\\",\\\"@placeholder\\\"],[[30,0,[\\\"options\\\"]],\\\"1\\\",[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[Space]');\n          await screen.findByRole('listbox');\n          (0, _dom.fireEvent)(document.querySelector('.pix-select__dropdown'), new Event('transitionend'));\n          const selectedOption = screen.getByRole('option', {\n            name: 'Salade'\n          });\n\n          // then\n          assert.dom(selectedOption).isFocused();\n        });\n      });\n      (0, _qunit.module)('opened dropdown', function () {\n        (0, _qunit.test)('it should focus first element on arrow down press', async function (assert) {\n          // given\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect @options={{this.options}} @placeholder={{this.placeholder}}><:label\n            >{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"dx3FKSEZ\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[Enter]');\n          await screen.findByRole('listbox');\n          await _userEvent.default.keyboard('[ArrowDown]');\n          const option = screen.getByRole('option', {\n            name: 'Choisissez une option'\n          });\n          // then\n          assert.dom(option).isFocused();\n        });\n        (0, _qunit.test)('it should focus last element on arrow up press', async function (assert) {\n          // given\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect @options={{this.options}} @placeholder={{this.placeholder}}><:label\n            >{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"dx3FKSEZ\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[Enter]');\n          await screen.findByRole('listbox');\n          await _userEvent.default.keyboard('[ArrowUp]');\n          const option = screen.getByRole('option', {\n            name: 'Oignon'\n          });\n          // then\n          assert.dom(option).isFocused();\n        });\n        (0, _qunit.test)('it should close menu on escape press, focus select element', async function (assert) {\n          // given\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect @options={{this.options}} @placeholder={{this.placeholder}}><:label\n            >{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"dx3FKSEZ\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[ArrowDown]');\n          await screen.findByRole('listbox');\n          await _userEvent.default.keyboard('[Escape]');\n\n          // then\n          assert.strictEqual(document.activeElement, screen.getByLabelText('Mon menu déroulant'));\n          await (0, _emberTestingLibrary.waitForElementToBeRemoved)(() => screen.queryByRole('listbox'));\n          assert.strictEqual(screen.queryByRole('listbox'), null);\n        });\n        (0, _qunit.test)('it should call on select on enter press', async function (assert) {\n          // given\n          this.onChange = _sinon.default.spy();\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect\n            @options={{this.options}}\n            @placeholder={{this.placeholder}}\n            @onChange={{this.onChange}}\n          ><:label>{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"wE+nZ332\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@onChange\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"onChange\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[Space]');\n          await screen.findByRole('listbox');\n          await screen.getByText('Tomate').focus();\n          await _userEvent.default.keyboard('[Enter]');\n\n          // then\n          _sinon.default.assert.calledWith(this.onChange, '2');\n          assert.dom(screen.getByLabelText('Mon menu déroulant')).isFocused();\n        });\n        (0, _qunit.test)('it should not focus select on click outside', async function (assert) {\n          // given\n          this.onChange = _sinon.default.spy();\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <button id='focus' type='button'>Focus me</button><PixSelect\n            @options={{this.options}}\n            @placeholder={{this.placeholder}}\n            @onChange={{this.onChange}}\n          ><:label>{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"j7nO8bAt\",\n            \"block\": \"[[[10,\\\"button\\\"],[14,1,\\\"focus\\\"],[14,4,\\\"button\\\"],[12],[1,\\\"Focus me\\\"],[13],[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@onChange\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"onChange\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[Space]');\n          await screen.findByRole('listbox');\n          await screen.getByText('Tomate').focus();\n          await (0, _testHelpers.click)(screen.getByRole('button', {\n            name: 'Focus me'\n          }));\n\n          // then\n          assert.dom(screen.getByRole('button', {\n            name: 'Focus me'\n          })).isFocused();\n        });\n        (0, _qunit.test)('it should call on select on space press', async function (assert) {\n          // given\n          this.onChange = _sinon.default.spy();\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect\n            @options={{this.options}}\n            @placeholder={{this.placeholder}}\n            @onChange={{this.onChange}}\n          ><:label>{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"wE+nZ332\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@onChange\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"onChange\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[Space]');\n          await screen.findByRole('listbox');\n          await screen.getByText('Tomate').focus();\n          await _userEvent.default.keyboard('[Space]');\n\n          // then\n          _sinon.default.assert.calledWith(this.onChange, '2');\n          assert.dom(screen.getByLabelText('Mon menu déroulant')).isFocused();\n        });\n        (0, _qunit.test)('it should focus on the search input when tab is pressed', async function (assert) {\n          // given\n          this.searchLabel = 'Label du search';\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect\n            @options={{this.options}}\n            @isSearchable={{true}}\n            @placeholder={{this.placeholder}}\n            @searchLabel={{this.searchLabel}}\n          ><:label>{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"gPJpOV8a\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@isSearchable\\\",\\\"@placeholder\\\",\\\"@searchLabel\\\"],[[30,0,[\\\"options\\\"]],true,[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"searchLabel\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[ArrowDown]');\n          await screen.findByRole('listbox');\n          await _userEvent.default.keyboard('[Tab]');\n\n          // then\n          assert.dom(screen.getByLabelText(this.searchLabel)).isFocused();\n        });\n        (0, _qunit.test)('it should focus on the input when escape is pressed', async function (assert) {\n          // given\n          this.searchLabel = 'Label du search';\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect\n            @options={{this.options}}\n            @isSearchable={{true}}\n            @placeholder={{this.placeholder}}\n            @searchLabel={{this.searchLabel}}\n          ><:label>{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"gPJpOV8a\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@isSearchable\\\",\\\"@placeholder\\\",\\\"@searchLabel\\\"],[[30,0,[\\\"options\\\"]],true,[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"searchLabel\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[ArrowDown]');\n          await screen.findByRole('listbox');\n          (0, _dom.fireEvent)(document.querySelector('.pix-select__dropdown'), new Event('transitionend'));\n          await _userEvent.default.keyboard('[Escape]');\n          const select = await screen.getByLabelText(this.label);\n          // then\n          assert.dom(select).isFocused();\n        });\n        (0, _qunit.test)(\"it should focus first element of Pix Select even when there's an aria-selected=true somewhere\", async function (assert) {\n          // given\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <div class='tab-interface'>\n            <div role='tablist' aria-label='Sample Tabs'>\n              <span role='tab' aria-selected='true' aria-controls='panel-1' id='tab-1' tabindex='0'>\n                Je ne dois pas être focus !\n              </span>\n            </div>\n          </div>\n          <PixSelect @options={{this.options}} @placeholder={{this.placeholder}}><:label\n            >{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"04fbM3M+\",\n            \"block\": \"[[[10,0],[14,0,\\\"tab-interface\\\"],[12],[1,\\\"\\\\n  \\\"],[10,0],[14,\\\"role\\\",\\\"tablist\\\"],[14,\\\"aria-label\\\",\\\"Sample Tabs\\\"],[12],[1,\\\"\\\\n    \\\"],[10,1],[14,\\\"role\\\",\\\"tab\\\"],[14,\\\"aria-selected\\\",\\\"true\\\"],[14,\\\"aria-controls\\\",\\\"panel-1\\\"],[14,1,\\\"tab-1\\\"],[14,\\\"tabindex\\\",\\\"0\\\"],[12],[1,\\\"\\\\n      Je ne dois pas être focus !\\\\n    \\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[13],[1,\\\"\\\\n\\\"],[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // when\n          await screen.getByLabelText('Mon menu déroulant').focus();\n          await _userEvent.default.keyboard('[ArrowDown]');\n          await screen.findByRole('listbox');\n          (0, _dom.fireEvent)(document.querySelector('.pix-select__dropdown'), new Event('transitionend'));\n          const option = screen.getByRole('option', {\n            name: 'Choisissez une option'\n          });\n\n          // then\n          assert.dom(option).isFocused();\n        });\n      });\n    });\n    (0, _qunit.module)('#onChange', function () {\n      (0, _qunit.test)('it should trigger onChange function when an item is selected', async function (assert) {\n        // given\n        this.onChange = _sinon.default.spy();\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @onChange={{this.onChange}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"wE+nZ332\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@onChange\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"onChange\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await screen.findByRole('listbox');\n        await (0, _testHelpers.click)(screen.getByRole('option', {\n          name: 'Oignon'\n        }));\n\n        // then\n        _sinon.default.assert.calledWithMatch(this.onChange, '3');\n        assert.ok(this.onChange.called);\n      });\n    });\n    (0, _qunit.module)('#value', function () {\n      (0, _qunit.test)('it should mark the item as selected when there is a value', async function (assert) {\n        // given\n        this.onChange = _sinon.default.spy();\n        this.value = '3';\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @onChange={{this.onChange}}\n          @value={{this.value}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"dyRIg4B9\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@onChange\\\",\\\"@value\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"value\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await screen.findByRole('listbox');\n\n        // then\n        assert.strictEqual(screen.getByRole('option', {\n          selected: true\n        }).innerText, 'Oignon');\n      });\n    });\n    (0, _qunit.module)('#defaultOption', function () {\n      (0, _qunit.test)('should display searchable input', async function (assert) {\n        this.onChange = _sinon.default.spy();\n        this.isSearchable = false;\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @onChange={{this.onChange}}\n          @isSearchable={{this.isSearchable}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"rtQ8nefr\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@onChange\\\",\\\"@isSearchable\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"onChange\\\"]],[30,0,[\\\"isSearchable\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await screen.findByRole('listbox');\n        await (0, _testHelpers.click)(screen.getByRole('option', {\n          name: 'Choisissez une option'\n        }));\n\n        // then\n        _sinon.default.assert.calledWithMatch(this.onChange, '');\n        assert.ok(this.onChange.called);\n      });\n    });\n    (0, _qunit.module)('#isSearchable', function () {\n      (0, _qunit.test)('should display searchable input', async function (assert) {\n        this.isSearchable = true;\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @searchLabel={{this.searchLabel}}\n          @searchPlaceholder={{this.searchPlaceholder}}\n          @isSearchable={{this.isSearchable}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"WtI4UuVk\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@searchLabel\\\",\\\"@searchPlaceholder\\\",\\\"@isSearchable\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"searchLabel\\\"]],[30,0,[\\\"searchPlaceholder\\\"]],[30,0,[\\\"isSearchable\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await screen.findByRole('listbox');\n        assert.dom(screen.getByLabelText('Rechercher')).exists();\n      });\n      (0, _qunit.test)('should focus on search input', async function (assert) {\n        this.isSearchable = true;\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @searchLabel={{this.searchLabel}}\n          @searchPlaceholder={{this.searchPlaceholder}}\n          @isSearchable={{this.isSearchable}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"WtI4UuVk\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@searchLabel\\\",\\\"@searchPlaceholder\\\",\\\"@isSearchable\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"searchLabel\\\"]],[30,0,[\\\"searchPlaceholder\\\"]],[30,0,[\\\"isSearchable\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await screen.findByRole('listbox');\n        (0, _dom.fireEvent)(document.querySelector('.pix-select__dropdown'), new Event('transitionend'));\n        assert.dom(screen.getByLabelText('Rechercher')).isFocused();\n      });\n      (0, _qunit.test)('should filter the option corresponding to the string', async function (assert) {\n        this.isSearchable = true;\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @searchLabel={{this.searchLabel}}\n          @searchPlaceholder={{this.searchPlaceholder}}\n          @isSearchable={{this.isSearchable}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"WtI4UuVk\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@searchLabel\\\",\\\"@searchPlaceholder\\\",\\\"@isSearchable\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"searchLabel\\\"]],[30,0,[\\\"searchPlaceholder\\\"]],[30,0,[\\\"isSearchable\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await (0, _emberTestingLibrary.fillByLabel)('Rechercher', 'Sal');\n        await screen.findByRole('listbox');\n        const filteredOptions = screen.queryAllByRole('option');\n        assert.strictEqual(filteredOptions.length, 1);\n        assert.strictEqual(filteredOptions[0].innerText, 'Salade');\n      });\n      (0, _qunit.test)('should filter without taking care of the case', async function (assert) {\n        this.isSearchable = true;\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @searchLabel={{this.searchLabel}}\n          @searchPlaceholder={{this.searchPlaceholder}}\n          @isSearchable={{this.isSearchable}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"WtI4UuVk\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@searchLabel\\\",\\\"@searchPlaceholder\\\",\\\"@isSearchable\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"searchLabel\\\"]],[30,0,[\\\"searchPlaceholder\\\"]],[30,0,[\\\"isSearchable\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await (0, _emberTestingLibrary.fillByLabel)('Rechercher', 'sal');\n        await screen.findByRole('listbox');\n        assert.strictEqual(screen.queryAllByRole('option').length, 1);\n      });\n      (0, _qunit.test)('should trim empty space before and after searched value', async function (assert) {\n        this.isSearchable = true;\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @searchLabel={{this.searchLabel}}\n          @searchPlaceholder={{this.searchPlaceholder}}\n          @isSearchable={{this.isSearchable}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"WtI4UuVk\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@searchLabel\\\",\\\"@searchPlaceholder\\\",\\\"@isSearchable\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"searchLabel\\\"]],[30,0,[\\\"searchPlaceholder\\\"]],[30,0,[\\\"isSearchable\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await (0, _emberTestingLibrary.fillByLabel)('Rechercher', ' sal ');\n        await screen.findByRole('listbox');\n        assert.strictEqual(screen.queryAllByRole('option').length, 1);\n      });\n      (0, _qunit.test)('should display placeholder text', async function (assert) {\n        this.isSearchable = true;\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @searchLabel={{this.searchLabel}}\n          @searchPlaceholder={{this.searchPlaceholder}}\n          @isSearchable={{this.isSearchable}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"WtI4UuVk\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@searchLabel\\\",\\\"@searchPlaceholder\\\",\\\"@isSearchable\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"searchLabel\\\"]],[30,0,[\\\"searchPlaceholder\\\"]],[30,0,[\\\"isSearchable\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await screen.findByRole('listbox');\n        assert.dom(screen.getByPlaceholderText('Placeholder de la recherche')).exists();\n      });\n      (0, _qunit.test)('when there is no options found it displays the empty search result message', async function (assert) {\n        this.isSearchable = true;\n        this.emptySearchMessage = 'Aucune option';\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @searchLabel={{this.searchLabel}}\n          @searchPlaceholder={{this.searchPlaceholder}}\n          @isSearchable={{this.isSearchable}}\n          @emptySearchMessage={{this.emptySearchMessage}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"2FZm8rCp\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@searchLabel\\\",\\\"@searchPlaceholder\\\",\\\"@isSearchable\\\",\\\"@emptySearchMessage\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"searchLabel\\\"]],[30,0,[\\\"searchPlaceholder\\\"]],[30,0,[\\\"isSearchable\\\"]],[30,0,[\\\"emptySearchMessage\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // when\n        await (0, _emberTestingLibrary.clickByName)('Mon menu déroulant');\n        await (0, _emberTestingLibrary.fillByLabel)('Rechercher', 'Cheddar');\n        assert.contains('Aucune option');\n      });\n    });\n    (0, _qunit.module)('#required', function () {\n      (0, _qunit.test)('it displays the astérisque', async function (assert) {\n        this.requiredLabel = 'Title requis';\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @requiredLabel={{this.requiredLabel}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"AhFyiz3l\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@requiredLabel\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"requiredLabel\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(screen.getByLabelText('* Mon menu déroulant')).exists();\n      });\n    });\n    (0, _qunit.module)('#errorMesssage', function () {\n      (0, _qunit.test)('it displays the error message', async function (assert) {\n        this.errorMessage = \"Tu t'es trompé !\";\n        const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect\n          @options={{this.options}}\n          @placeholder={{this.placeholder}}\n          @errorMessage={{this.errorMessage}}\n        ><:label>{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"kxGERVTV\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\",\\\"@placeholder\\\",\\\"@errorMessage\\\"],[[30,0,[\\\"options\\\"]],[30,0,[\\\"placeholder\\\"]],[30,0,[\\\"errorMessage\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n        assert.dom(screen.getByText(\"Tu t'es trompé !\")).exists();\n      });\n    });\n    (0, _qunit.module)('#className', function () {\n      (0, _qunit.test)('it adds a custom class', async function (assert) {\n        // given & when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSelect @className='some-custom-class' @options={{this.options}}><:label\n          >{{this.label}}</:label></PixSelect>\n        */\n        {\n          \"id\": \"a5zCmD5U\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@className\\\",\\\"@options\\\"],[\\\"some-custom-class\\\",[30,0,[\\\"options\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.dom('.some-custom-class').exists();\n      });\n    });\n    (0, _qunit.module)('#icon', function () {\n      (0, _qunit.module)('when no icon name is provided', function () {\n        (0, _qunit.test)('does not display any icon', async function (assert) {\n          // given & when\n          await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect @options={{this.options}}><:label>{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"tGBXX48l\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@options\\\"],[[30,0,[\\\"options\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // then\n          assert.dom('.fa-earth-europe').doesNotExist();\n        });\n      });\n      (0, _qunit.module)('when an icon name is provided', function () {\n        (0, _qunit.test)('displays an icon', async function (assert) {\n          // given & when\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSelect @iconName='globe' @options={{this.options}}><:label>{{this.label}}</:label></PixSelect>\n          */\n          {\n            \"id\": \"0nyIcgWL\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@iconName\\\",\\\"@options\\\"],[\\\"globe\\\",[30,0,[\\\"options\\\"]]]],[[\\\"label\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]]]]]],[],false,[\\\"pix-select\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-select-test.js\",\n            \"isStrictMode\": false\n          }));\n          const svg = screen.getAllByRole('img')[0].innerHTML;\n          // then\n          assert.true(svg.includes('#globe'));\n        });\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-selectable-tag-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | selectable-tag', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders PixSelectableTag component with label attribute', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixSelectableTag @label='test PixSelectableTag'>\n        content\n      </PixSelectableTag>\n      */\n      {\n        \"id\": \"7ALWlQq0\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\"],[\\\"test PixSelectableTag\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-selectable-tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-selectable-tag-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('test PixSelectableTag');\n    });\n    (0, _qunit.test)('it renders PixSelectableTag component with id attribute', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixSelectableTag @label='test PixSelectableTag' @id='testId'>\n        content\n      </PixSelectableTag>\n      */\n      {\n        \"id\": \"/eSrsJaa\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@id\\\"],[\\\"test PixSelectableTag\\\",\\\"testId\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-selectable-tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-selectable-tag-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom('#testId').exists();\n    });\n    (0, _qunit.test)('it renders PixSelectableTag component with checked attribute', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixSelectableTag @label='test PixSelectableTag' @id='testId' @checked='true'>\n        content\n      </PixSelectableTag>\n      */\n      {\n        \"id\": \"OPrdZH2R\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@label\\\",\\\"@id\\\",\\\"@checked\\\"],[\\\"test PixSelectableTag\\\",\\\"testId\\\",\\\"true\\\"]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-selectable-tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-selectable-tag-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom('#testId').isChecked();\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-sidebar-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@1024pix/ember-testing-library\", \"sinon\", \"dummy/tests/helpers/create-glimmer-component\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _emberTestingLibrary, _sinon, _createGlimmerComponent, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@1024pix/ember-testing-library\",0,\"sinon\",0,\"dummy/tests/helpers/create-glimmer-component\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | Sidebar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.module)('when showSidebar is equal true', function () {\n      (0, _qunit.test)('it renders the default PixSidebar', async function (assert) {\n        // given\n        this.title = \"It's a sidebar!\";\n        this.showSidebar = true;\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSidebar @title={{this.title}} @showSidebar={{this.showSidebar}}>\n          <:content>\n            content\n          </:content>\n          <:footer>\n            footer\n          </:footer>\n        </PixSidebar>\n        */\n        {\n          \"id\": \"VqWFXiSy\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@showSidebar\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"showSidebar\\\"]]]],[[\\\"content\\\",\\\"footer\\\"],[[[[1,\\\"\\\\n    content\\\\n  \\\"]],[]],[[[1,\\\"\\\\n    footer\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-sidebar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-sidebar-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.contains(\"It's a sidebar!\");\n        assert.contains('content');\n        assert.contains('footer');\n        assert.dom('.pix-sidebar--hidden').doesNotExist();\n        assert.dom('.pix-sidebar__overlay--hidden').doesNotExist();\n      });\n      (0, _qunit.module)('when close button is clicked', function () {\n        (0, _qunit.test)('it should call onClose function passed in argument', async function (assert) {\n          // given\n          this.title = 'Close me baby one more time';\n          this.showSidebar = true;\n          this.onClose = _sinon.default.stub();\n\n          // when\n          const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSidebar @title={{this.title}} @onClose={{this.onClose}} @showSidebar={{this.showSidebar}}>\n            <:content>\n              content\n            </:content>\n          </PixSidebar>\n          */\n          {\n            \"id\": \"asHuUGYK\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@onClose\\\",\\\"@showSidebar\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"onClose\\\"]],[30,0,[\\\"showSidebar\\\"]]]],[[\\\"content\\\"],[[[[1,\\\"\\\\n    content\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-sidebar\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-sidebar-test.js\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.click)(screen.getByRole('button', {\n            name: /Fermer/\n          }));\n\n          // then\n          assert.ok(this.onClose.calledOnce);\n        });\n      });\n      (0, _qunit.module)('when escape button is clicked', function () {\n        (0, _qunit.test)('it should call onClose function passed in argument', async function (assert) {\n          // given\n          this.title = 'Close me baby one more time';\n          this.showSidebar = true;\n          this.onClose = _sinon.default.stub();\n\n          // when\n          await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixSidebar @title={{this.title}} @onClose={{this.onClose}} @showSidebar={{this.showSidebar}}>\n            <:content>\n              content\n            </:content>\n          </PixSidebar>\n          */\n          {\n            \"id\": \"asHuUGYK\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@onClose\\\",\\\"@showSidebar\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"onClose\\\"]],[30,0,[\\\"showSidebar\\\"]]]],[[\\\"content\\\"],[[[[1,\\\"\\\\n    content\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-sidebar\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-sidebar-test.js\",\n            \"isStrictMode\": false\n          }));\n          await (0, _testHelpers.triggerKeyEvent)('.pix-sidebar__overlay', 'keyup', 'Escape');\n\n          // then\n          assert.ok(this.onClose.calledOnce);\n        });\n      });\n    });\n    (0, _qunit.module)('when showSidebar is false', function () {\n      (0, _qunit.test)('it should not show sidebar', async function (assert) {\n        // given\n        this.title = \"It's a sidebar!\";\n        this.showSidebar = false;\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixSidebar @title={{this.title}} @showSidebar={{this.showSidebar}}>\n          <:content>\n            content\n          </:content>\n          <:footer>\n            footer\n          </:footer>\n        </PixSidebar>\n        */\n        {\n          \"id\": \"VqWFXiSy\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@title\\\",\\\"@showSidebar\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"showSidebar\\\"]]]],[[\\\"content\\\",\\\"footer\\\"],[[[[1,\\\"\\\\n    content\\\\n  \\\"]],[]],[[[1,\\\"\\\\n    footer\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-sidebar\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-sidebar-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        assert.dom('.pix-sidebar--hidden').exists();\n        assert.dom('.pix-sidebar__overlay--hidden').exists();\n      });\n    });\n    (0, _qunit.test)('it should throw an error if require @title argument is missing', async function (assert) {\n      // given\n      const componentParams = {};\n\n      // when\n      const renderComponent = function () {\n        (0, _createGlimmerComponent.default)('pix-sidebar', componentParams);\n      };\n\n      // then\n      const expectedError = new Error('ERROR in PixSidebar component: @title argument is required.');\n      assert.throws(renderComponent, expectedError);\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-stars-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | stars', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the default PixStars', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixStars />\n      */\n      {\n        \"id\": \"fvu609AX\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"pix-stars\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-stars-test.js\",\n        \"isStrictMode\": false\n      }));\n      const stars = this.element.querySelectorAll('.pix-stars__item');\n\n      // then\n      assert.strictEqual(stars.length, 0);\n    });\n    (0, _qunit.test)('it renders a total of 5 empty stars', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixStars @total={{5}} />\n      */\n      {\n        \"id\": \"HUJf4hUx\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@total\\\"],[5]],null]],[],false,[\\\"pix-stars\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-stars-test.js\",\n        \"isStrictMode\": false\n      }));\n      const stars = this.element.querySelectorAll('.pix-stars__item');\n      const acquiredStars = this.element.querySelectorAll('[data-acquired]');\n\n      // then\n      assert.strictEqual(stars.length, 5);\n      assert.strictEqual(acquiredStars.length, 0);\n    });\n    (0, _qunit.test)('it renders 3 stars acquired on a total of 5', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixStars @count={{3}} @total={{5}} />\n      */\n      {\n        \"id\": \"A9Jy/s6W\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@count\\\",\\\"@total\\\"],[3,5]],null]],[],false,[\\\"pix-stars\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-stars-test.js\",\n        \"isStrictMode\": false\n      }));\n      const stars = this.element.querySelectorAll('.pix-stars__item');\n      const acquiredStars = this.element.querySelectorAll('[data-acquired]');\n\n      // then\n      assert.strictEqual(stars.length, 5);\n      assert.strictEqual(acquiredStars.length, 3);\n    });\n    (0, _qunit.test)('it renders message', async function (assert) {\n      // when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixStars @total={{3}} @alt='message' />\n      */\n      {\n        \"id\": \"hDq9P58t\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@total\\\",\\\"@alt\\\"],[3,\\\"message\\\"]],null]],[],false,[\\\"pix-stars\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-stars-test.js\",\n        \"isStrictMode\": false\n      }));\n      // then\n      assert.dom(screen.getByText('message')).exists();\n    });\n    (0, _qunit.test)('it renders the acquired start but hide unacquired', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixStars @count={{3}} />\n      */\n      {\n        \"id\": \"Rl4a4fU+\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@count\\\"],[3]],null]],[],false,[\\\"pix-stars\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-stars-test.js\",\n        \"isStrictMode\": false\n      }));\n      const stars = this.element.querySelectorAll('.pix-stars__item');\n      const acquiredStars = this.element.querySelectorAll('[data-acquired]');\n\n      // then\n      assert.strictEqual(stars.length, 3);\n      assert.strictEqual(acquiredStars.length, 3);\n    });\n    (0, _qunit.test)('it renders the color', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixStars @count={{3}} @total={{5}} @color='blue' />\n      */\n      {\n        \"id\": \"JJqcicZf\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@count\\\",\\\"@total\\\",\\\"@color\\\"],[3,5,\\\"blue\\\"]],null]],[],false,[\\\"pix-stars\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-stars-test.js\",\n        \"isStrictMode\": false\n      }));\n      const component = this.element.querySelector('.pix-stars__item--color-blue');\n\n      // then\n      assert.ok(component);\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-tag-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | pix-tag', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the given content', async function (assert) {\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTag>tag text</PixTag>\n      */\n      {\n        \"id\": \"rIHMaVJA\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"tag text\\\"]],[]]]]]],[],false,[\\\"pix-tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tag-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.contains('tag text');\n    });\n    (0, _qunit.test)('it renders with the given color class', async function (assert) {\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTag @color='primary' />\n      */\n      {\n        \"id\": \"WTQzolWm\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@color\\\"],[\\\"primary\\\"]],null]],[],false,[\\\"pix-tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tag-test.js\",\n        \"isStrictMode\": false\n      }));\n      const pixTagElement = this.element.querySelector('.pix-tag');\n      assert.ok(pixTagElement.classList.contains('pix-tag--primary'));\n    });\n    (0, _qunit.test)('it renders with attributes override', async function (assert) {\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTag @color='secondary' aria-label='world' />\n      */\n      {\n        \"id\": \"Vn/jqiv3\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"aria-label\\\",\\\"world\\\"]],[[\\\"@color\\\"],[\\\"secondary\\\"]],null]],[],false,[\\\"pix-tag\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tag-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(screen.getByLabelText('world')).exists();\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-textarea-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@1024pix/ember-testing-library\", \"dummy/tests/helpers/fill-in-by-label\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _emberTestingLibrary, _fillInByLabel, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@1024pix/ember-testing-library\",0,\"dummy/tests/helpers/fill-in-by-label\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | textarea', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const TEXTAREA_SELECTOR = '.pix-textarea textarea';\n    const ABBR_SELECTOR = '.mandatory-mark';\n    (0, _qunit.test)('it renders PixTextarea with correct id and content', async function (assert) {\n      // given\n      const newContent = 'Bonjour Pix !';\n\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTextarea @id='7' @value='old value'><:label>label</:label></PixTextarea>\n      */\n      {\n        \"id\": \"dSMr1rY9\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@value\\\"],[\\\"7\\\",\\\"old value\\\"]],[[\\\"label\\\"],[[[[1,\\\"label\\\"]],[]]]]]],[],false,[\\\"pix-textarea\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-textarea-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _fillInByLabel.default)('label', newContent);\n\n      // then\n      const textarea = this.element.querySelector(TEXTAREA_SELECTOR);\n      assert.contains('Bonjour Pix !');\n      assert.strictEqual(textarea.id, '7');\n    });\n    (0, _qunit.test)('it should count textarea characters length', async function (assert) {\n      // given\n      const defaultValue = '';\n      this.set('value', defaultValue);\n      const maxlength = 20;\n      this.set('maxlength', maxlength);\n\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTextarea @value={{this.value}} @maxlength={{this.maxlength}} @id='textarea-id'><:label\n        >label</:label></PixTextarea>\n      */\n      {\n        \"id\": \"YV2iAFcy\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@maxlength\\\",\\\"@id\\\"],[[30,0,[\\\"value\\\"]],[30,0,[\\\"maxlength\\\"]],\\\"textarea-id\\\"]],[[\\\"label\\\"],[[[[1,\\\"label\\\"]],[]]]]]],[],false,[\\\"pix-textarea\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-textarea-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _fillInByLabel.default)('label', 'Hello Pix !');\n\n      // then\n      const textarea = this.element.querySelector(TEXTAREA_SELECTOR);\n      await (0, _testHelpers.triggerEvent)(textarea, 'keyup', {\n        code: 'Enter'\n      });\n      assert.strictEqual(textarea.maxLength, maxlength);\n      assert.contains('11 / 20');\n    });\n    (0, _qunit.test)('it should be possible to add required attributes to PixTextarea', async function (assert) {\n      // given\n      const defaultValue = '';\n      this.set('value', defaultValue);\n\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTextarea @value={{this.value}} required='true'><:label>label</:label></PixTextarea>\n      */\n      {\n        \"id\": \"NPg4uxWY\",\n        \"block\": \"[[[8,[39,0],[[24,\\\"required\\\",\\\"true\\\"]],[[\\\"@value\\\"],[[30,0,[\\\"value\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"label\\\"]],[]]]]]],[],false,[\\\"pix-textarea\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-textarea-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const textarea = this.element.querySelector(TEXTAREA_SELECTOR);\n      assert.true(textarea.required);\n    });\n    (0, _qunit.test)('it should add requiredLabel message in label', async function (assert) {\n      // given\n      const requiredLabel = 'Obligatoire';\n      this.set('requiredLabel', requiredLabel);\n\n      // when{{\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTextarea @value={{this.value}} @id='pix-textarea' @requiredLabel={{this.requiredLabel}}><:label\n        >label</:label></PixTextarea>\n      */\n      {\n        \"id\": \"ZTqPapWp\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@id\\\",\\\"@requiredLabel\\\"],[[30,0,[\\\"value\\\"]],\\\"pix-textarea\\\",[30,0,[\\\"requiredLabel\\\"]]]],[[\\\"label\\\"],[[[[1,\\\"label\\\"]],[]]]]]],[],false,[\\\"pix-textarea\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-textarea-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const abbr = this.element.querySelector(ABBR_SELECTOR);\n      assert.deepEqual(abbr.title, requiredLabel);\n    });\n    (0, _qunit.test)('it should add required html attributes when given a requiredLabel argument', async function (assert) {\n      // given\n      const defaultValue = '';\n      this.set('value', defaultValue);\n\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTextarea @value={{this.value}} @requiredLabel='Obligatoire' @id='id'><:label\n        >label</:label></PixTextarea>\n      */\n      {\n        \"id\": \"MAa5lac6\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@value\\\",\\\"@requiredLabel\\\",\\\"@id\\\"],[[30,0,[\\\"value\\\"]],\\\"Obligatoire\\\",\\\"id\\\"]],[[\\\"label\\\"],[[[[1,\\\"label\\\"]],[]]]]]],[],false,[\\\"pix-textarea\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-textarea-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const textarea = this.element.querySelector(TEXTAREA_SELECTOR);\n      assert.true(textarea.required);\n      assert.strictEqual(textarea.ariaRequired, 'true');\n    });\n    (0, _qunit.test)('it should be possible to give a label', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTextarea @id='pix-select-with-label'><:label>Décrivez votre problème</:label></PixTextarea>\n      */\n      {\n        \"id\": \"zU8n7fLx\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\"],[\\\"pix-select-with-label\\\"]],[[\\\"label\\\"],[[[[1,\\\"Décrivez votre problème\\\"]],[]]]]]],[],false,[\\\"pix-textarea\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-textarea-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('Décrivez votre problème');\n    });\n    (0, _qunit.test)('it should be possible to show an error message', async function (assert) {\n      // given & when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTextarea @id='pix-textarea-with-error' @errorMessage='Veuillez remplir ce champ.'><:label\n        >label</:label></PixTextarea>\n      */\n      {\n        \"id\": \"EDtDESdT\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@id\\\",\\\"@errorMessage\\\"],[\\\"pix-textarea-with-error\\\",\\\"Veuillez remplir ce champ.\\\"]],[[\\\"label\\\"],[[[[1,\\\"label\\\"]],[]]]]]],[],false,[\\\"pix-textarea\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-textarea-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains('Veuillez remplir ce champ.');\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-toggle-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"sinon\", \"@testing-library/user-event\", \"@ember/template-factory\"], function (_qunit, _testHelpers, _emberQunit, _emberTestingLibrary, _sinon, _userEvent, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@ember/test-helpers\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"sinon\",0,\"@testing-library/user-event\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | PixToggle', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    this.label = 'Mon bouton toggle';\n    this.onLabel = 'Oui';\n    this.offLabel = 'Non';\n    (0, _qunit.test)('it renders PixToggle', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixToggle>\n        <:label>{{this.label}}</:label>\n        <:on>{{this.onLabel}}</:on>\n        <:off>{{this.offLabel}}</:off>\n      </PixToggle>\n      */\n      {\n        \"id\": \"S0LtIlYj\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"label\\\",\\\"on\\\",\\\"off\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"onLabel\\\"]]]],[]],[[[1,[30,0,[\\\"offLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-toggle\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      assert.dom(screen.getByText(this.label)).exists();\n      assert.dom(screen.getByText(this.onLabel)).exists();\n      assert.dom(screen.getByText(this.offLabel)).exists();\n    });\n    (0, _qunit.test)('it pressed PixToggle', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixToggle @toggled={{true}}>\n        <:label>{{this.label}}</:label>\n        <:on>{{this.onLabel}}</:on>\n        <:off>{{this.offLabel}}</:off>\n      </PixToggle>\n      */\n      {\n        \"id\": \"HHjZkkPU\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@toggled\\\"],[true]],[[\\\"label\\\",\\\"on\\\",\\\"off\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"onLabel\\\"]]]],[]],[[[1,[30,0,[\\\"offLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-toggle\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom(screen.getByRole('button', {\n        pressed: true\n      })).exists();\n    });\n    (0, _qunit.test)('it does not press PixToggle', async function (assert) {\n      // given & when\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixToggle @toggled={{false}}>\n        <:label>{{this.label}}</:label>\n        <:on>{{this.onLabel}}</:on>\n        <:off>{{this.offLabel}}</:off>\n      </PixToggle>\n      */\n      {\n        \"id\": \"x5+7i2qL\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@toggled\\\"],[false]],[[\\\"label\\\",\\\"on\\\",\\\"off\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"onLabel\\\"]]]],[]],[[[1,[30,0,[\\\"offLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-toggle\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.dom(screen.getByRole('button', {\n        pressed: false\n      })).exists();\n    });\n    (0, _qunit.test)('it calls onChange when PixToggle is not pressed with value true', async function (assert) {\n      // given & when\n      this.onChange = _sinon.default.spy();\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixToggle @toggled={{false}} @onChange={{this.onChange}}>\n        <:label>{{this.label}}</:label>\n        <:on>{{this.onLabel}}</:on>\n        <:off>{{this.offLabel}}</:off>\n      \n      </PixToggle>\n      */\n      {\n        \"id\": \"cJfV15qE\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@toggled\\\",\\\"@onChange\\\"],[false,[30,0,[\\\"onChange\\\"]]]],[[\\\"label\\\",\\\"on\\\",\\\"off\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"onLabel\\\"]]]],[]],[[[1,[30,0,[\\\"offLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-toggle\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)(screen.getByRole('button'));\n\n      // then\n      _sinon.default.assert.calledWith(this.onChange, true);\n      assert.ok(this.onChange.called);\n    });\n    (0, _qunit.test)('it calls onChange when PixToggle is pressed with value false', async function (assert) {\n      // given & when\n      this.onChange = _sinon.default.spy();\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixToggle @toggled={{true}} @onChange={{this.onChange}}>\n        <:label>{{this.label}}</:label>\n        <:on>{{this.onLabel}}</:on>\n        <:off>{{this.offLabel}}</:off>\n      </PixToggle>\n      */\n      {\n        \"id\": \"L9nx5B44\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@toggled\\\",\\\"@onChange\\\"],[true,[30,0,[\\\"onChange\\\"]]]],[[\\\"label\\\",\\\"on\\\",\\\"off\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"onLabel\\\"]]]],[]],[[[1,[30,0,[\\\"offLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-toggle\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.click)(screen.getByRole('button'));\n\n      // then\n      _sinon.default.assert.calledWith(this.onChange, false);\n      assert.ok(this.onChange.called);\n    });\n    (0, _qunit.test)('it calls onChange when Enter is pressed', async function (assert) {\n      // given & when\n      this.onChange = _sinon.default.spy();\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixToggle @onChange={{this.onChange}}>\n        <:label>{{this.label}}</:label>\n        <:on>{{this.onLabel}}</:on>\n        <:off>{{this.offLabel}}</:off>\n      \n      </PixToggle>\n      */\n      {\n        \"id\": \"hE+pt2Ud\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],[[\\\"label\\\",\\\"on\\\",\\\"off\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"onLabel\\\"]]]],[]],[[[1,[30,0,[\\\"offLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-toggle\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      await screen.getByRole('button').focus();\n      await _userEvent.default.keyboard('[Enter]');\n\n      // then\n      assert.ok(this.onChange.called);\n    });\n    (0, _qunit.test)('it calls onChange when Space is pressed', async function (assert) {\n      // given & when\n      this.onChange = _sinon.default.spy();\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixToggle @onChange={{this.onChange}}>\n        <:label>{{this.label}}</:label>\n        <:on>{{this.onLabel}}</:on>\n        <:off>{{this.offLabel}}</:off>\n      \n      </PixToggle>\n      */\n      {\n        \"id\": \"hE+pt2Ud\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@onChange\\\"],[[30,0,[\\\"onChange\\\"]]]],[[\\\"label\\\",\\\"on\\\",\\\"off\\\"],[[[[1,[30,0,[\\\"label\\\"]]]],[]],[[[1,[30,0,[\\\"onLabel\\\"]]]],[]],[[[1,[30,0,[\\\"offLabel\\\"]]]],[]]]]]],[],false,[\\\"pix-toggle\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-toggle-test.js\",\n        \"isStrictMode\": false\n      }));\n      await screen.getByRole('button').focus();\n      await _userEvent.default.keyboard('[Space]');\n\n      // then\n      assert.ok(this.onChange.called);\n    });\n  });\n});","define(\"dummy/tests/integration/components/pix-tooltip-test\", [\"qunit\", \"ember-qunit\", \"@1024pix/ember-testing-library\", \"@testing-library/user-event\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _emberTestingLibrary, _userEvent, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@1024pix/ember-testing-library\",0,\"@testing-library/user-event\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Component | pix-tooltip', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    const TOOLTIP_SELECTOR = '.pix-tooltip__content';\n    const text = 'Un texte à afficher au survol du contenu de la tooltip';\n    (0, _qunit.test)('it renders the tooltip text', async function (assert) {\n      // given\n      this.set('text', text);\n\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTooltip>\n        <:triggerElement>\n          template block text\n        </:triggerElement>\n      \n        <:tooltip>\n          {{this.text}}\n        </:tooltip>\n      </PixTooltip>\n      */\n      {\n        \"id\": \"S8ZSSEEe\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"triggerElement\\\",\\\"tooltip\\\"],[[[[1,\\\"\\\\n    template block text\\\\n  \\\"]],[]],[[[1,\\\"\\\\n    \\\"],[1,[30,0,[\\\"text\\\"]]],[1,\\\"\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-tooltip\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tooltip-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      assert.contains(text);\n    });\n    (0, _qunit.test)('it renders only the inner data if there is no tooltip text', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTooltip>\n        <:triggerElement>\n          template block text\n        </:triggerElement>\n      </PixTooltip>\n      */\n      {\n        \"id\": \"jub7rcmx\",\n        \"block\": \"[[[8,[39,0],null,null,[[\\\"triggerElement\\\"],[[[[1,\\\"\\\\n    template block text\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-tooltip\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tooltip-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const tooltipContentElement = this.element.querySelector(TOOLTIP_SELECTOR);\n      assert.contains('template block text');\n      assert.notOk(tooltipContentElement);\n    });\n    (0, _qunit.test)('it renders only the inner data if hide is true', async function (assert) {\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTooltip @hide={{true}}>\n        <:triggerElement>\n          template block text\n        </:triggerElement>\n        <:tooltip></:tooltip>\n      </PixTooltip>\n      */\n      {\n        \"id\": \"KcJz9oDa\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@hide\\\"],[true]],[[\\\"triggerElement\\\",\\\"tooltip\\\"],[[[[1,\\\"\\\\n    template block text\\\\n  \\\"]],[]],[[],[]]]]]],[],false,[\\\"pix-tooltip\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tooltip-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // then\n      const tooltipContentElement = this.element.querySelector(TOOLTIP_SELECTOR);\n      assert.contains('template block text');\n      assert.notOk(tooltipContentElement);\n    });\n    (0, _qunit.test)('it dismissed tooltip on escape keyup', async function (assert) {\n      // given\n      const screen = await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixTooltip @position='bottom'>\n        <:triggerElement>\n          <PixButton>Trigger</PixButton>\n        </:triggerElement>\n        <:tooltip>Some tooltip</:tooltip>\n      </PixTooltip>\n      */\n      {\n        \"id\": \"Uz3tJrmJ\",\n        \"block\": \"[[[8,[39,0],null,[[\\\"@position\\\"],[\\\"bottom\\\"]],[[\\\"triggerElement\\\",\\\"tooltip\\\"],[[[[1,\\\"\\\\n    \\\"],[8,[39,1],null,null,[[\\\"default\\\"],[[[[1,\\\"Trigger\\\"]],[]]]]],[1,\\\"\\\\n  \\\"]],[]],[[[1,\\\"Some tooltip\\\"]],[]]]]]],[],false,[\\\"pix-tooltip\\\",\\\"pix-button\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tooltip-test.js\",\n        \"isStrictMode\": false\n      }));\n\n      // when\n      await screen.getByRole('button', {\n        name: 'Trigger'\n      }).focus();\n      await _userEvent.default.keyboard('[Escape]');\n\n      // then\n      assert.dom('.pix-tooltip').doesNotHaveClass('pix-tooltip--visible');\n    });\n    (0, _qunit.module)('tooltip position', function () {\n      const TOOLTIP_POSITION_SELECTOR = 'pix-tooltip__content--';\n      ['top', 'top-left', 'top-right', 'right', 'left', 'bottom', 'bottom-left', 'bottom-right'].forEach(function (position) {\n        (0, _qunit.test)(`it can render ${position}`, async function (assert) {\n          // given\n          this.set('text', text);\n          this.set('position', position);\n\n          // when\n          await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n          /*\n            <PixTooltip @position={{this.position}}>\n            <:tooltip>\n              {{this.text}}\n            </:tooltip>\n          </PixTooltip>\n          */\n          {\n            \"id\": \"MyT2RJFA\",\n            \"block\": \"[[[8,[39,0],null,[[\\\"@position\\\"],[[30,0,[\\\"position\\\"]]]],[[\\\"tooltip\\\"],[[[[1,\\\"\\\\n    \\\"],[1,[30,0,[\\\"text\\\"]]],[1,\\\"\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-tooltip\\\"]]\",\n            \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tooltip-test.js\",\n            \"isStrictMode\": false\n          }));\n\n          // then\n          const tooltipContentElement = this.element.querySelector(TOOLTIP_SELECTOR);\n          assert.ok(tooltipContentElement.classList.toString().includes(TOOLTIP_POSITION_SELECTOR + position));\n        });\n      });\n    });\n    (0, _qunit.module)('tooltip light display', function () {\n      const LIGHT_CLASS = 'pix-tooltip__content--light';\n      (0, _qunit.test)('it can render in dark mode', async function (assert) {\n        // given\n        this.set('text', text);\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixTooltip>\n          <:tooltip>\n            {{this.text}}\n          </:tooltip>\n        </PixTooltip>\n        */\n        {\n          \"id\": \"5TGg6C/I\",\n          \"block\": \"[[[8,[39,0],null,null,[[\\\"tooltip\\\"],[[[[1,\\\"\\\\n    \\\"],[1,[30,0,[\\\"text\\\"]]],[1,\\\"\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-tooltip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tooltip-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const tooltipContentElement = this.element.querySelector(TOOLTIP_SELECTOR);\n        const tooltipContentClasses = tooltipContentElement.classList.toString().trim();\n        assert.false(tooltipContentClasses.includes(LIGHT_CLASS));\n      });\n      (0, _qunit.test)('it can render in light mode', async function (assert) {\n        // given\n        this.set('text', text);\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixTooltip @isLight={{true}}>\n          <:tooltip>\n            {{this.text}}\n          </:tooltip>\n        </PixTooltip>\n        */\n        {\n          \"id\": \"g488XR1V\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isLight\\\"],[true]],[[\\\"tooltip\\\"],[[[[1,\\\"\\\\n    \\\"],[1,[30,0,[\\\"text\\\"]]],[1,\\\"\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-tooltip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tooltip-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const tooltipContentElement = this.element.querySelector(TOOLTIP_SELECTOR);\n        assert.ok(tooltipContentElement.classList.toString().includes(LIGHT_CLASS));\n      });\n    });\n    (0, _qunit.module)('tooltip inline display', function () {\n      const INLINE_CLASS = 'pix-tooltip__content--inline';\n      (0, _qunit.test)('it can render in multiple lines', async function (assert) {\n        // given\n        this.set('text', text);\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixTooltip>\n          <:tooltip>\n            {{this.text}}\n          </:tooltip>\n        </PixTooltip>\n        */\n        {\n          \"id\": \"5TGg6C/I\",\n          \"block\": \"[[[8,[39,0],null,null,[[\\\"tooltip\\\"],[[[[1,\\\"\\\\n    \\\"],[1,[30,0,[\\\"text\\\"]]],[1,\\\"\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-tooltip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tooltip-test.js\",\n          \"isStrictMode\": false\n        }));\n        const tooltipContentElement = this.element.querySelector(TOOLTIP_SELECTOR);\n        const tooltipContentClasses = tooltipContentElement.classList.toString().trim();\n\n        // then\n        assert.false(tooltipContentClasses.includes(INLINE_CLASS));\n      });\n      (0, _qunit.test)('it can render inline', async function (assert) {\n        // given\n        this.set('text', text);\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixTooltip @isInline={{true}}>\n          <:tooltip>\n            {{this.text}}\n          </:tooltip>\n        </PixTooltip>\n        */\n        {\n          \"id\": \"2tioRO3E\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isInline\\\"],[true]],[[\\\"tooltip\\\"],[[[[1,\\\"\\\\n    \\\"],[1,[30,0,[\\\"text\\\"]]],[1,\\\"\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-tooltip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tooltip-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const tooltipContentElement = this.element.querySelector(TOOLTIP_SELECTOR);\n        assert.ok(tooltipContentElement.classList.toString().includes(INLINE_CLASS));\n      });\n    });\n    (0, _qunit.module)('tooltip wide display', function () {\n      const WIDE_CLASS = 'pix-tooltip__content--wide';\n      (0, _qunit.test)('it can render not widely', async function (assert) {\n        // given\n        this.set('text', text);\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixTooltip>\n          <:tooltip>\n            {{this.text}}\n          </:tooltip>\n        </PixTooltip>\n        */\n        {\n          \"id\": \"5TGg6C/I\",\n          \"block\": \"[[[8,[39,0],null,null,[[\\\"tooltip\\\"],[[[[1,\\\"\\\\n    \\\"],[1,[30,0,[\\\"text\\\"]]],[1,\\\"\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-tooltip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tooltip-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const tooltipContentElement = this.element.querySelector(TOOLTIP_SELECTOR);\n        const tooltipContentClasses = tooltipContentElement.classList.toString().trim();\n        assert.false(tooltipContentClasses.includes(WIDE_CLASS));\n      });\n      (0, _qunit.test)('it can render widely', async function (assert) {\n        // given\n        this.set('text', text);\n\n        // when\n        await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n        /*\n          <PixTooltip @isWide={{true}}>\n          <:tooltip>\n            {{this.text}}\n          </:tooltip>\n        </PixTooltip>\n        */\n        {\n          \"id\": \"4ILl2Sqf\",\n          \"block\": \"[[[8,[39,0],null,[[\\\"@isWide\\\"],[true]],[[\\\"tooltip\\\"],[[[[1,\\\"\\\\n    \\\"],[1,[30,0,[\\\"text\\\"]]],[1,\\\"\\\\n  \\\"]],[]]]]]],[],false,[\\\"pix-tooltip\\\"]]\",\n          \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/components/pix-tooltip-test.js\",\n          \"isStrictMode\": false\n        }));\n\n        // then\n        const tooltipContentElement = this.element.querySelector(TOOLTIP_SELECTOR);\n        assert.ok(tooltipContentElement.classList.toString().includes(WIDE_CLASS));\n      });\n    });\n  });\n});","define(\"dummy/tests/integration/modifiers/on-escape-action-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\", \"@1024pix/ember-testing-library\", \"sinon\", \"@ember/template-factory\"], function (_qunit, _emberQunit, _testHelpers, _emberTestingLibrary, _sinon, _templateFactory) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"@ember/test-helpers\",0,\"@1024pix/ember-testing-library\",0,\"sinon\",0,\"@ember/template-factory\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Integration | Modifier | on-escape-action', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it fires action on escape keyup', async function (assert) {\n      // given\n      this.title = 'Close me baby one more time';\n      this.onCloseButtonClick = _sinon.default.stub();\n\n      // when\n      await (0, _emberTestingLibrary.render)((0, _templateFactory.createTemplateFactory)(\n      /*\n        <PixModal\n        @title={{this.title}}\n        @onCloseButtonClick={{this.onCloseButtonClick}}\n        {{on-escape-action this.onCloseButtonClick}}\n        {{trap-focus}}\n      >\n        content\n      </PixModal>\n      */\n      {\n        \"id\": \"wK/vQSSf\",\n        \"block\": \"[[[8,[39,0],[[4,[38,1],[[30,0,[\\\"onCloseButtonClick\\\"]]],null],[4,[38,2],null,null]],[[\\\"@title\\\",\\\"@onCloseButtonClick\\\"],[[30,0,[\\\"title\\\"]],[30,0,[\\\"onCloseButtonClick\\\"]]]],[[\\\"default\\\"],[[[[1,\\\"\\\\n  content\\\\n\\\"]],[]]]]]],[],false,[\\\"pix-modal\\\",\\\"on-escape-action\\\",\\\"trap-focus\\\"]]\",\n        \"moduleName\": \"/home/runner/work/pix-ui/pix-ui/dummy/tests/integration/modifiers/on-escape-action-test.js\",\n        \"isStrictMode\": false\n      }));\n      await (0, _testHelpers.triggerKeyEvent)('.pix-modal__overlay', 'keyup', 'Escape');\n\n      // then\n      assert.ok(this.onCloseButtonClick.calledOnce);\n    });\n  });\n});","define(\"dummy/tests/test-helper\", [\"dummy/app\", \"dummy/config/environment\", \"qunit\", \"@ember/test-helpers\", \"qunit-dom\", \"ember-qunit\", \"dummy/tests/helpers/contains\"], function (_app, _environment, QUnit, _testHelpers, _qunitDom, _emberQunit, _contains) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"dummy/app\",0,\"dummy/config/environment\",0,\"qunit\",0,\"@ember/test-helpers\",0,\"qunit-dom\",0,\"ember-qunit\",0,\"dummy/tests/helpers/contains\"eaimeta@70e063a35619d71f\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _emberQunit.start)();\n  QUnit.assert.contains = _contains.contains;\n});","define(\"dummy/tests/unit/components/pix-banner-test\", [\"qunit\", \"ember-qunit\", \"dummy/tests/helpers/create-glimmer-component\", \"sinon\"], function (_qunit, _emberQunit, _createGlimmerComponent, _sinon) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"dummy/tests/helpers/create-glimmer-component\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Unit | Component | PixBanner', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.module)('#closeBanner', function () {\n      (0, _qunit.module)('when onCloseBannerTriggerAction is set', function () {\n        (0, _qunit.test)('it should call the custom action', async function (assert) {\n          // given\n          const params = Symbol();\n          const onCloseBannerTriggerAction = _sinon.default.stub();\n          const componentParams = {\n            canCloseBanner: true,\n            onCloseBannerTriggerAction\n          };\n          const component = (0, _createGlimmerComponent.default)('pix-banner', componentParams);\n\n          // when\n          await component.closeBanner(params);\n\n          // then\n          _sinon.default.assert.calledWith(onCloseBannerTriggerAction, params);\n          assert.ok(true);\n        });\n      });\n    });\n  });\n});","define(\"dummy/tests/unit/components/pix-radio-button-test\", [\"qunit\", \"ember-qunit\", \"dummy/tests/helpers/create-glimmer-component\"], function (_qunit, _emberQunit, _createGlimmerComponent) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"dummy/tests/helpers/create-glimmer-component\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Unit | Component | PixRadioButton', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.module)('#isDisabled', function () {\n      (0, _qunit.module)('when @isDisabled is a boolean', function () {\n        (0, _qunit.module)('when @isDisabled is true', function () {\n          (0, _qunit.test)('it should return \"true\"', function (assert) {\n            // given\n            const isDisabled = true;\n            const component = (0, _createGlimmerComponent.default)('pix-radio-button', {\n              isDisabled\n            });\n\n            // when\n            const result = component.isDisabled;\n\n            // then\n            assert.strictEqual(result, 'true');\n          });\n        });\n        (0, _qunit.module)('when @isDisabled is false', function () {\n          (0, _qunit.test)('it should return null', function (assert) {\n            // given\n            const isDisabled = false;\n            const component = (0, _createGlimmerComponent.default)('pix-radio-button', {\n              isDisabled\n            });\n\n            // when\n            const result = component.isDisabled;\n\n            // then\n            assert.strictEqual(result, null);\n          });\n        });\n      });\n      (0, _qunit.module)('when @isDisabled is a string', function () {\n        (0, _qunit.module)('when @isDisabled is \"true\"', function () {\n          (0, _qunit.test)('it should return \"true\"', function (assert) {\n            // given\n            const isDisabled = 'true';\n            const component = (0, _createGlimmerComponent.default)('pix-radio-button', {\n              isDisabled\n            });\n\n            // when\n            const result = component.isDisabled;\n\n            // then\n            assert.strictEqual(result, 'true');\n          });\n        });\n        (0, _qunit.module)('when @isDisabled is \"false\"', function () {\n          (0, _qunit.test)('it should return \"true\"', function (assert) {\n            // given\n            const isDisabled = 'false';\n            const component = (0, _createGlimmerComponent.default)('pix-radio-button', {\n              isDisabled\n            });\n\n            // when\n            const result = component.isDisabled;\n\n            // then\n            assert.strictEqual(result, 'true');\n          });\n        });\n      });\n    });\n    (0, _qunit.module)('#stateWarning', function () {\n      (0, _qunit.module)('when @isDisabled is false and @state is success', function () {\n        (0, _qunit.test)('it should return false', function (assert) {\n          // given\n          const isDisabled = false;\n          const state = 'success';\n          const component = (0, _createGlimmerComponent.default)('pix-radio-button', {\n            isDisabled,\n            state\n          });\n\n          // when\n          const result = component.stateWarning;\n\n          // then\n          assert.false(result);\n        });\n      });\n    });\n  });\n});","define(\"dummy/tests/unit/components/pix-return-to-test\", [\"qunit\", \"ember-qunit\", \"dummy/tests/helpers/create-glimmer-component\"], function (_qunit, _emberQunit, _createGlimmerComponent) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"dummy/tests/helpers/create-glimmer-component\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Unit | Component | pix-return-to', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('its default color is black', function (assert) {\n      // given\n      const componentParams = {\n        route: 'uneRoute',\n        shade: 'test'\n      };\n      const expectedShade = 'black';\n      const component = (0, _createGlimmerComponent.default)('pix-return-to', componentParams);\n\n      // when & then\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(component.shade, expectedShade);\n    });\n    (0, _qunit.test)('it can be white', function (assert) {\n      // given\n      const componentParams = {\n        route: 'uneRoute',\n        shade: 'white'\n      };\n      const expectedShade = 'white';\n      const component = (0, _createGlimmerComponent.default)('pix-return-to', componentParams);\n\n      // when & then\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(component.shade, expectedShade);\n    });\n    (0, _qunit.test)('it throws if route param is undefined or empty', function (assert) {\n      // given\n      const componentParams = {\n        route: '  '\n      };\n      const expectedError = new Error('ERROR in PixReturnTo component, @route param is not provided');\n      const component = (0, _createGlimmerComponent.default)('pix-return-to', componentParams);\n\n      // when & then\n      assert.throws(function () {\n        component.route;\n      }, expectedError);\n    });\n  });\n});","define(\"dummy/tests/unit/components/pix-search-input-test\", [\"qunit\", \"ember-qunit\", \"dummy/tests/helpers/create-glimmer-component\", \"sinon\"], function (_qunit, _emberQunit, _createGlimmerComponent, _sinon) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"dummy/tests/helpers/create-glimmer-component\",0,\"sinon\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Unit | Component | pix-search-input', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.module)('when there are errors in params', function () {\n      (0, _qunit.test)('it should throw an error if there is no triggerFiltering given', async function (assert) {\n        // given\n        const componentParams = {\n          label: 'Super label',\n          debounceTimeInMs: 1000,\n          triggerFiltering: null\n        };\n\n        // when & then\n        assert.throws(function () {\n          (0, _createGlimmerComponent.default)('pix-search-input', componentParams);\n        }, new Error('ERROR in PixSearchInput component, @triggerFiltering param is not provided'));\n      });\n      (0, _qunit.test)('it should throw an error if there is no debounce time given', async function (assert) {\n        // given\n        const componentParams = {\n          label: 'Super label',\n          debounceTimeInMs: null,\n          triggerFiltering: _sinon.default.stub()\n        };\n\n        // when & then\n        assert.throws(function () {\n          (0, _createGlimmerComponent.default)('pix-search-input', componentParams);\n        }, new Error('ERROR in PixSearchInput component, @debounceTimeInMs param is not provided'));\n      });\n    });\n  });\n});","define(\"dummy/tests/unit/components/pix-select-test\", [\"qunit\", \"ember-qunit\", \"dummy/tests/helpers/create-glimmer-component\"], function (_qunit, _emberQunit, _createGlimmerComponent) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"ember-qunit\",0,\"dummy/tests/helpers/create-glimmer-component\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Unit | Component | pix-select', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('its should return the default className', function (assert) {\n      // given\n      const componentParams = {\n        label: 'Un label',\n        options: []\n      };\n      const component = (0, _createGlimmerComponent.default)('pix-select', componentParams);\n\n      // when & then\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(component.className, 'pix-select-button');\n    });\n    (0, _qunit.test)('it should add a custom class name', function (assert) {\n      // given\n      const componentParams = {\n        label: 'Un label',\n        options: [],\n        className: 'custom-class'\n      };\n      const component = (0, _createGlimmerComponent.default)('pix-select', componentParams);\n\n      // when & then\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(component.className, 'pix-select-button custom-class');\n    });\n    (0, _qunit.test)('it should add an error class name', function (assert) {\n      // given\n      const componentParams = {\n        label: 'Un label',\n        options: [],\n        errorMessage: 'there is an error'\n      };\n      const component = (0, _createGlimmerComponent.default)('pix-select', componentParams);\n\n      // when & then\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(component.className, 'pix-select-button pix-select-button--error');\n    });\n    (0, _qunit.test)('it should add an error class name and a custom class', function (assert) {\n      // given\n      const componentParams = {\n        label: 'Un label',\n        options: [],\n        errorMessage: 'there is an error',\n        className: 'custom-class'\n      };\n      const component = (0, _createGlimmerComponent.default)('pix-select', componentParams);\n\n      // when & then\n      // TODO: Fix this the next time the file is edited.\n      // eslint-disable-next-line qunit/no-assert-equal\n      assert.equal(component.className, 'pix-select-button custom-class pix-select-button--error');\n    });\n  });\n});","define(\"dummy/tests/unit/translations/flatten-object-test\", [\"qunit\", \"@1024pix/pix-ui/translations\"], function (_qunit, _translations) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"qunit\",0,\"@1024pix/pix-ui/translations\"eaimeta@70e063a35619d71f\n  (0, _qunit.module)('Unit | Translations', function () {\n    (0, _qunit.module)('#flattenObject', function () {\n      (0, _qunit.test)('it should deeply flatten an object using dot notation', function (assert) {\n        // given\n        const object = {\n          nested1: {\n            nested11: {\n              nested111: 'nested111'\n            },\n            nested12: 'nested12'\n          },\n          nested2: {\n            nested21: {\n              nested211: 'nested211',\n              nested212: 'nested212'\n            }\n          },\n          nested3: 'nested3'\n        };\n\n        // when\n        const result = (0, _translations.flattenObject)(object);\n\n        // then\n        assert.deepEqual(result, {\n          'nested1.nested11.nested111': 'nested111',\n          'nested1.nested12': 'nested12',\n          'nested2.nested21.nested211': 'nested211',\n          'nested2.nested21.nested212': 'nested212',\n          nested3: 'nested3'\n        });\n      });\n    });\n  });\n});","define('dummy/config/environment', [], function() {\n  var prefix = 'dummy';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxvpiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChxlzrhxrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}